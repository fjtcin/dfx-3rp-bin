-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gemm_mmult_Pipeline_readA_VITIS_LOOP_36_4 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    select_ln23_4 : IN STD_LOGIC_VECTOR (31 downto 0);
    trunc_ln4 : IN STD_LOGIC_VECTOR (13 downto 0);
    a_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    a_ce0 : OUT STD_LOGIC;
    a_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    trunc_ln23_2_mid2 : IN STD_LOGIC_VECTOR (13 downto 0);
    trunc_ln : IN STD_LOGIC_VECTOR (13 downto 0);
    current_tile_K_dim : IN STD_LOGIC_VECTOR (31 downto 0);
    localA_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    localA_ce0 : OUT STD_LOGIC;
    localA_we0 : OUT STD_LOGIC;
    localA_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    localA_ce1 : OUT STD_LOGIC;
    localA_we1 : OUT STD_LOGIC;
    localA_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    localA_1_ce0 : OUT STD_LOGIC;
    localA_1_we0 : OUT STD_LOGIC;
    localA_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_1_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    localA_1_ce1 : OUT STD_LOGIC;
    localA_1_we1 : OUT STD_LOGIC;
    localA_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    localA_2_ce0 : OUT STD_LOGIC;
    localA_2_we0 : OUT STD_LOGIC;
    localA_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_2_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    localA_2_ce1 : OUT STD_LOGIC;
    localA_2_we1 : OUT STD_LOGIC;
    localA_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    localA_3_ce0 : OUT STD_LOGIC;
    localA_3_we0 : OUT STD_LOGIC;
    localA_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_3_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    localA_3_ce1 : OUT STD_LOGIC;
    localA_3_we1 : OUT STD_LOGIC;
    localA_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    localA_4_ce0 : OUT STD_LOGIC;
    localA_4_we0 : OUT STD_LOGIC;
    localA_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_4_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    localA_4_ce1 : OUT STD_LOGIC;
    localA_4_we1 : OUT STD_LOGIC;
    localA_4_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_5_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    localA_5_ce0 : OUT STD_LOGIC;
    localA_5_we0 : OUT STD_LOGIC;
    localA_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_5_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    localA_5_ce1 : OUT STD_LOGIC;
    localA_5_we1 : OUT STD_LOGIC;
    localA_5_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    localA_6_ce0 : OUT STD_LOGIC;
    localA_6_we0 : OUT STD_LOGIC;
    localA_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_6_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    localA_6_ce1 : OUT STD_LOGIC;
    localA_6_we1 : OUT STD_LOGIC;
    localA_6_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    localA_7_ce0 : OUT STD_LOGIC;
    localA_7_we0 : OUT STD_LOGIC;
    localA_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_7_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    localA_7_ce1 : OUT STD_LOGIC;
    localA_7_we1 : OUT STD_LOGIC;
    localA_7_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_8_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    localA_8_ce0 : OUT STD_LOGIC;
    localA_8_we0 : OUT STD_LOGIC;
    localA_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_8_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    localA_8_ce1 : OUT STD_LOGIC;
    localA_8_we1 : OUT STD_LOGIC;
    localA_8_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_9_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    localA_9_ce0 : OUT STD_LOGIC;
    localA_9_we0 : OUT STD_LOGIC;
    localA_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_9_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    localA_9_ce1 : OUT STD_LOGIC;
    localA_9_we1 : OUT STD_LOGIC;
    localA_9_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_10_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    localA_10_ce0 : OUT STD_LOGIC;
    localA_10_we0 : OUT STD_LOGIC;
    localA_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_10_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    localA_10_ce1 : OUT STD_LOGIC;
    localA_10_we1 : OUT STD_LOGIC;
    localA_10_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_11_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    localA_11_ce0 : OUT STD_LOGIC;
    localA_11_we0 : OUT STD_LOGIC;
    localA_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    localA_11_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    localA_11_ce1 : OUT STD_LOGIC;
    localA_11_we1 : OUT STD_LOGIC;
    localA_11_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of gemm_mmult_Pipeline_readA_VITIS_LOOP_36_4 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv8_90 : STD_LOGIC_VECTOR (7 downto 0) := "10010000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln35_fu_408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal select_ln35_fu_429_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln35_reg_592 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln35_reg_592_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln35_reg_592_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln35_2_fu_461_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln35_2_reg_597 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln35_2_reg_597_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln35_2_reg_597_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln35_2_reg_597_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln37_fu_505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln37_reg_606 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln37_reg_606_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln37_reg_606_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln37_reg_606_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal localA_addr_reg_610 : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_addr_reg_610_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_addr_reg_610_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_addr_reg_610_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_1_addr_reg_615 : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_1_addr_reg_615_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_1_addr_reg_615_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_1_addr_reg_615_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_2_addr_reg_620 : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_2_addr_reg_620_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_2_addr_reg_620_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_2_addr_reg_620_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_3_addr_reg_625 : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_3_addr_reg_625_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_3_addr_reg_625_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_3_addr_reg_625_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_4_addr_reg_630 : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_4_addr_reg_630_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_4_addr_reg_630_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_4_addr_reg_630_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_5_addr_reg_635 : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_5_addr_reg_635_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_5_addr_reg_635_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_5_addr_reg_635_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_6_addr_reg_640 : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_6_addr_reg_640_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_6_addr_reg_640_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_6_addr_reg_640_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_7_addr_reg_645 : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_7_addr_reg_645_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_7_addr_reg_645_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_7_addr_reg_645_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_8_addr_reg_650 : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_8_addr_reg_650_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_8_addr_reg_650_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_8_addr_reg_650_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_9_addr_reg_655 : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_9_addr_reg_655_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_9_addr_reg_655_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_9_addr_reg_655_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_10_addr_reg_660 : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_10_addr_reg_660_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_10_addr_reg_660_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_10_addr_reg_660_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_11_addr_reg_665 : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_11_addr_reg_665_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_11_addr_reg_665_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal localA_11_addr_reg_665_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal c_a_cast11_fu_479_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln38_fu_545_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal c_a_fu_94 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln36_fu_511_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_c_a_load : STD_LOGIC_VECTOR (3 downto 0);
    signal r_a_fu_98 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_allocacmp_r_a_1 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten_fu_102 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln35_fu_414_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_indvar_flatten_load : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln35_fu_398_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln36_fu_423_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln35_2_fu_437_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln35_1_fu_443_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal cmp26_mid1_fu_447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp26_fu_402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln35_2_fu_469_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal c_a_cast_fu_495_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln35_1_fu_453_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_fu_499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_a_cast6_fu_532_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln38_fu_535_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_550_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln38_1_fu_540_p2 : STD_LOGIC_VECTOR (13 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of add_ln38_1_fu_540_p2 : signal is "no";
    signal grp_fu_550_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component gemm_mul_mul_14s_14s_14_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component gemm_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_mul_14s_14s_14_4_1_U11 : component gemm_mul_mul_14s_14s_14_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 14,
        din1_WIDTH => 14,
        dout_WIDTH => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_550_p0,
        din1 => trunc_ln,
        ce => ap_const_logic_1,
        dout => grp_fu_550_p2);

    flow_control_loop_pipe_sequential_init_U : component gemm_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    c_a_fu_94_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln35_fu_408_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    c_a_fu_94 <= add_ln36_fu_511_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    c_a_fu_94 <= ap_const_lv4_0;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln35_fu_408_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    indvar_flatten_fu_102 <= add_ln35_fu_414_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_102 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    r_a_fu_98_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln35_fu_408_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    r_a_fu_98 <= select_ln35_2_fu_461_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    r_a_fu_98 <= ap_const_lv4_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln35_fu_408_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln37_reg_606 <= and_ln37_fu_505_p2;
                localA_10_addr_reg_660 <= c_a_cast11_fu_479_p1(4 - 1 downto 0);
                localA_11_addr_reg_665 <= c_a_cast11_fu_479_p1(4 - 1 downto 0);
                localA_1_addr_reg_615 <= c_a_cast11_fu_479_p1(4 - 1 downto 0);
                localA_2_addr_reg_620 <= c_a_cast11_fu_479_p1(4 - 1 downto 0);
                localA_3_addr_reg_625 <= c_a_cast11_fu_479_p1(4 - 1 downto 0);
                localA_4_addr_reg_630 <= c_a_cast11_fu_479_p1(4 - 1 downto 0);
                localA_5_addr_reg_635 <= c_a_cast11_fu_479_p1(4 - 1 downto 0);
                localA_6_addr_reg_640 <= c_a_cast11_fu_479_p1(4 - 1 downto 0);
                localA_7_addr_reg_645 <= c_a_cast11_fu_479_p1(4 - 1 downto 0);
                localA_8_addr_reg_650 <= c_a_cast11_fu_479_p1(4 - 1 downto 0);
                localA_9_addr_reg_655 <= c_a_cast11_fu_479_p1(4 - 1 downto 0);
                localA_addr_reg_610 <= c_a_cast11_fu_479_p1(4 - 1 downto 0);
                select_ln35_2_reg_597 <= select_ln35_2_fu_461_p3;
                select_ln35_reg_592 <= select_ln35_fu_429_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln37_reg_606_pp0_iter1_reg <= and_ln37_reg_606;
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                localA_10_addr_reg_660_pp0_iter1_reg <= localA_10_addr_reg_660;
                localA_11_addr_reg_665_pp0_iter1_reg <= localA_11_addr_reg_665;
                localA_1_addr_reg_615_pp0_iter1_reg <= localA_1_addr_reg_615;
                localA_2_addr_reg_620_pp0_iter1_reg <= localA_2_addr_reg_620;
                localA_3_addr_reg_625_pp0_iter1_reg <= localA_3_addr_reg_625;
                localA_4_addr_reg_630_pp0_iter1_reg <= localA_4_addr_reg_630;
                localA_5_addr_reg_635_pp0_iter1_reg <= localA_5_addr_reg_635;
                localA_6_addr_reg_640_pp0_iter1_reg <= localA_6_addr_reg_640;
                localA_7_addr_reg_645_pp0_iter1_reg <= localA_7_addr_reg_645;
                localA_8_addr_reg_650_pp0_iter1_reg <= localA_8_addr_reg_650;
                localA_9_addr_reg_655_pp0_iter1_reg <= localA_9_addr_reg_655;
                localA_addr_reg_610_pp0_iter1_reg <= localA_addr_reg_610;
                select_ln35_2_reg_597_pp0_iter1_reg <= select_ln35_2_reg_597;
                select_ln35_reg_592_pp0_iter1_reg <= select_ln35_reg_592;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                and_ln37_reg_606_pp0_iter2_reg <= and_ln37_reg_606_pp0_iter1_reg;
                and_ln37_reg_606_pp0_iter3_reg <= and_ln37_reg_606_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                localA_10_addr_reg_660_pp0_iter2_reg <= localA_10_addr_reg_660_pp0_iter1_reg;
                localA_10_addr_reg_660_pp0_iter3_reg <= localA_10_addr_reg_660_pp0_iter2_reg;
                localA_11_addr_reg_665_pp0_iter2_reg <= localA_11_addr_reg_665_pp0_iter1_reg;
                localA_11_addr_reg_665_pp0_iter3_reg <= localA_11_addr_reg_665_pp0_iter2_reg;
                localA_1_addr_reg_615_pp0_iter2_reg <= localA_1_addr_reg_615_pp0_iter1_reg;
                localA_1_addr_reg_615_pp0_iter3_reg <= localA_1_addr_reg_615_pp0_iter2_reg;
                localA_2_addr_reg_620_pp0_iter2_reg <= localA_2_addr_reg_620_pp0_iter1_reg;
                localA_2_addr_reg_620_pp0_iter3_reg <= localA_2_addr_reg_620_pp0_iter2_reg;
                localA_3_addr_reg_625_pp0_iter2_reg <= localA_3_addr_reg_625_pp0_iter1_reg;
                localA_3_addr_reg_625_pp0_iter3_reg <= localA_3_addr_reg_625_pp0_iter2_reg;
                localA_4_addr_reg_630_pp0_iter2_reg <= localA_4_addr_reg_630_pp0_iter1_reg;
                localA_4_addr_reg_630_pp0_iter3_reg <= localA_4_addr_reg_630_pp0_iter2_reg;
                localA_5_addr_reg_635_pp0_iter2_reg <= localA_5_addr_reg_635_pp0_iter1_reg;
                localA_5_addr_reg_635_pp0_iter3_reg <= localA_5_addr_reg_635_pp0_iter2_reg;
                localA_6_addr_reg_640_pp0_iter2_reg <= localA_6_addr_reg_640_pp0_iter1_reg;
                localA_6_addr_reg_640_pp0_iter3_reg <= localA_6_addr_reg_640_pp0_iter2_reg;
                localA_7_addr_reg_645_pp0_iter2_reg <= localA_7_addr_reg_645_pp0_iter1_reg;
                localA_7_addr_reg_645_pp0_iter3_reg <= localA_7_addr_reg_645_pp0_iter2_reg;
                localA_8_addr_reg_650_pp0_iter2_reg <= localA_8_addr_reg_650_pp0_iter1_reg;
                localA_8_addr_reg_650_pp0_iter3_reg <= localA_8_addr_reg_650_pp0_iter2_reg;
                localA_9_addr_reg_655_pp0_iter2_reg <= localA_9_addr_reg_655_pp0_iter1_reg;
                localA_9_addr_reg_655_pp0_iter3_reg <= localA_9_addr_reg_655_pp0_iter2_reg;
                localA_addr_reg_610_pp0_iter2_reg <= localA_addr_reg_610_pp0_iter1_reg;
                localA_addr_reg_610_pp0_iter3_reg <= localA_addr_reg_610_pp0_iter2_reg;
                select_ln35_2_reg_597_pp0_iter2_reg <= select_ln35_2_reg_597_pp0_iter1_reg;
                select_ln35_2_reg_597_pp0_iter3_reg <= select_ln35_2_reg_597_pp0_iter2_reg;
                select_ln35_reg_592_pp0_iter2_reg <= select_ln35_reg_592_pp0_iter1_reg;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    a_address0 <= zext_ln38_fu_545_p1(14 - 1 downto 0);

    a_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            a_ce0 <= ap_const_logic_1;
        else 
            a_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln35_2_fu_437_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_r_a_1) + unsigned(ap_const_lv4_1));
    add_ln35_fu_414_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten_load) + unsigned(ap_const_lv8_1));
    add_ln36_fu_511_p2 <= std_logic_vector(unsigned(select_ln35_fu_429_p3) + unsigned(ap_const_lv4_1));
    add_ln38_1_fu_540_p2 <= std_logic_vector(unsigned(add_ln38_fu_535_p2) + unsigned(grp_fu_550_p2));
    add_ln38_fu_535_p2 <= std_logic_vector(unsigned(trunc_ln4) + unsigned(c_a_cast6_fu_532_p1));
    and_ln37_fu_505_p2 <= (select_ln35_1_fu_453_p3 and icmp_ln37_fu_499_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln35_fu_408_p2)
    begin
        if (((icmp_ln35_fu_408_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter3_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_c_a_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, c_a_fu_94, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_c_a_load <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_c_a_load <= c_a_fu_94;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten_fu_102)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten_load <= ap_const_lv8_0;
        else 
            ap_sig_allocacmp_indvar_flatten_load <= indvar_flatten_fu_102;
        end if; 
    end process;


    ap_sig_allocacmp_r_a_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, r_a_fu_98)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_r_a_1 <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_r_a_1 <= r_a_fu_98;
        end if; 
    end process;

    c_a_cast11_fu_479_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln35_fu_429_p3),64));
    c_a_cast6_fu_532_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln35_reg_592_pp0_iter2_reg),14));
    c_a_cast_fu_495_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln35_fu_429_p3),32));
    cmp26_fu_402_p2 <= "1" when (signed(zext_ln35_fu_398_p1) < signed(select_ln23_4)) else "0";
    cmp26_mid1_fu_447_p2 <= "1" when (signed(zext_ln35_1_fu_443_p1) < signed(select_ln23_4)) else "0";
    grp_fu_550_p0 <= std_logic_vector(unsigned(zext_ln35_2_fu_469_p1) + unsigned(trunc_ln23_2_mid2));
    icmp_ln35_fu_408_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten_load = ap_const_lv8_90) else "0";
    icmp_ln36_fu_423_p2 <= "1" when (ap_sig_allocacmp_c_a_load = ap_const_lv4_C) else "0";
    icmp_ln37_fu_499_p2 <= "1" when (signed(c_a_cast_fu_495_p1) < signed(current_tile_K_dim)) else "0";
    localA_10_address0 <= localA_10_addr_reg_660_pp0_iter3_reg;
    localA_10_address1 <= c_a_cast11_fu_479_p1(4 - 1 downto 0);

    localA_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            localA_10_ce0 <= ap_const_logic_1;
        else 
            localA_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    localA_10_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            localA_10_ce1 <= ap_const_logic_1;
        else 
            localA_10_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    localA_10_d0 <= a_q0;
    localA_10_d1 <= ap_const_lv32_0;

    localA_10_we0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001, select_ln35_2_reg_597_pp0_iter3_reg, and_ln37_reg_606_pp0_iter3_reg)
    begin
        if (((ap_const_lv1_1 = and_ln37_reg_606_pp0_iter3_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (select_ln35_2_reg_597_pp0_iter3_reg = ap_const_lv4_A))) then 
            localA_10_we0 <= ap_const_logic_1;
        else 
            localA_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    localA_10_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln35_fu_408_p2, ap_block_pp0_stage0_11001, select_ln35_2_fu_461_p3, and_ln37_fu_505_p2)
    begin
        if (((icmp_ln35_fu_408_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_2_fu_461_p3 = ap_const_lv4_A) and (ap_const_lv1_0 = and_ln37_fu_505_p2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            localA_10_we1 <= ap_const_logic_1;
        else 
            localA_10_we1 <= ap_const_logic_0;
        end if; 
    end process;

    localA_11_address0 <= localA_11_addr_reg_665_pp0_iter3_reg;
    localA_11_address1 <= c_a_cast11_fu_479_p1(4 - 1 downto 0);

    localA_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            localA_11_ce0 <= ap_const_logic_1;
        else 
            localA_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    localA_11_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            localA_11_ce1 <= ap_const_logic_1;
        else 
            localA_11_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    localA_11_d0 <= a_q0;
    localA_11_d1 <= ap_const_lv32_0;

    localA_11_we0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001, select_ln35_2_reg_597_pp0_iter3_reg, and_ln37_reg_606_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and ((((((ap_const_lv1_1 = and_ln37_reg_606_pp0_iter3_reg) and (select_ln35_2_reg_597_pp0_iter3_reg = ap_const_lv4_E)) or ((ap_const_lv1_1 = and_ln37_reg_606_pp0_iter3_reg) and (select_ln35_2_reg_597_pp0_iter3_reg = ap_const_lv4_F))) or ((ap_const_lv1_1 = and_ln37_reg_606_pp0_iter3_reg) and (select_ln35_2_reg_597_pp0_iter3_reg = ap_const_lv4_D))) or ((ap_const_lv1_1 = and_ln37_reg_606_pp0_iter3_reg) and (select_ln35_2_reg_597_pp0_iter3_reg = ap_const_lv4_C))) or ((ap_const_lv1_1 = and_ln37_reg_606_pp0_iter3_reg) and (select_ln35_2_reg_597_pp0_iter3_reg = ap_const_lv4_B))))) then 
            localA_11_we0 <= ap_const_logic_1;
        else 
            localA_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    localA_11_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln35_fu_408_p2, ap_block_pp0_stage0_11001, select_ln35_2_fu_461_p3, and_ln37_fu_505_p2)
    begin
        if ((not((select_ln35_2_fu_461_p3 = ap_const_lv4_0)) and not((select_ln35_2_fu_461_p3 = ap_const_lv4_1)) and not((select_ln35_2_fu_461_p3 = ap_const_lv4_2)) and not((select_ln35_2_fu_461_p3 = ap_const_lv4_3)) and not((select_ln35_2_fu_461_p3 = ap_const_lv4_4)) and not((select_ln35_2_fu_461_p3 = ap_const_lv4_5)) and not((select_ln35_2_fu_461_p3 = ap_const_lv4_6)) and not((select_ln35_2_fu_461_p3 = ap_const_lv4_7)) and not((select_ln35_2_fu_461_p3 = ap_const_lv4_8)) and not((select_ln35_2_fu_461_p3 = ap_const_lv4_9)) and not((select_ln35_2_fu_461_p3 = ap_const_lv4_A)) and (icmp_ln35_fu_408_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_0 = and_ln37_fu_505_p2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            localA_11_we1 <= ap_const_logic_1;
        else 
            localA_11_we1 <= ap_const_logic_0;
        end if; 
    end process;

    localA_1_address0 <= localA_1_addr_reg_615_pp0_iter3_reg;
    localA_1_address1 <= c_a_cast11_fu_479_p1(4 - 1 downto 0);

    localA_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            localA_1_ce0 <= ap_const_logic_1;
        else 
            localA_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    localA_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            localA_1_ce1 <= ap_const_logic_1;
        else 
            localA_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    localA_1_d0 <= a_q0;
    localA_1_d1 <= ap_const_lv32_0;

    localA_1_we0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001, select_ln35_2_reg_597_pp0_iter3_reg, and_ln37_reg_606_pp0_iter3_reg)
    begin
        if (((ap_const_lv1_1 = and_ln37_reg_606_pp0_iter3_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (select_ln35_2_reg_597_pp0_iter3_reg = ap_const_lv4_1))) then 
            localA_1_we0 <= ap_const_logic_1;
        else 
            localA_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    localA_1_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln35_fu_408_p2, ap_block_pp0_stage0_11001, select_ln35_2_fu_461_p3, and_ln37_fu_505_p2)
    begin
        if (((icmp_ln35_fu_408_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_2_fu_461_p3 = ap_const_lv4_1) and (ap_const_lv1_0 = and_ln37_fu_505_p2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            localA_1_we1 <= ap_const_logic_1;
        else 
            localA_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    localA_2_address0 <= localA_2_addr_reg_620_pp0_iter3_reg;
    localA_2_address1 <= c_a_cast11_fu_479_p1(4 - 1 downto 0);

    localA_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            localA_2_ce0 <= ap_const_logic_1;
        else 
            localA_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    localA_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            localA_2_ce1 <= ap_const_logic_1;
        else 
            localA_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    localA_2_d0 <= a_q0;
    localA_2_d1 <= ap_const_lv32_0;

    localA_2_we0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001, select_ln35_2_reg_597_pp0_iter3_reg, and_ln37_reg_606_pp0_iter3_reg)
    begin
        if (((ap_const_lv1_1 = and_ln37_reg_606_pp0_iter3_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (select_ln35_2_reg_597_pp0_iter3_reg = ap_const_lv4_2))) then 
            localA_2_we0 <= ap_const_logic_1;
        else 
            localA_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    localA_2_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln35_fu_408_p2, ap_block_pp0_stage0_11001, select_ln35_2_fu_461_p3, and_ln37_fu_505_p2)
    begin
        if (((icmp_ln35_fu_408_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_2_fu_461_p3 = ap_const_lv4_2) and (ap_const_lv1_0 = and_ln37_fu_505_p2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            localA_2_we1 <= ap_const_logic_1;
        else 
            localA_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    localA_3_address0 <= localA_3_addr_reg_625_pp0_iter3_reg;
    localA_3_address1 <= c_a_cast11_fu_479_p1(4 - 1 downto 0);

    localA_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            localA_3_ce0 <= ap_const_logic_1;
        else 
            localA_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    localA_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            localA_3_ce1 <= ap_const_logic_1;
        else 
            localA_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    localA_3_d0 <= a_q0;
    localA_3_d1 <= ap_const_lv32_0;

    localA_3_we0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001, select_ln35_2_reg_597_pp0_iter3_reg, and_ln37_reg_606_pp0_iter3_reg)
    begin
        if (((ap_const_lv1_1 = and_ln37_reg_606_pp0_iter3_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (select_ln35_2_reg_597_pp0_iter3_reg = ap_const_lv4_3))) then 
            localA_3_we0 <= ap_const_logic_1;
        else 
            localA_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    localA_3_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln35_fu_408_p2, ap_block_pp0_stage0_11001, select_ln35_2_fu_461_p3, and_ln37_fu_505_p2)
    begin
        if (((icmp_ln35_fu_408_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_2_fu_461_p3 = ap_const_lv4_3) and (ap_const_lv1_0 = and_ln37_fu_505_p2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            localA_3_we1 <= ap_const_logic_1;
        else 
            localA_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    localA_4_address0 <= localA_4_addr_reg_630_pp0_iter3_reg;
    localA_4_address1 <= c_a_cast11_fu_479_p1(4 - 1 downto 0);

    localA_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            localA_4_ce0 <= ap_const_logic_1;
        else 
            localA_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    localA_4_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            localA_4_ce1 <= ap_const_logic_1;
        else 
            localA_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    localA_4_d0 <= a_q0;
    localA_4_d1 <= ap_const_lv32_0;

    localA_4_we0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001, select_ln35_2_reg_597_pp0_iter3_reg, and_ln37_reg_606_pp0_iter3_reg)
    begin
        if (((ap_const_lv1_1 = and_ln37_reg_606_pp0_iter3_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (select_ln35_2_reg_597_pp0_iter3_reg = ap_const_lv4_4))) then 
            localA_4_we0 <= ap_const_logic_1;
        else 
            localA_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    localA_4_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln35_fu_408_p2, ap_block_pp0_stage0_11001, select_ln35_2_fu_461_p3, and_ln37_fu_505_p2)
    begin
        if (((icmp_ln35_fu_408_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_2_fu_461_p3 = ap_const_lv4_4) and (ap_const_lv1_0 = and_ln37_fu_505_p2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            localA_4_we1 <= ap_const_logic_1;
        else 
            localA_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    localA_5_address0 <= localA_5_addr_reg_635_pp0_iter3_reg;
    localA_5_address1 <= c_a_cast11_fu_479_p1(4 - 1 downto 0);

    localA_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            localA_5_ce0 <= ap_const_logic_1;
        else 
            localA_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    localA_5_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            localA_5_ce1 <= ap_const_logic_1;
        else 
            localA_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    localA_5_d0 <= a_q0;
    localA_5_d1 <= ap_const_lv32_0;

    localA_5_we0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001, select_ln35_2_reg_597_pp0_iter3_reg, and_ln37_reg_606_pp0_iter3_reg)
    begin
        if (((ap_const_lv1_1 = and_ln37_reg_606_pp0_iter3_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (select_ln35_2_reg_597_pp0_iter3_reg = ap_const_lv4_5))) then 
            localA_5_we0 <= ap_const_logic_1;
        else 
            localA_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    localA_5_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln35_fu_408_p2, ap_block_pp0_stage0_11001, select_ln35_2_fu_461_p3, and_ln37_fu_505_p2)
    begin
        if (((icmp_ln35_fu_408_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_2_fu_461_p3 = ap_const_lv4_5) and (ap_const_lv1_0 = and_ln37_fu_505_p2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            localA_5_we1 <= ap_const_logic_1;
        else 
            localA_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    localA_6_address0 <= localA_6_addr_reg_640_pp0_iter3_reg;
    localA_6_address1 <= c_a_cast11_fu_479_p1(4 - 1 downto 0);

    localA_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            localA_6_ce0 <= ap_const_logic_1;
        else 
            localA_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    localA_6_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            localA_6_ce1 <= ap_const_logic_1;
        else 
            localA_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    localA_6_d0 <= a_q0;
    localA_6_d1 <= ap_const_lv32_0;

    localA_6_we0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001, select_ln35_2_reg_597_pp0_iter3_reg, and_ln37_reg_606_pp0_iter3_reg)
    begin
        if (((ap_const_lv1_1 = and_ln37_reg_606_pp0_iter3_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (select_ln35_2_reg_597_pp0_iter3_reg = ap_const_lv4_6))) then 
            localA_6_we0 <= ap_const_logic_1;
        else 
            localA_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    localA_6_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln35_fu_408_p2, ap_block_pp0_stage0_11001, select_ln35_2_fu_461_p3, and_ln37_fu_505_p2)
    begin
        if (((icmp_ln35_fu_408_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_2_fu_461_p3 = ap_const_lv4_6) and (ap_const_lv1_0 = and_ln37_fu_505_p2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            localA_6_we1 <= ap_const_logic_1;
        else 
            localA_6_we1 <= ap_const_logic_0;
        end if; 
    end process;

    localA_7_address0 <= localA_7_addr_reg_645_pp0_iter3_reg;
    localA_7_address1 <= c_a_cast11_fu_479_p1(4 - 1 downto 0);

    localA_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            localA_7_ce0 <= ap_const_logic_1;
        else 
            localA_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    localA_7_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            localA_7_ce1 <= ap_const_logic_1;
        else 
            localA_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    localA_7_d0 <= a_q0;
    localA_7_d1 <= ap_const_lv32_0;

    localA_7_we0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001, select_ln35_2_reg_597_pp0_iter3_reg, and_ln37_reg_606_pp0_iter3_reg)
    begin
        if (((ap_const_lv1_1 = and_ln37_reg_606_pp0_iter3_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (select_ln35_2_reg_597_pp0_iter3_reg = ap_const_lv4_7))) then 
            localA_7_we0 <= ap_const_logic_1;
        else 
            localA_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    localA_7_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln35_fu_408_p2, ap_block_pp0_stage0_11001, select_ln35_2_fu_461_p3, and_ln37_fu_505_p2)
    begin
        if (((icmp_ln35_fu_408_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_2_fu_461_p3 = ap_const_lv4_7) and (ap_const_lv1_0 = and_ln37_fu_505_p2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            localA_7_we1 <= ap_const_logic_1;
        else 
            localA_7_we1 <= ap_const_logic_0;
        end if; 
    end process;

    localA_8_address0 <= localA_8_addr_reg_650_pp0_iter3_reg;
    localA_8_address1 <= c_a_cast11_fu_479_p1(4 - 1 downto 0);

    localA_8_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            localA_8_ce0 <= ap_const_logic_1;
        else 
            localA_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    localA_8_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            localA_8_ce1 <= ap_const_logic_1;
        else 
            localA_8_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    localA_8_d0 <= a_q0;
    localA_8_d1 <= ap_const_lv32_0;

    localA_8_we0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001, select_ln35_2_reg_597_pp0_iter3_reg, and_ln37_reg_606_pp0_iter3_reg)
    begin
        if (((ap_const_lv1_1 = and_ln37_reg_606_pp0_iter3_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (select_ln35_2_reg_597_pp0_iter3_reg = ap_const_lv4_8))) then 
            localA_8_we0 <= ap_const_logic_1;
        else 
            localA_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    localA_8_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln35_fu_408_p2, ap_block_pp0_stage0_11001, select_ln35_2_fu_461_p3, and_ln37_fu_505_p2)
    begin
        if (((icmp_ln35_fu_408_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_2_fu_461_p3 = ap_const_lv4_8) and (ap_const_lv1_0 = and_ln37_fu_505_p2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            localA_8_we1 <= ap_const_logic_1;
        else 
            localA_8_we1 <= ap_const_logic_0;
        end if; 
    end process;

    localA_9_address0 <= localA_9_addr_reg_655_pp0_iter3_reg;
    localA_9_address1 <= c_a_cast11_fu_479_p1(4 - 1 downto 0);

    localA_9_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            localA_9_ce0 <= ap_const_logic_1;
        else 
            localA_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    localA_9_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            localA_9_ce1 <= ap_const_logic_1;
        else 
            localA_9_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    localA_9_d0 <= a_q0;
    localA_9_d1 <= ap_const_lv32_0;

    localA_9_we0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001, select_ln35_2_reg_597_pp0_iter3_reg, and_ln37_reg_606_pp0_iter3_reg)
    begin
        if (((ap_const_lv1_1 = and_ln37_reg_606_pp0_iter3_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (select_ln35_2_reg_597_pp0_iter3_reg = ap_const_lv4_9))) then 
            localA_9_we0 <= ap_const_logic_1;
        else 
            localA_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    localA_9_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln35_fu_408_p2, ap_block_pp0_stage0_11001, select_ln35_2_fu_461_p3, and_ln37_fu_505_p2)
    begin
        if (((icmp_ln35_fu_408_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_2_fu_461_p3 = ap_const_lv4_9) and (ap_const_lv1_0 = and_ln37_fu_505_p2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            localA_9_we1 <= ap_const_logic_1;
        else 
            localA_9_we1 <= ap_const_logic_0;
        end if; 
    end process;

    localA_address0 <= localA_addr_reg_610_pp0_iter3_reg;
    localA_address1 <= c_a_cast11_fu_479_p1(4 - 1 downto 0);

    localA_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            localA_ce0 <= ap_const_logic_1;
        else 
            localA_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    localA_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            localA_ce1 <= ap_const_logic_1;
        else 
            localA_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    localA_d0 <= a_q0;
    localA_d1 <= ap_const_lv32_0;

    localA_we0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001, select_ln35_2_reg_597_pp0_iter3_reg, and_ln37_reg_606_pp0_iter3_reg)
    begin
        if (((ap_const_lv1_1 = and_ln37_reg_606_pp0_iter3_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (select_ln35_2_reg_597_pp0_iter3_reg = ap_const_lv4_0))) then 
            localA_we0 <= ap_const_logic_1;
        else 
            localA_we0 <= ap_const_logic_0;
        end if; 
    end process;


    localA_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln35_fu_408_p2, ap_block_pp0_stage0_11001, select_ln35_2_fu_461_p3, and_ln37_fu_505_p2)
    begin
        if (((icmp_ln35_fu_408_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_2_fu_461_p3 = ap_const_lv4_0) and (ap_const_lv1_0 = and_ln37_fu_505_p2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            localA_we1 <= ap_const_logic_1;
        else 
            localA_we1 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln35_1_fu_453_p3 <= 
        cmp26_mid1_fu_447_p2 when (icmp_ln36_fu_423_p2(0) = '1') else 
        cmp26_fu_402_p2;
    select_ln35_2_fu_461_p3 <= 
        add_ln35_2_fu_437_p2 when (icmp_ln36_fu_423_p2(0) = '1') else 
        ap_sig_allocacmp_r_a_1;
    select_ln35_fu_429_p3 <= 
        ap_const_lv4_0 when (icmp_ln36_fu_423_p2(0) = '1') else 
        ap_sig_allocacmp_c_a_load;
    zext_ln35_1_fu_443_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln35_2_fu_437_p2),32));
    zext_ln35_2_fu_469_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln35_2_fu_461_p3),14));
    zext_ln35_fu_398_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_r_a_1),32));
    zext_ln38_fu_545_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln38_1_fu_540_p2),64));
end behav;
