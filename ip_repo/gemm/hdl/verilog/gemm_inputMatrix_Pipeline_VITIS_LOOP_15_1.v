// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module gemm_inputMatrix_Pipeline_VITIS_LOOP_15_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_r_TVALID,
        tmp_num1_4,
        tmp_num2,
        tmp_num3,
        mul,
        in_r_TDATA,
        in_r_TREADY,
        matrix_address0,
        matrix_ce0,
        matrix_we0,
        matrix_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   in_r_TVALID;
input  [31:0] tmp_num1_4;
input  [31:0] tmp_num2;
input  [31:0] tmp_num3;
input  [31:0] mul;
input  [127:0] in_r_TDATA;
output   in_r_TREADY;
output  [13:0] matrix_address0;
output   matrix_ce0;
output   matrix_we0;
output  [31:0] matrix_d0;

reg ap_idle;
reg in_r_TREADY;
reg[13:0] matrix_address0;
reg matrix_ce0;
reg matrix_we0;
reg[31:0] matrix_d0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln15_fu_185_p2;
wire   [1:0] p_V_load_1_load_fu_196_p1;
reg    ap_predicate_op38_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    in_r_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
wire   [63:0] i_cast1_fu_199_p1;
wire   [13:0] matrix_addr_2_gep_fu_129_p3;
wire   [13:0] matrix_addr_1_gep_fu_137_p3;
wire   [13:0] matrix_addr_gep_fu_145_p3;
reg   [1:0] p_V_fu_66;
wire   [1:0] p_V_1_fu_288_p2;
wire    ap_loop_init;
reg   [14:0] i_fu_70;
wire   [14:0] add_ln15_fu_190_p2;
reg   [31:0] tmp_num3_1_fu_74;
wire   [31:0] tmp_num3_2_fu_262_p1;
reg   [31:0] tmp_num2_1_fu_78;
wire   [31:0] tmp_num2_2_fu_248_p1;
reg   [31:0] tmp_num1_fu_82;
wire   [31:0] tmp_num1_1_fu_234_p1;
wire   [31:0] tmp_num0_fu_219_p1;
wire   [31:0] i_cast_fu_181_p1;
wire   [31:0] trunc_ln18_fu_215_p1;
wire   [31:0] tmp_s_fu_224_p4;
wire   [31:0] tmp_13_fu_238_p4;
wire   [31:0] tmp_14_fu_252_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_113;
reg    ap_condition_238;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

gemm_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_70 <= 15'd0;
        end else if (((icmp_ln15_fu_185_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_fu_70 <= add_ln15_fu_190_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_V_fu_66 <= 2'd2;
        end else if (((icmp_ln15_fu_185_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            p_V_fu_66 <= p_V_1_fu_288_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            tmp_num1_fu_82 <= tmp_num1_4;
        end else if ((1'b1 == ap_condition_238)) begin
            tmp_num1_fu_82 <= tmp_num1_1_fu_234_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            tmp_num2_1_fu_78 <= tmp_num2;
        end else if ((1'b1 == ap_condition_238)) begin
            tmp_num2_1_fu_78 <= tmp_num2_2_fu_248_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            tmp_num3_1_fu_74 <= tmp_num3;
        end else if ((1'b1 == ap_condition_238)) begin
            tmp_num3_1_fu_74 <= tmp_num3_2_fu_262_p1;
        end
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln15_fu_185_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op38_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_r_TDATA_blk_n = in_r_TVALID;
    end else begin
        in_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op38_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_r_TREADY = 1'b1;
    end else begin
        in_r_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_113)) begin
        if ((p_V_load_1_load_fu_196_p1 == 2'd3)) begin
            matrix_address0 = matrix_addr_gep_fu_145_p3;
        end else if ((p_V_fu_66 == 2'd0)) begin
            matrix_address0 = matrix_addr_1_gep_fu_137_p3;
        end else if ((p_V_load_1_load_fu_196_p1 == 2'd1)) begin
            matrix_address0 = matrix_addr_2_gep_fu_129_p3;
        end else if ((p_V_load_1_load_fu_196_p1 == 2'd2)) begin
            matrix_address0 = i_cast1_fu_199_p1;
        end else begin
            matrix_address0 = 'bx;
        end
    end else begin
        matrix_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (p_V_load_1_load_fu_196_p1 == 2'd1) & (icmp_ln15_fu_185_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (p_V_load_1_load_fu_196_p1 == 2'd2) & (icmp_ln15_fu_185_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (p_V_fu_66 == 2'd0) & (icmp_ln15_fu_185_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (p_V_load_1_load_fu_196_p1 == 2'd3) & (icmp_ln15_fu_185_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        matrix_ce0 = 1'b1;
    end else begin
        matrix_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_113)) begin
        if ((p_V_load_1_load_fu_196_p1 == 2'd3)) begin
            matrix_d0 = tmp_num3_1_fu_74;
        end else if ((p_V_fu_66 == 2'd0)) begin
            matrix_d0 = tmp_num0_fu_219_p1;
        end else if ((p_V_load_1_load_fu_196_p1 == 2'd1)) begin
            matrix_d0 = tmp_num1_fu_82;
        end else if ((p_V_load_1_load_fu_196_p1 == 2'd2)) begin
            matrix_d0 = tmp_num2_1_fu_78;
        end else begin
            matrix_d0 = 'bx;
        end
    end else begin
        matrix_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (p_V_load_1_load_fu_196_p1 == 2'd1) & (icmp_ln15_fu_185_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (p_V_load_1_load_fu_196_p1 == 2'd2) & (icmp_ln15_fu_185_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (p_V_fu_66 == 2'd0) & (icmp_ln15_fu_185_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (p_V_load_1_load_fu_196_p1 == 2'd3) & (icmp_ln15_fu_185_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        matrix_we0 = 1'b1;
    end else begin
        matrix_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln15_fu_190_p2 = (i_fu_70 + 15'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_predicate_op38_read_state2 == 1'b1) & (in_r_TVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_predicate_op38_read_state2 == 1'b1) & (in_r_TVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((ap_predicate_op38_read_state2 == 1'b1) & (in_r_TVALID == 1'b0));
end

always @ (*) begin
    ap_condition_113 = ((1'b0 == ap_block_pp0_stage0) & (icmp_ln15_fu_185_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_238 = ((p_V_fu_66 == 2'd0) & (icmp_ln15_fu_185_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

always @ (*) begin
    ap_predicate_op38_read_state2 = ((p_V_fu_66 == 2'd0) & (icmp_ln15_fu_185_p2 == 1'd0));
end

assign i_cast1_fu_199_p1 = i_fu_70;

assign i_cast_fu_181_p1 = i_fu_70;

assign icmp_ln15_fu_185_p2 = ((i_cast_fu_181_p1 == mul) ? 1'b1 : 1'b0);

assign matrix_addr_1_gep_fu_137_p3 = i_cast1_fu_199_p1;

assign matrix_addr_2_gep_fu_129_p3 = i_cast1_fu_199_p1;

assign matrix_addr_gep_fu_145_p3 = i_cast1_fu_199_p1;

assign p_V_1_fu_288_p2 = (p_V_fu_66 + 2'd1);

assign p_V_load_1_load_fu_196_p1 = p_V_fu_66;

assign tmp_13_fu_238_p4 = {{in_r_TDATA[95:64]}};

assign tmp_14_fu_252_p4 = {{in_r_TDATA[127:96]}};

assign tmp_num0_fu_219_p1 = trunc_ln18_fu_215_p1;

assign tmp_num1_1_fu_234_p1 = tmp_s_fu_224_p4;

assign tmp_num2_2_fu_248_p1 = tmp_13_fu_238_p4;

assign tmp_num3_2_fu_262_p1 = tmp_14_fu_252_p4;

assign tmp_s_fu_224_p4 = {{in_r_TDATA[63:32]}};

assign trunc_ln18_fu_215_p1 = in_r_TDATA[31:0];

endmodule //gemm_inputMatrix_Pipeline_VITIS_LOOP_15_1
