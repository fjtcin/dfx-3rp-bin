// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module gemm_mmult_Pipeline_writeC_VITIS_LOOP_115_6 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        mul_ln19,
        current_tile_B_cols,
        trunc_ln23_2_mid2,
        trunc_ln23_1,
        localC_169,
        localC_170,
        localC_171,
        localC_172,
        localC_173,
        localC_174,
        localC_175,
        localC_176,
        localC_177,
        localC_178,
        localC_179,
        localC_180,
        localC_181,
        localC_182,
        localC_183,
        localC_184,
        localC_185,
        localC_186,
        localC_187,
        localC_188,
        localC_189,
        localC_190,
        localC_191,
        localC_192,
        localC_193,
        localC_194,
        localC_195,
        localC_196,
        localC_197,
        localC_198,
        localC_199,
        localC_200,
        localC_201,
        localC_202,
        localC_203,
        localC_204,
        localC_205,
        localC_206,
        localC_207,
        localC_208,
        localC_209,
        localC_210,
        localC_211,
        localC_212,
        localC_213,
        localC_214,
        localC_215,
        localC_216,
        localC_217,
        localC_218,
        localC_219,
        localC_220,
        localC_221,
        localC_222,
        localC_223,
        localC_224,
        localC_225,
        localC_226,
        localC_227,
        localC_228,
        localC_229,
        localC_230,
        localC_231,
        localC_232,
        localC_233,
        localC_234,
        localC_235,
        localC_236,
        localC_237,
        localC_238,
        localC_239,
        localC_240,
        localC_241,
        localC_242,
        localC_243,
        localC_244,
        localC_245,
        localC_246,
        localC_247,
        localC_248,
        localC_249,
        localC_250,
        localC_251,
        localC_252,
        localC_253,
        localC_254,
        localC_255,
        localC_256,
        localC_257,
        localC_258,
        localC_259,
        localC_260,
        localC_261,
        localC_262,
        localC_263,
        localC_264,
        localC_265,
        localC_266,
        localC_267,
        localC_268,
        localC_269,
        localC_270,
        localC_271,
        localC_272,
        localC_273,
        localC_274,
        localC_275,
        localC_276,
        localC_277,
        localC_278,
        localC_279,
        localC_280,
        localC_281,
        localC_282,
        localC_283,
        localC_284,
        localC_285,
        localC_286,
        localC_287,
        localC_288,
        localC_289,
        localC_290,
        localC_291,
        localC_292,
        localC_293,
        localC_294,
        localC_295,
        localC_296,
        localC_297,
        localC_298,
        localC_299,
        localC_300,
        localC_301,
        localC_302,
        localC_303,
        localC_304,
        localC_305,
        localC_306,
        localC_307,
        localC_308,
        localC_309,
        localC_310,
        localC_311,
        localC_312,
        localC_313,
        localC_314,
        localC_315,
        localC_316,
        localC_317,
        localC_318,
        localC_319,
        localC_320,
        localC_321,
        localC_322,
        localC_323,
        localC_324,
        localC_325,
        localC_326,
        localC_327,
        localC_328,
        localC_329,
        localC_330,
        localC_331,
        localC_332,
        localC_333,
        localC_334,
        localC_335,
        localC_336,
        localC_337,
        trunc_ln2,
        c_address0,
        c_ce0,
        c_we0,
        c_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] mul_ln19;
input  [31:0] current_tile_B_cols;
input  [13:0] trunc_ln23_2_mid2;
input  [13:0] trunc_ln23_1;
input  [31:0] localC_169;
input  [31:0] localC_170;
input  [31:0] localC_171;
input  [31:0] localC_172;
input  [31:0] localC_173;
input  [31:0] localC_174;
input  [31:0] localC_175;
input  [31:0] localC_176;
input  [31:0] localC_177;
input  [31:0] localC_178;
input  [31:0] localC_179;
input  [31:0] localC_180;
input  [31:0] localC_181;
input  [31:0] localC_182;
input  [31:0] localC_183;
input  [31:0] localC_184;
input  [31:0] localC_185;
input  [31:0] localC_186;
input  [31:0] localC_187;
input  [31:0] localC_188;
input  [31:0] localC_189;
input  [31:0] localC_190;
input  [31:0] localC_191;
input  [31:0] localC_192;
input  [31:0] localC_193;
input  [31:0] localC_194;
input  [31:0] localC_195;
input  [31:0] localC_196;
input  [31:0] localC_197;
input  [31:0] localC_198;
input  [31:0] localC_199;
input  [31:0] localC_200;
input  [31:0] localC_201;
input  [31:0] localC_202;
input  [31:0] localC_203;
input  [31:0] localC_204;
input  [31:0] localC_205;
input  [31:0] localC_206;
input  [31:0] localC_207;
input  [31:0] localC_208;
input  [31:0] localC_209;
input  [31:0] localC_210;
input  [31:0] localC_211;
input  [31:0] localC_212;
input  [31:0] localC_213;
input  [31:0] localC_214;
input  [31:0] localC_215;
input  [31:0] localC_216;
input  [31:0] localC_217;
input  [31:0] localC_218;
input  [31:0] localC_219;
input  [31:0] localC_220;
input  [31:0] localC_221;
input  [31:0] localC_222;
input  [31:0] localC_223;
input  [31:0] localC_224;
input  [31:0] localC_225;
input  [31:0] localC_226;
input  [31:0] localC_227;
input  [31:0] localC_228;
input  [31:0] localC_229;
input  [31:0] localC_230;
input  [31:0] localC_231;
input  [31:0] localC_232;
input  [31:0] localC_233;
input  [31:0] localC_234;
input  [31:0] localC_235;
input  [31:0] localC_236;
input  [31:0] localC_237;
input  [31:0] localC_238;
input  [31:0] localC_239;
input  [31:0] localC_240;
input  [31:0] localC_241;
input  [31:0] localC_242;
input  [31:0] localC_243;
input  [31:0] localC_244;
input  [31:0] localC_245;
input  [31:0] localC_246;
input  [31:0] localC_247;
input  [31:0] localC_248;
input  [31:0] localC_249;
input  [31:0] localC_250;
input  [31:0] localC_251;
input  [31:0] localC_252;
input  [31:0] localC_253;
input  [31:0] localC_254;
input  [31:0] localC_255;
input  [31:0] localC_256;
input  [31:0] localC_257;
input  [31:0] localC_258;
input  [31:0] localC_259;
input  [31:0] localC_260;
input  [31:0] localC_261;
input  [31:0] localC_262;
input  [31:0] localC_263;
input  [31:0] localC_264;
input  [31:0] localC_265;
input  [31:0] localC_266;
input  [31:0] localC_267;
input  [31:0] localC_268;
input  [31:0] localC_269;
input  [31:0] localC_270;
input  [31:0] localC_271;
input  [31:0] localC_272;
input  [31:0] localC_273;
input  [31:0] localC_274;
input  [31:0] localC_275;
input  [31:0] localC_276;
input  [31:0] localC_277;
input  [31:0] localC_278;
input  [31:0] localC_279;
input  [31:0] localC_280;
input  [31:0] localC_281;
input  [31:0] localC_282;
input  [31:0] localC_283;
input  [31:0] localC_284;
input  [31:0] localC_285;
input  [31:0] localC_286;
input  [31:0] localC_287;
input  [31:0] localC_288;
input  [31:0] localC_289;
input  [31:0] localC_290;
input  [31:0] localC_291;
input  [31:0] localC_292;
input  [31:0] localC_293;
input  [31:0] localC_294;
input  [31:0] localC_295;
input  [31:0] localC_296;
input  [31:0] localC_297;
input  [31:0] localC_298;
input  [31:0] localC_299;
input  [31:0] localC_300;
input  [31:0] localC_301;
input  [31:0] localC_302;
input  [31:0] localC_303;
input  [31:0] localC_304;
input  [31:0] localC_305;
input  [31:0] localC_306;
input  [31:0] localC_307;
input  [31:0] localC_308;
input  [31:0] localC_309;
input  [31:0] localC_310;
input  [31:0] localC_311;
input  [31:0] localC_312;
input  [31:0] localC_313;
input  [31:0] localC_314;
input  [31:0] localC_315;
input  [31:0] localC_316;
input  [31:0] localC_317;
input  [31:0] localC_318;
input  [31:0] localC_319;
input  [31:0] localC_320;
input  [31:0] localC_321;
input  [31:0] localC_322;
input  [31:0] localC_323;
input  [31:0] localC_324;
input  [31:0] localC_325;
input  [31:0] localC_326;
input  [31:0] localC_327;
input  [31:0] localC_328;
input  [31:0] localC_329;
input  [31:0] localC_330;
input  [31:0] localC_331;
input  [31:0] localC_332;
input  [31:0] localC_333;
input  [31:0] localC_334;
input  [31:0] localC_335;
input  [31:0] localC_336;
input  [31:0] localC_337;
input  [13:0] trunc_ln2;
output  [13:0] c_address0;
output   c_ce0;
output   c_we0;
output  [31:0] c_d0;

reg ap_idle;
reg c_ce0;
reg c_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln114_fu_1467_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [31:0] tmp_12_fu_1766_p15;
reg   [31:0] tmp_12_reg_2731;
reg   [31:0] tmp_12_reg_2731_pp0_iter2_reg;
reg   [31:0] tmp_12_reg_2731_pp0_iter3_reg;
(* use_dsp48 = "no" *) wire   [13:0] add_ln116_fu_1798_p2;
reg   [13:0] add_ln116_reg_2736;
reg   [13:0] add_ln116_reg_2736_pp0_iter2_reg;
wire   [63:0] zext_ln116_fu_1824_p1;
wire    ap_block_pp0_stage0;
reg   [31:0] c_c_fu_380;
wire   [31:0] add_ln115_fu_1803_p2;
wire    ap_loop_init;
reg   [31:0] r_c_fu_384;
wire   [31:0] select_ln114_1_fu_1503_p3;
reg   [63:0] indvar_flatten54_fu_388;
wire   [63:0] add_ln114_fu_1472_p2;
wire   [0:0] icmp_ln115_fu_1484_p2;
wire   [31:0] add_ln114_2_fu_1497_p2;
wire   [31:0] select_ln114_fu_1489_p3;
wire   [31:0] tmp_fu_1519_p15;
wire   [31:0] tmp_1_fu_1538_p15;
wire   [31:0] tmp_2_fu_1557_p15;
wire   [31:0] tmp_3_fu_1576_p15;
wire   [31:0] tmp_4_fu_1595_p15;
wire   [31:0] tmp_5_fu_1614_p15;
wire   [31:0] tmp_6_fu_1633_p15;
wire   [31:0] tmp_7_fu_1652_p15;
wire   [31:0] tmp_8_fu_1671_p15;
wire   [31:0] tmp_9_fu_1690_p15;
wire   [31:0] tmp_s_fu_1709_p15;
wire   [31:0] tmp_10_fu_1728_p15;
wire   [31:0] tmp_11_fu_1747_p15;
wire   [13:0] empty_fu_1515_p1;
wire  signed [13:0] zext_ln116_fu_1824_p0;
wire   [13:0] grp_fu_1828_p4;
wire   [13:0] grp_fu_1828_p0;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_done_reg = 1'b0;
end

gemm_mux_1332_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mux_1332_32_1_1_U365(
    .din0(localC_169),
    .din1(localC_170),
    .din2(localC_171),
    .din3(localC_172),
    .din4(localC_173),
    .din5(localC_174),
    .din6(localC_175),
    .din7(localC_176),
    .din8(localC_177),
    .din9(localC_178),
    .din10(localC_179),
    .din11(localC_180),
    .din12(localC_181),
    .din13(select_ln114_fu_1489_p3),
    .dout(tmp_fu_1519_p15)
);

gemm_mux_1332_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mux_1332_32_1_1_U366(
    .din0(localC_182),
    .din1(localC_183),
    .din2(localC_184),
    .din3(localC_185),
    .din4(localC_186),
    .din5(localC_187),
    .din6(localC_188),
    .din7(localC_189),
    .din8(localC_190),
    .din9(localC_191),
    .din10(localC_192),
    .din11(localC_193),
    .din12(localC_194),
    .din13(select_ln114_fu_1489_p3),
    .dout(tmp_1_fu_1538_p15)
);

gemm_mux_1332_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mux_1332_32_1_1_U367(
    .din0(localC_195),
    .din1(localC_196),
    .din2(localC_197),
    .din3(localC_198),
    .din4(localC_199),
    .din5(localC_200),
    .din6(localC_201),
    .din7(localC_202),
    .din8(localC_203),
    .din9(localC_204),
    .din10(localC_205),
    .din11(localC_206),
    .din12(localC_207),
    .din13(select_ln114_fu_1489_p3),
    .dout(tmp_2_fu_1557_p15)
);

gemm_mux_1332_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mux_1332_32_1_1_U368(
    .din0(localC_208),
    .din1(localC_209),
    .din2(localC_210),
    .din3(localC_211),
    .din4(localC_212),
    .din5(localC_213),
    .din6(localC_214),
    .din7(localC_215),
    .din8(localC_216),
    .din9(localC_217),
    .din10(localC_218),
    .din11(localC_219),
    .din12(localC_220),
    .din13(select_ln114_fu_1489_p3),
    .dout(tmp_3_fu_1576_p15)
);

gemm_mux_1332_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mux_1332_32_1_1_U369(
    .din0(localC_221),
    .din1(localC_222),
    .din2(localC_223),
    .din3(localC_224),
    .din4(localC_225),
    .din5(localC_226),
    .din6(localC_227),
    .din7(localC_228),
    .din8(localC_229),
    .din9(localC_230),
    .din10(localC_231),
    .din11(localC_232),
    .din12(localC_233),
    .din13(select_ln114_fu_1489_p3),
    .dout(tmp_4_fu_1595_p15)
);

gemm_mux_1332_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mux_1332_32_1_1_U370(
    .din0(localC_234),
    .din1(localC_235),
    .din2(localC_236),
    .din3(localC_237),
    .din4(localC_238),
    .din5(localC_239),
    .din6(localC_240),
    .din7(localC_241),
    .din8(localC_242),
    .din9(localC_243),
    .din10(localC_244),
    .din11(localC_245),
    .din12(localC_246),
    .din13(select_ln114_fu_1489_p3),
    .dout(tmp_5_fu_1614_p15)
);

gemm_mux_1332_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mux_1332_32_1_1_U371(
    .din0(localC_247),
    .din1(localC_248),
    .din2(localC_249),
    .din3(localC_250),
    .din4(localC_251),
    .din5(localC_252),
    .din6(localC_253),
    .din7(localC_254),
    .din8(localC_255),
    .din9(localC_256),
    .din10(localC_257),
    .din11(localC_258),
    .din12(localC_259),
    .din13(select_ln114_fu_1489_p3),
    .dout(tmp_6_fu_1633_p15)
);

gemm_mux_1332_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mux_1332_32_1_1_U372(
    .din0(localC_260),
    .din1(localC_261),
    .din2(localC_262),
    .din3(localC_263),
    .din4(localC_264),
    .din5(localC_265),
    .din6(localC_266),
    .din7(localC_267),
    .din8(localC_268),
    .din9(localC_269),
    .din10(localC_270),
    .din11(localC_271),
    .din12(localC_272),
    .din13(select_ln114_fu_1489_p3),
    .dout(tmp_7_fu_1652_p15)
);

gemm_mux_1332_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mux_1332_32_1_1_U373(
    .din0(localC_273),
    .din1(localC_274),
    .din2(localC_275),
    .din3(localC_276),
    .din4(localC_277),
    .din5(localC_278),
    .din6(localC_279),
    .din7(localC_280),
    .din8(localC_281),
    .din9(localC_282),
    .din10(localC_283),
    .din11(localC_284),
    .din12(localC_285),
    .din13(select_ln114_fu_1489_p3),
    .dout(tmp_8_fu_1671_p15)
);

gemm_mux_1332_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mux_1332_32_1_1_U374(
    .din0(localC_286),
    .din1(localC_287),
    .din2(localC_288),
    .din3(localC_289),
    .din4(localC_290),
    .din5(localC_291),
    .din6(localC_292),
    .din7(localC_293),
    .din8(localC_294),
    .din9(localC_295),
    .din10(localC_296),
    .din11(localC_297),
    .din12(localC_298),
    .din13(select_ln114_fu_1489_p3),
    .dout(tmp_9_fu_1690_p15)
);

gemm_mux_1332_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mux_1332_32_1_1_U375(
    .din0(localC_299),
    .din1(localC_300),
    .din2(localC_301),
    .din3(localC_302),
    .din4(localC_303),
    .din5(localC_304),
    .din6(localC_305),
    .din7(localC_306),
    .din8(localC_307),
    .din9(localC_308),
    .din10(localC_309),
    .din11(localC_310),
    .din12(localC_311),
    .din13(select_ln114_fu_1489_p3),
    .dout(tmp_s_fu_1709_p15)
);

gemm_mux_1332_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mux_1332_32_1_1_U376(
    .din0(localC_312),
    .din1(localC_313),
    .din2(localC_314),
    .din3(localC_315),
    .din4(localC_316),
    .din5(localC_317),
    .din6(localC_318),
    .din7(localC_319),
    .din8(localC_320),
    .din9(localC_321),
    .din10(localC_322),
    .din11(localC_323),
    .din12(localC_324),
    .din13(select_ln114_fu_1489_p3),
    .dout(tmp_10_fu_1728_p15)
);

gemm_mux_1332_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mux_1332_32_1_1_U377(
    .din0(localC_325),
    .din1(localC_326),
    .din2(localC_327),
    .din3(localC_328),
    .din4(localC_329),
    .din5(localC_330),
    .din6(localC_331),
    .din7(localC_332),
    .din8(localC_333),
    .din9(localC_334),
    .din10(localC_335),
    .din11(localC_336),
    .din12(localC_337),
    .din13(select_ln114_fu_1489_p3),
    .dout(tmp_11_fu_1747_p15)
);

gemm_mux_1332_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mux_1332_32_1_1_U378(
    .din0(tmp_fu_1519_p15),
    .din1(tmp_1_fu_1538_p15),
    .din2(tmp_2_fu_1557_p15),
    .din3(tmp_3_fu_1576_p15),
    .din4(tmp_4_fu_1595_p15),
    .din5(tmp_5_fu_1614_p15),
    .din6(tmp_6_fu_1633_p15),
    .din7(tmp_7_fu_1652_p15),
    .din8(tmp_8_fu_1671_p15),
    .din9(tmp_9_fu_1690_p15),
    .din10(tmp_s_fu_1709_p15),
    .din11(tmp_10_fu_1728_p15),
    .din12(tmp_11_fu_1747_p15),
    .din13(select_ln114_1_fu_1503_p3),
    .dout(tmp_12_fu_1766_p15)
);

gemm_ama_addmuladd_14ns_14ns_14s_14ns_14_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 14 ),
    .din3_WIDTH( 14 ),
    .dout_WIDTH( 14 ))
ama_addmuladd_14ns_14ns_14s_14ns_14_4_1_U379(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1828_p0),
    .din1(trunc_ln23_2_mid2),
    .din2(trunc_ln23_1),
    .din3(add_ln116_reg_2736_pp0_iter2_reg),
    .ce(1'b1),
    .dout(grp_fu_1828_p4)
);

gemm_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            c_c_fu_380 <= 32'd0;
        end else if (((icmp_ln114_fu_1467_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            c_c_fu_380 <= add_ln115_fu_1803_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten54_fu_388 <= 64'd0;
        end else if (((icmp_ln114_fu_1467_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten54_fu_388 <= add_ln114_fu_1472_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            r_c_fu_384 <= 32'd0;
        end else if (((icmp_ln114_fu_1467_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            r_c_fu_384 <= select_ln114_1_fu_1503_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln114_fu_1467_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln116_reg_2736 <= add_ln116_fu_1798_p2;
        tmp_12_reg_2731 <= tmp_12_fu_1766_p15;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln116_reg_2736_pp0_iter2_reg <= add_ln116_reg_2736;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        tmp_12_reg_2731_pp0_iter2_reg <= tmp_12_reg_2731;
        tmp_12_reg_2731_pp0_iter3_reg <= tmp_12_reg_2731_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
    end
end

always @ (*) begin
    if (((icmp_ln114_fu_1467_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        c_ce0 = 1'b1;
    end else begin
        c_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        c_we0 = 1'b1;
    end else begin
        c_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln114_2_fu_1497_p2 = (r_c_fu_384 + 32'd1);

assign add_ln114_fu_1472_p2 = (indvar_flatten54_fu_388 + 64'd1);

assign add_ln115_fu_1803_p2 = (select_ln114_fu_1489_p3 + 32'd1);

assign add_ln116_fu_1798_p2 = (trunc_ln2 + empty_fu_1515_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign c_address0 = zext_ln116_fu_1824_p1;

assign c_d0 = tmp_12_reg_2731_pp0_iter3_reg;

assign empty_fu_1515_p1 = select_ln114_fu_1489_p3[13:0];

assign grp_fu_1828_p0 = select_ln114_1_fu_1503_p3[13:0];

assign icmp_ln114_fu_1467_p2 = ((indvar_flatten54_fu_388 == mul_ln19) ? 1'b1 : 1'b0);

assign icmp_ln115_fu_1484_p2 = ((c_c_fu_380 == current_tile_B_cols) ? 1'b1 : 1'b0);

assign select_ln114_1_fu_1503_p3 = ((icmp_ln115_fu_1484_p2[0:0] == 1'b1) ? add_ln114_2_fu_1497_p2 : r_c_fu_384);

assign select_ln114_fu_1489_p3 = ((icmp_ln115_fu_1484_p2[0:0] == 1'b1) ? 32'd0 : c_c_fu_380);

assign zext_ln116_fu_1824_p0 = grp_fu_1828_p4;

assign zext_ln116_fu_1824_p1 = $unsigned(zext_ln116_fu_1824_p0);

endmodule //gemm_mmult_Pipeline_writeC_VITIS_LOOP_115_6
