// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="gemm_gemm,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xck26-sfvc784-2LV-c,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.016000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=90,HLS_SYN_DSP=0,HLS_SYN_FF=37678,HLS_SYN_LUT=41383,HLS_VERSION=2022_1}" *)

module gemm (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_r_TDATA,
        in_r_TVALID,
        in_r_TREADY,
        out_r_TDATA,
        out_r_TVALID,
        out_r_TREADY
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_state5 = 11'd16;
parameter    ap_ST_fsm_state6 = 11'd32;
parameter    ap_ST_fsm_state7 = 11'd64;
parameter    ap_ST_fsm_state8 = 11'd128;
parameter    ap_ST_fsm_state9 = 11'd256;
parameter    ap_ST_fsm_state10 = 11'd512;
parameter    ap_ST_fsm_state11 = 11'd1024;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [127:0] in_r_TDATA;
input   in_r_TVALID;
output   in_r_TREADY;
output  [127:0] out_r_TDATA;
output   out_r_TVALID;
input   out_r_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    out_r_TDATA_blk_n;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
reg   [31:0] N_reg_182;
wire    ap_CS_fsm_state3;
reg   [31:0] K_reg_189;
reg   [31:0] M_reg_194;
wire    ap_CS_fsm_state5;
wire   [31:0] mul_i_fu_121_p2;
reg   [31:0] mul_i_reg_201;
wire    ap_CS_fsm_state6;
wire   [31:0] grp_fu_104_p1;
reg   [31:0] tmp_num0_reg_206;
wire    ap_CS_fsm_state8;
wire   [31:0] grp_fu_108_p1;
reg   [31:0] tmp_num1_reg_211;
wire   [127:0] p_0_fu_145_p5;
reg   [13:0] a_address0;
reg    a_ce0;
reg    a_we0;
wire   [31:0] a_q0;
reg   [13:0] b_address0;
reg    b_ce0;
reg    b_we0;
wire   [31:0] b_q0;
reg   [13:0] c_address0;
reg    c_ce0;
reg    c_we0;
wire   [31:0] c_q0;
wire    grp_inputMatrix_fu_73_ap_start;
wire    grp_inputMatrix_fu_73_ap_done;
wire    grp_inputMatrix_fu_73_ap_idle;
wire    grp_inputMatrix_fu_73_ap_ready;
wire    grp_inputMatrix_fu_73_in_r_TREADY;
wire   [13:0] grp_inputMatrix_fu_73_matrix_address0;
wire    grp_inputMatrix_fu_73_matrix_ce0;
wire    grp_inputMatrix_fu_73_matrix_we0;
wire   [31:0] grp_inputMatrix_fu_73_matrix_d0;
wire   [31:0] grp_inputMatrix_fu_73_ap_return_0;
wire  signed [31:0] grp_inputMatrix_fu_73_ap_return_1;
wire    grp_mmult_fu_80_ap_start;
wire    grp_mmult_fu_80_ap_done;
wire    grp_mmult_fu_80_ap_idle;
wire    grp_mmult_fu_80_ap_ready;
wire   [13:0] grp_mmult_fu_80_a_address0;
wire    grp_mmult_fu_80_a_ce0;
wire   [13:0] grp_mmult_fu_80_b_address0;
wire    grp_mmult_fu_80_b_ce0;
wire   [13:0] grp_mmult_fu_80_c_address0;
wire    grp_mmult_fu_80_c_ce0;
wire    grp_mmult_fu_80_c_we0;
wire   [31:0] grp_mmult_fu_80_c_d0;
wire    grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_ap_start;
wire    grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_ap_done;
wire    grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_ap_idle;
wire    grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_ap_ready;
wire    grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_out_r_TREADY;
wire   [127:0] grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_out_r_TDATA;
wire    grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_out_r_TVALID;
wire   [13:0] grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_c_address0;
wire    grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_c_ce0;
wire   [31:0] grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_tmp_num0_2_out;
wire    grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_tmp_num0_2_out_ap_vld;
wire   [31:0] grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_tmp_num1_4_out;
wire    grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_tmp_num1_4_out_ap_vld;
wire   [31:0] grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_p_out;
wire    grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_p_out_ap_vld;
wire   [31:0] grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_p_out1;
wire    grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_p_out1_ap_vld;
reg    grp_inputMatrix_fu_73_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state4;
reg    grp_mmult_fu_80_ap_start_reg;
wire    ap_CS_fsm_state7;
reg    grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_ap_start_reg;
wire    ap_CS_fsm_state9;
wire   [31:0] bitcast_ln174_1_fu_141_p1;
wire   [31:0] bitcast_ln174_fu_137_p1;
reg    grp_fu_104_ce;
reg    grp_fu_108_ce;
wire    regslice_both_out_r_U_apdone_blk;
reg    ap_block_state11;
reg   [10:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
reg    ap_ST_fsm_state9_blk;
reg    ap_ST_fsm_state10_blk;
reg    ap_ST_fsm_state11_blk;
wire    regslice_both_in_r_U_apdone_blk;
wire   [127:0] in_r_TDATA_int_regslice;
wire    in_r_TVALID_int_regslice;
reg    in_r_TREADY_int_regslice;
wire    regslice_both_in_r_U_ack_in;
reg   [127:0] out_r_TDATA_int_regslice;
reg    out_r_TVALID_int_regslice;
wire    out_r_TREADY_int_regslice;
wire    regslice_both_out_r_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 grp_inputMatrix_fu_73_ap_start_reg = 1'b0;
#0 grp_mmult_fu_80_ap_start_reg = 1'b0;
#0 grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_ap_start_reg = 1'b0;
end

gemm_a_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
a_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_address0),
    .ce0(a_ce0),
    .we0(a_we0),
    .d0(grp_inputMatrix_fu_73_matrix_d0),
    .q0(a_q0)
);

gemm_a_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
b_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_address0),
    .ce0(b_ce0),
    .we0(b_we0),
    .d0(grp_inputMatrix_fu_73_matrix_d0),
    .q0(b_q0)
);

gemm_c_RAM_1WNR_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c_address0),
    .ce0(c_ce0),
    .we0(c_we0),
    .d0(grp_mmult_fu_80_c_d0),
    .q0(c_q0)
);

gemm_inputMatrix grp_inputMatrix_fu_73(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_inputMatrix_fu_73_ap_start),
    .ap_done(grp_inputMatrix_fu_73_ap_done),
    .ap_idle(grp_inputMatrix_fu_73_ap_idle),
    .ap_ready(grp_inputMatrix_fu_73_ap_ready),
    .in_r_TDATA(in_r_TDATA_int_regslice),
    .in_r_TVALID(in_r_TVALID_int_regslice),
    .in_r_TREADY(grp_inputMatrix_fu_73_in_r_TREADY),
    .matrix_address0(grp_inputMatrix_fu_73_matrix_address0),
    .matrix_ce0(grp_inputMatrix_fu_73_matrix_ce0),
    .matrix_we0(grp_inputMatrix_fu_73_matrix_we0),
    .matrix_d0(grp_inputMatrix_fu_73_matrix_d0),
    .ap_return_0(grp_inputMatrix_fu_73_ap_return_0),
    .ap_return_1(grp_inputMatrix_fu_73_ap_return_1)
);

gemm_mmult grp_mmult_fu_80(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_mmult_fu_80_ap_start),
    .ap_done(grp_mmult_fu_80_ap_done),
    .ap_idle(grp_mmult_fu_80_ap_idle),
    .ap_ready(grp_mmult_fu_80_ap_ready),
    .a_address0(grp_mmult_fu_80_a_address0),
    .a_ce0(grp_mmult_fu_80_a_ce0),
    .a_q0(a_q0),
    .b_address0(grp_mmult_fu_80_b_address0),
    .b_ce0(grp_mmult_fu_80_b_ce0),
    .b_q0(b_q0),
    .c_address0(grp_mmult_fu_80_c_address0),
    .c_ce0(grp_mmult_fu_80_c_ce0),
    .c_we0(grp_mmult_fu_80_c_we0),
    .c_d0(grp_mmult_fu_80_c_d0),
    .A_ROWS(N_reg_182),
    .A_COLS(K_reg_189),
    .B_COLS(M_reg_194)
);

gemm_gemm_Pipeline_VITIS_LOOP_41_1 grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_ap_start),
    .ap_done(grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_ap_done),
    .ap_idle(grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_ap_idle),
    .ap_ready(grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_ap_ready),
    .out_r_TREADY(grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_out_r_TREADY),
    .tmp_num0(tmp_num0_reg_206),
    .tmp_num1(tmp_num1_reg_211),
    .mul_i(mul_i_reg_201),
    .out_r_TDATA(grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_out_r_TDATA),
    .out_r_TVALID(grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_out_r_TVALID),
    .c_address0(grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_c_address0),
    .c_ce0(grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_c_ce0),
    .c_q0(c_q0),
    .tmp_num0_2_out(grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_tmp_num0_2_out),
    .tmp_num0_2_out_ap_vld(grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_tmp_num0_2_out_ap_vld),
    .tmp_num1_4_out(grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_tmp_num1_4_out),
    .tmp_num1_4_out_ap_vld(grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_tmp_num1_4_out_ap_vld),
    .p_out(grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_p_out),
    .p_out_ap_vld(grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_p_out_ap_vld),
    .p_out1(grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_p_out1),
    .p_out1_ap_vld(grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_p_out1_ap_vld)
);

gemm_sitofp_32s_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sitofp_32s_32_4_no_dsp_1_U583(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(N_reg_182),
    .ce(grp_fu_104_ce),
    .dout(grp_fu_104_p1)
);

gemm_sitofp_32s_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sitofp_32s_32_4_no_dsp_1_U584(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_inputMatrix_fu_73_ap_return_1),
    .ce(grp_fu_108_ce),
    .dout(grp_fu_108_p1)
);

gemm_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U585(
    .din0(M_reg_194),
    .din1(N_reg_182),
    .dout(mul_i_fu_121_p2)
);

gemm_regslice_both #(
    .DataWidth( 128 ))
regslice_both_in_r_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TDATA),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_r_U_ack_in),
    .data_out(in_r_TDATA_int_regslice),
    .vld_out(in_r_TVALID_int_regslice),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_r_U_apdone_blk)
);

gemm_regslice_both #(
    .DataWidth( 128 ))
regslice_both_out_r_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_r_TDATA_int_regslice),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(out_r_TREADY_int_regslice),
    .data_out(out_r_TDATA),
    .vld_out(regslice_both_out_r_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_r_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_ap_start_reg <= 1'b1;
        end else if ((grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_ap_ready == 1'b1)) begin
            grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_inputMatrix_fu_73_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
            grp_inputMatrix_fu_73_ap_start_reg <= 1'b1;
        end else if ((grp_inputMatrix_fu_73_ap_ready == 1'b1)) begin
            grp_inputMatrix_fu_73_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_mmult_fu_80_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_mmult_fu_80_ap_start_reg <= 1'b1;
        end else if ((grp_mmult_fu_80_ap_ready == 1'b1)) begin
            grp_mmult_fu_80_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        K_reg_189 <= grp_inputMatrix_fu_73_ap_return_1;
        N_reg_182 <= grp_inputMatrix_fu_73_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        M_reg_194 <= grp_inputMatrix_fu_73_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        mul_i_reg_201 <= mul_i_fu_121_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_num0_reg_206 <= grp_fu_104_p1;
        tmp_num1_reg_211 <= grp_fu_108_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        a_address0 = grp_mmult_fu_80_a_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        a_address0 = grp_inputMatrix_fu_73_matrix_address0;
    end else begin
        a_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        a_ce0 = grp_mmult_fu_80_a_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        a_ce0 = grp_inputMatrix_fu_73_matrix_ce0;
    end else begin
        a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        a_we0 = grp_inputMatrix_fu_73_matrix_we0;
    end else begin
        a_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((out_r_TREADY_int_regslice == 1'b0)) begin
        ap_ST_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_fsm_state10_blk = 1'b0;
    end
end

always @ (*) begin
    if (((out_r_TREADY_int_regslice == 1'b0) | (regslice_both_out_r_U_apdone_blk == 1'b1))) begin
        ap_ST_fsm_state11_blk = 1'b1;
    end else begin
        ap_ST_fsm_state11_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_inputMatrix_fu_73_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((grp_inputMatrix_fu_73_ap_done == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

assign ap_ST_fsm_state6_blk = 1'b0;

always @ (*) begin
    if ((grp_mmult_fu_80_ap_done == 1'b0)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

assign ap_ST_fsm_state8_blk = 1'b0;

always @ (*) begin
    if ((grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_ap_done == 1'b0)) begin
        ap_ST_fsm_state9_blk = 1'b1;
    end else begin
        ap_ST_fsm_state9_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((out_r_TREADY_int_regslice == 1'b0) | (regslice_both_out_r_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((out_r_TREADY_int_regslice == 1'b0) | (regslice_both_out_r_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        b_address0 = grp_mmult_fu_80_b_address0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        b_address0 = grp_inputMatrix_fu_73_matrix_address0;
    end else begin
        b_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        b_ce0 = grp_mmult_fu_80_b_ce0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        b_ce0 = grp_inputMatrix_fu_73_matrix_ce0;
    end else begin
        b_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        b_we0 = grp_inputMatrix_fu_73_matrix_we0;
    end else begin
        b_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        c_address0 = grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_c_address0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        c_address0 = grp_mmult_fu_80_c_address0;
    end else begin
        c_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        c_ce0 = grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_c_ce0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        c_ce0 = grp_mmult_fu_80_c_ce0;
    end else begin
        c_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        c_we0 = grp_mmult_fu_80_c_we0;
    end else begin
        c_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state5) & (grp_inputMatrix_fu_73_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state7) & (grp_mmult_fu_80_ap_done == 1'b1)))) begin
        grp_fu_104_ce = 1'b1;
    end else begin
        grp_fu_104_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state5) & (grp_inputMatrix_fu_73_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state7) & (grp_mmult_fu_80_ap_done == 1'b1)))) begin
        grp_fu_108_ce = 1'b1;
    end else begin
        grp_fu_108_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
        in_r_TREADY_int_regslice = grp_inputMatrix_fu_73_in_r_TREADY;
    end else begin
        in_r_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        out_r_TDATA_blk_n = out_r_TREADY_int_regslice;
    end else begin
        out_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((out_r_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        out_r_TDATA_int_regslice = p_0_fu_145_p5;
    end else if (((1'b1 == ap_CS_fsm_state9) & (grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_out_r_TVALID == 1'b1))) begin
        out_r_TDATA_int_regslice = grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_out_r_TDATA;
    end else begin
        out_r_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if (((out_r_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        out_r_TVALID_int_regslice = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        out_r_TVALID_int_regslice = grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_out_r_TVALID;
    end else begin
        out_r_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_inputMatrix_fu_73_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (grp_inputMatrix_fu_73_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (grp_mmult_fu_80_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((out_r_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if ((~((out_r_TREADY_int_regslice == 1'b0) | (regslice_both_out_r_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state11 = ((out_r_TREADY_int_regslice == 1'b0) | (regslice_both_out_r_U_apdone_blk == 1'b1));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bitcast_ln174_1_fu_141_p1 = grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_tmp_num1_4_out;

assign bitcast_ln174_fu_137_p1 = grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_tmp_num0_2_out;

assign grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_ap_start = grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_ap_start_reg;

assign grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_out_r_TREADY = (out_r_TREADY_int_regslice & ap_CS_fsm_state9);

assign grp_inputMatrix_fu_73_ap_start = grp_inputMatrix_fu_73_ap_start_reg;

assign grp_mmult_fu_80_ap_start = grp_mmult_fu_80_ap_start_reg;

assign in_r_TREADY = regslice_both_in_r_U_ack_in;

assign out_r_TVALID = regslice_both_out_r_U_vld_out;

assign p_0_fu_145_p5 = {{{{grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_p_out1}, {grp_gemm_Pipeline_VITIS_LOOP_41_1_fu_90_p_out}}, {bitcast_ln174_1_fu_141_p1}}, {bitcast_ln174_fu_137_p1}};


reg find_kernel_block = 0;
// synthesis translate_off
`include "gemm_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //gemm

