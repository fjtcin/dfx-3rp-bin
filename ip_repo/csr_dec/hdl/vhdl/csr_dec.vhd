-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity csr_dec is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_r_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    in_r_TVALID : IN STD_LOGIC;
    in_r_TREADY : OUT STD_LOGIC;
    out_r_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
    out_r_TVALID : OUT STD_LOGIC;
    out_r_TREADY : IN STD_LOGIC );
end;


architecture behav of csr_dec is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "csr_dec_csr_dec,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xck26-sfvc784-2LV-c,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.686667,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=38,HLS_SYN_DSP=0,HLS_SYN_FF=1229,HLS_SYN_LUT=4786,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (15 downto 0) := "0000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (15 downto 0) := "0001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (15 downto 0) := "0010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (15 downto 0) := "0100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_5E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011110";
    constant ap_const_lv32_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010110";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal in_r_TDATA_blk_n : STD_LOGIC;
    signal out_r_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal data_V_reg_1133 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_V_1_reg_1138 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_1143 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_reg_1148 : STD_LOGIC_VECTOR (0 downto 0);
    signal xs_exp_V_reg_1153 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_2_fu_281_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_2_reg_1159 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_3_reg_1164 : STD_LOGIC_VECTOR (0 downto 0);
    signal xs_exp_V_1_reg_1169 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_4_reg_1175 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_5_reg_1180 : STD_LOGIC_VECTOR (0 downto 0);
    signal xs_exp_V_2_reg_1185 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_6_reg_1191 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_num1_fu_346_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_num1_reg_1196 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_num2_fu_350_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_num2_reg_1201 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_num3_fu_354_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_num3_reg_1206 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_20_fu_461_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_20_reg_1211 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_fu_578_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_reg_1218 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln16_fu_596_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln16_reg_1223 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln74_fu_603_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln74_reg_1228 : STD_LOGIC_VECTOR (11 downto 0);
    signal result_V_21_fu_710_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_21_reg_1233 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal trunc_ln58_fu_717_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln58_reg_1239 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln2_fu_721_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln2_reg_1244 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln75_fu_742_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln75_reg_1253 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal icmp_ln75_fu_731_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_i14_fu_755_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_i14_reg_1264 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal data_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dc_2_reg_1279 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal data_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dc_3_reg_1284 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_fu_914_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_reg_1289 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal result_V_23_fu_1054_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_23_reg_1294 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1096_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_23_reg_1299 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_225_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_num0_1_reg_1304 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal grp_fu_229_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_num1_2_reg_1309 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_0_fu_1083_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal a_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal a_ce0 : STD_LOGIC;
    signal a_we0 : STD_LOGIC;
    signal a_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal data_ce0 : STD_LOGIC;
    signal data_we0 : STD_LOGIC;
    signal data_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal data_ce1 : STD_LOGIC;
    signal grp_csr_dec_Pipeline_1_fu_184_ap_start : STD_LOGIC;
    signal grp_csr_dec_Pipeline_1_fu_184_ap_done : STD_LOGIC;
    signal grp_csr_dec_Pipeline_1_fu_184_ap_idle : STD_LOGIC;
    signal grp_csr_dec_Pipeline_1_fu_184_ap_ready : STD_LOGIC;
    signal grp_csr_dec_Pipeline_1_fu_184_a_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_csr_dec_Pipeline_1_fu_184_a_ce0 : STD_LOGIC;
    signal grp_csr_dec_Pipeline_1_fu_184_a_we0 : STD_LOGIC;
    signal grp_csr_dec_Pipeline_1_fu_184_a_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_ap_start : STD_LOGIC;
    signal grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_ap_done : STD_LOGIC;
    signal grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_ap_idle : STD_LOGIC;
    signal grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_ap_ready : STD_LOGIC;
    signal grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_in_r_TREADY : STD_LOGIC;
    signal grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_data_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_data_ce0 : STD_LOGIC;
    signal grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_data_we0 : STD_LOGIC;
    signal grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_data_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_ap_start : STD_LOGIC;
    signal grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_ap_done : STD_LOGIC;
    signal grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_ap_idle : STD_LOGIC;
    signal grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_ap_ready : STD_LOGIC;
    signal grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_data_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_data_ce0 : STD_LOGIC;
    signal grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_data_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_data_ce1 : STD_LOGIC;
    signal grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_a_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_a_ce0 : STD_LOGIC;
    signal grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_a_we0 : STD_LOGIC;
    signal grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_a_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_ap_start : STD_LOGIC;
    signal grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_ap_done : STD_LOGIC;
    signal grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_ap_idle : STD_LOGIC;
    signal grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_ap_ready : STD_LOGIC;
    signal grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_out_r_TREADY : STD_LOGIC;
    signal grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_out_r_TDATA : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_out_r_TVALID : STD_LOGIC;
    signal grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_a_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_a_ce0 : STD_LOGIC;
    signal grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_tmp_num0_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_tmp_num0_2_out_ap_vld : STD_LOGIC;
    signal grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_tmp_num1_4_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_tmp_num1_4_out_ap_vld : STD_LOGIC;
    signal grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_p_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_p_out_ap_vld : STD_LOGIC;
    signal grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_p_out1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_p_out1_ap_vld : STD_LOGIC;
    signal grp_csr_dec_Pipeline_1_fu_184_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call12 : BOOLEAN;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal zext_ln76_fu_763_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ptr42_sum4_cast_fu_778_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_1_fu_120 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvars_iv_next43_fu_736_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal mantissa_fu_358_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal zext_ln346_fu_371_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln346_fu_374_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1512_fu_388_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_fu_380_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1512_fu_393_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ush_fu_397_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1488_fu_405_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_fu_367_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln1488_fu_409_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal r_V_fu_413_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_fu_425_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_10_fu_419_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln818_fu_433_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_437_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_fu_447_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_4_fu_455_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mantissa_2_fu_468_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal zext_ln346_2_fu_481_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln346_2_fu_484_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1512_2_fu_498_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_2_fu_490_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1512_2_fu_503_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ush_2_fu_507_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1488_2_fu_515_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_2_fu_477_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln1488_2_fu_519_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal r_V_13_fu_523_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_12_fu_535_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_14_fu_529_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln818_2_fu_543_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_5_fu_547_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal val_2_fu_557_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal result_V_14_fu_565_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal result_V_22_fu_571_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_i_fu_582_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln16_fu_590_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mantissa_1_fu_607_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal zext_ln346_1_fu_620_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln346_1_fu_623_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1512_1_fu_637_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_1_fu_629_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1512_1_fu_642_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ush_1_fu_646_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1488_1_fu_654_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_1_fu_616_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln1488_1_fu_658_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal r_V_11_fu_662_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_8_fu_674_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_12_fu_668_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln818_1_fu_682_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_686_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_1_fu_696_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_9_fu_704_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln76_fu_759_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal indvars_iv_next43_cast_fu_768_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ptr42_sum4_fu_773_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal data_V_2_fu_783_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_8_fu_804_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal mantissa_3_fu_808_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal xs_exp_V_3_fu_794_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln346_3_fu_822_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln346_3_fu_826_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1512_3_fu_840_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_3_fu_832_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1512_3_fu_846_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ush_3_fu_850_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1488_3_fu_858_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_3_fu_818_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln1488_3_fu_862_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal r_V_15_fu_866_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_17_fu_878_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_16_fu_872_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln818_3_fu_886_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_890_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_3_fu_900_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_7_fu_786_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_V_15_fu_908_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_V_3_fu_923_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_10_fu_944_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal mantissa_4_fu_948_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal xs_exp_V_4_fu_934_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln346_4_fu_962_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln346_4_fu_966_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1512_4_fu_980_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_4_fu_972_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1512_4_fu_986_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ush_4_fu_990_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1488_4_fu_998_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_4_fu_958_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln1488_4_fu_1002_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal r_V_17_fu_1006_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_22_fu_1018_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_18_fu_1012_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln818_4_fu_1026_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_1030_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_4_fu_1040_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_9_fu_926_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_V_18_fu_1048_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln174_1_fu_1079_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln174_fu_1075_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1096_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal regslice_both_out_r_U_apdone_blk : STD_LOGIC;
    signal ap_block_state16 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal regslice_both_in_r_U_apdone_blk : STD_LOGIC;
    signal in_r_TDATA_int_regslice : STD_LOGIC_VECTOR (127 downto 0);
    signal in_r_TVALID_int_regslice : STD_LOGIC;
    signal in_r_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_in_r_U_ack_in : STD_LOGIC;
    signal out_r_TDATA_int_regslice : STD_LOGIC_VECTOR (127 downto 0);
    signal out_r_TVALID_int_regslice : STD_LOGIC;
    signal out_r_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_out_r_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component csr_dec_csr_dec_Pipeline_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_we0 : OUT STD_LOGIC;
        a_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component csr_dec_csr_dec_Pipeline_VITIS_LOOP_16_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_r_TVALID : IN STD_LOGIC;
        tmp_num1_8 : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp_num2_7 : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp_num3 : IN STD_LOGIC_VECTOR (31 downto 0);
        add_ln16 : IN STD_LOGIC_VECTOR (31 downto 0);
        in_r_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
        in_r_TREADY : OUT STD_LOGIC;
        data_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        data_ce0 : OUT STD_LOGIC;
        data_we0 : OUT STD_LOGIC;
        data_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component csr_dec_csr_dec_Pipeline_VITIS_LOOP_76_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sext_ln76 : IN STD_LOGIC_VECTOR (31 downto 0);
        sext_ln76_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        trunc_ln1 : IN STD_LOGIC_VECTOR (11 downto 0);
        data_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        data_ce0 : OUT STD_LOGIC;
        data_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        data_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        data_ce1 : OUT STD_LOGIC;
        data_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        empty : IN STD_LOGIC_VECTOR (13 downto 0);
        a_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_we0 : OUT STD_LOGIC;
        a_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component csr_dec_csr_dec_Pipeline_VITIS_LOOP_42_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_r_TREADY : IN STD_LOGIC;
        tmp_num0_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp_num1_2 : IN STD_LOGIC_VECTOR (31 downto 0);
        mul_i14 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_r_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
        out_r_TVALID : OUT STD_LOGIC;
        a_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp_num0_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        tmp_num0_2_out_ap_vld : OUT STD_LOGIC;
        tmp_num1_4_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        tmp_num1_4_out_ap_vld : OUT STD_LOGIC;
        p_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_out_ap_vld : OUT STD_LOGIC;
        p_out1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_out1_ap_vld : OUT STD_LOGIC );
    end component;


    component csr_dec_sitofp_32s_32_4_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component csr_dec_mul_32s_32s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component csr_dec_mul_mul_14s_14s_14_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component csr_dec_a_RAM_1WNR_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component csr_dec_data_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component csr_dec_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    a_U : component csr_dec_a_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 16384,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_address0,
        ce0 => a_ce0,
        we0 => a_we0,
        d0 => a_d0,
        q0 => a_q0);

    data_U : component csr_dec_data_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => data_address0,
        ce0 => data_ce0,
        we0 => data_we0,
        d0 => grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_data_d0,
        q0 => data_q0,
        address1 => data_address1,
        ce1 => data_ce1,
        q1 => data_q1);

    grp_csr_dec_Pipeline_1_fu_184 : component csr_dec_csr_dec_Pipeline_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_csr_dec_Pipeline_1_fu_184_ap_start,
        ap_done => grp_csr_dec_Pipeline_1_fu_184_ap_done,
        ap_idle => grp_csr_dec_Pipeline_1_fu_184_ap_idle,
        ap_ready => grp_csr_dec_Pipeline_1_fu_184_ap_ready,
        a_address0 => grp_csr_dec_Pipeline_1_fu_184_a_address0,
        a_ce0 => grp_csr_dec_Pipeline_1_fu_184_a_ce0,
        a_we0 => grp_csr_dec_Pipeline_1_fu_184_a_we0,
        a_d0 => grp_csr_dec_Pipeline_1_fu_184_a_d0);

    grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190 : component csr_dec_csr_dec_Pipeline_VITIS_LOOP_16_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_ap_start,
        ap_done => grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_ap_done,
        ap_idle => grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_ap_idle,
        ap_ready => grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_ap_ready,
        in_r_TVALID => in_r_TVALID_int_regslice,
        tmp_num1_8 => tmp_num1_reg_1196,
        tmp_num2_7 => tmp_num2_reg_1201,
        tmp_num3 => tmp_num3_reg_1206,
        add_ln16 => add_ln16_reg_1223,
        in_r_TDATA => in_r_TDATA_int_regslice,
        in_r_TREADY => grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_in_r_TREADY,
        data_address0 => grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_data_address0,
        data_ce0 => grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_data_ce0,
        data_we0 => grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_data_we0,
        data_d0 => grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_data_d0);

    grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201 : component csr_dec_csr_dec_Pipeline_VITIS_LOOP_76_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_ap_start,
        ap_done => grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_ap_done,
        ap_idle => grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_ap_idle,
        ap_ready => grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_ap_ready,
        sext_ln76 => result_V_reg_1289,
        sext_ln76_1 => result_V_23_reg_1294,
        trunc_ln1 => trunc_ln74_reg_1228,
        data_address0 => grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_data_address0,
        data_ce0 => grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_data_ce0,
        data_q0 => data_q0,
        data_address1 => grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_data_address1,
        data_ce1 => grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_data_ce1,
        data_q1 => data_q1,
        empty => empty_23_reg_1299,
        a_address0 => grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_a_address0,
        a_ce0 => grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_a_ce0,
        a_we0 => grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_a_we0,
        a_d0 => grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_a_d0);

    grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211 : component csr_dec_csr_dec_Pipeline_VITIS_LOOP_42_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_ap_start,
        ap_done => grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_ap_done,
        ap_idle => grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_ap_idle,
        ap_ready => grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_ap_ready,
        out_r_TREADY => grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_out_r_TREADY,
        tmp_num0_1 => tmp_num0_1_reg_1304,
        tmp_num1_2 => tmp_num1_2_reg_1309,
        mul_i14 => mul_i14_reg_1264,
        out_r_TDATA => grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_out_r_TDATA,
        out_r_TVALID => grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_out_r_TVALID,
        a_address0 => grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_a_address0,
        a_ce0 => grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_a_ce0,
        a_q0 => a_q0,
        tmp_num0_2_out => grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_tmp_num0_2_out,
        tmp_num0_2_out_ap_vld => grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_tmp_num0_2_out_ap_vld,
        tmp_num1_4_out => grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_tmp_num1_4_out,
        tmp_num1_4_out_ap_vld => grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_tmp_num1_4_out_ap_vld,
        p_out => grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_p_out,
        p_out_ap_vld => grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_p_out_ap_vld,
        p_out1 => grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_p_out1,
        p_out1_ap_vld => grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_p_out1_ap_vld);

    sitofp_32s_32_4_no_dsp_1_U23 : component csr_dec_sitofp_32s_32_4_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => result_V_20_reg_1211,
        ce => ap_const_logic_1,
        dout => grp_fu_225_p1);

    sitofp_32s_32_4_no_dsp_1_U24 : component csr_dec_sitofp_32s_32_4_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => result_V_21_reg_1233,
        ce => ap_const_logic_1,
        dout => grp_fu_229_p1);

    mul_32s_32s_32_1_1_U25 : component csr_dec_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => result_V_21_reg_1233,
        din1 => result_V_20_reg_1211,
        dout => mul_i14_fu_755_p2);

    mul_mul_14s_14s_14_4_1_U26 : component csr_dec_mul_mul_14s_14s_14_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 14,
        din1_WIDTH => 14,
        dout_WIDTH => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1096_p0,
        din1 => trunc_ln58_reg_1239,
        ce => ap_const_logic_1,
        dout => grp_fu_1096_p2);

    regslice_both_in_r_U : component csr_dec_regslice_both
    generic map (
        DataWidth => 128)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_r_TDATA,
        vld_in => in_r_TVALID,
        ack_in => regslice_both_in_r_U_ack_in,
        data_out => in_r_TDATA_int_regslice,
        vld_out => in_r_TVALID_int_regslice,
        ack_out => in_r_TREADY_int_regslice,
        apdone_blk => regslice_both_in_r_U_apdone_blk);

    regslice_both_out_r_U : component csr_dec_regslice_both
    generic map (
        DataWidth => 128)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => out_r_TDATA_int_regslice,
        vld_in => out_r_TVALID_int_regslice,
        ack_in => out_r_TREADY_int_regslice,
        data_out => out_r_TDATA,
        vld_out => regslice_both_out_r_U_vld_out,
        ack_out => out_r_TREADY,
        apdone_blk => regslice_both_out_r_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_csr_dec_Pipeline_1_fu_184_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_csr_dec_Pipeline_1_fu_184_ap_start_reg <= ap_const_logic_0;
            else
                if ((not(((in_r_TVALID_int_regslice = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_csr_dec_Pipeline_1_fu_184_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_csr_dec_Pipeline_1_fu_184_ap_ready = ap_const_logic_1)) then 
                    grp_csr_dec_Pipeline_1_fu_184_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_ap_ready = ap_const_logic_1)) then 
                    grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_ap_ready = ap_const_logic_1)) then 
                    grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_ap_ready = ap_const_logic_1)) then 
                    grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_1_fu_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in_r_TVALID_int_regslice = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_1_fu_120 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln75_fu_731_p2 = ap_const_lv1_0))) then 
                i_1_fu_120 <= indvars_iv_next43_fu_736_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln16_reg_1223 <= add_ln16_fu_596_p2;
                empty_reg_1218 <= empty_fu_578_p1;
                result_V_20_reg_1211 <= result_V_20_fu_461_p3;
                tmp_num1_reg_1196 <= tmp_num1_fu_346_p1;
                tmp_num2_reg_1201 <= tmp_num2_fu_350_p1;
                tmp_num3_reg_1206 <= tmp_num3_fu_354_p1;
                trunc_ln74_reg_1228 <= trunc_ln74_fu_603_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                data_V_1_reg_1138 <= in_r_TDATA_int_regslice(95 downto 64);
                data_V_reg_1133 <= in_r_TDATA_int_regslice(63 downto 32);
                p_Result_2_reg_1159 <= p_Result_2_fu_281_p1;
                p_Result_3_reg_1164 <= in_r_TDATA_int_regslice(63 downto 63);
                p_Result_4_reg_1175 <= in_r_TDATA_int_regslice(54 downto 32);
                p_Result_5_reg_1180 <= in_r_TDATA_int_regslice(95 downto 95);
                p_Result_6_reg_1191 <= in_r_TDATA_int_regslice(86 downto 64);
                p_Result_s_reg_1148 <= in_r_TDATA_int_regslice(31 downto 31);
                tmp_s_reg_1143 <= in_r_TDATA_int_regslice(127 downto 96);
                xs_exp_V_1_reg_1169 <= in_r_TDATA_int_regslice(62 downto 55);
                xs_exp_V_2_reg_1185 <= in_r_TDATA_int_regslice(94 downto 87);
                xs_exp_V_reg_1153 <= in_r_TDATA_int_regslice(30 downto 23);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                dc_2_reg_1279 <= data_q1;
                dc_3_reg_1284 <= data_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                empty_23_reg_1299 <= grp_fu_1096_p2;
                result_V_23_reg_1294 <= result_V_23_fu_1054_p3;
                result_V_reg_1289 <= result_V_fu_914_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln75_fu_731_p2 = ap_const_lv1_1))) then
                mul_i14_reg_1264 <= mul_i14_fu_755_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                result_V_21_reg_1233 <= result_V_21_fu_710_p3;
                    trunc_ln2_reg_1244(11 downto 1) <= trunc_ln2_fu_721_p3(11 downto 1);
                trunc_ln58_reg_1239 <= trunc_ln58_fu_717_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                tmp_num0_1_reg_1304 <= grp_fu_225_p1;
                tmp_num1_2_reg_1309 <= grp_fu_229_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln75_fu_731_p2 = ap_const_lv1_0))) then
                trunc_ln75_reg_1253 <= trunc_ln75_fu_742_p1;
            end if;
        end if;
    end process;
    trunc_ln2_reg_1244(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state6, icmp_ln75_fu_731_p2, grp_csr_dec_Pipeline_1_fu_184_ap_done, grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_ap_done, grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_ap_done, grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state10, ap_CS_fsm_state14, regslice_both_out_r_U_apdone_blk, in_r_TVALID_int_regslice, out_r_TREADY_int_regslice)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((in_r_TVALID_int_regslice = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_csr_dec_Pipeline_1_fu_184_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln75_fu_731_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                if (((out_r_TREADY_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                if ((not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_out_r_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXX";
        end case;
    end process;

    a_address0_assign_proc : process(grp_csr_dec_Pipeline_1_fu_184_a_address0, grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_a_address0, grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_a_address0, ap_CS_fsm_state2, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            a_address0 <= grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_a_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            a_address0 <= grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_a_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            a_address0 <= grp_csr_dec_Pipeline_1_fu_184_a_address0;
        else 
            a_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    a_ce0_assign_proc : process(grp_csr_dec_Pipeline_1_fu_184_a_ce0, grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_a_ce0, grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_a_ce0, ap_CS_fsm_state2, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            a_ce0 <= grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_a_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            a_ce0 <= grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_a_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            a_ce0 <= grp_csr_dec_Pipeline_1_fu_184_a_ce0;
        else 
            a_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_d0_assign_proc : process(grp_csr_dec_Pipeline_1_fu_184_a_d0, grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_a_d0, ap_CS_fsm_state2, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            a_d0 <= grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_a_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            a_d0 <= grp_csr_dec_Pipeline_1_fu_184_a_d0;
        else 
            a_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    a_we0_assign_proc : process(grp_csr_dec_Pipeline_1_fu_184_a_we0, grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_a_we0, ap_CS_fsm_state2, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            a_we0 <= grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_a_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            a_we0 <= grp_csr_dec_Pipeline_1_fu_184_a_we0;
        else 
            a_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln16_fu_596_p2 <= std_logic_vector(unsigned(or_ln16_fu_590_p2) + unsigned(result_V_20_fu_461_p3));
    add_ln346_1_fu_623_p2 <= std_logic_vector(unsigned(zext_ln346_1_fu_620_p1) + unsigned(ap_const_lv9_181));
    add_ln346_2_fu_484_p2 <= std_logic_vector(unsigned(zext_ln346_2_fu_481_p1) + unsigned(ap_const_lv9_181));
    add_ln346_3_fu_826_p2 <= std_logic_vector(unsigned(zext_ln346_3_fu_822_p1) + unsigned(ap_const_lv9_181));
    add_ln346_4_fu_966_p2 <= std_logic_vector(unsigned(zext_ln346_4_fu_962_p1) + unsigned(ap_const_lv9_181));
    add_ln346_fu_374_p2 <= std_logic_vector(unsigned(zext_ln346_fu_371_p1) + unsigned(ap_const_lv9_181));
    add_ln76_fu_759_p2 <= std_logic_vector(unsigned(trunc_ln75_reg_1253) + unsigned(trunc_ln2_reg_1244));
    add_ptr42_sum4_cast_fu_778_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ptr42_sum4_fu_773_p2),64));
    add_ptr42_sum4_fu_773_p2 <= std_logic_vector(unsigned(indvars_iv_next43_cast_fu_768_p2) + unsigned(trunc_ln2_reg_1244));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_ap_done)
    begin
        if ((grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;

    ap_ST_fsm_state14_blk_assign_proc : process(grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_ap_done)
    begin
        if ((grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state14_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state14_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state15_blk_assign_proc : process(out_r_TREADY_int_regslice)
    begin
        if ((out_r_TREADY_int_regslice = ap_const_logic_0)) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state16_blk_assign_proc : process(regslice_both_out_r_U_apdone_blk, out_r_TREADY_int_regslice)
    begin
        if (((out_r_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_out_r_U_apdone_blk = ap_const_logic_1))) then 
            ap_ST_fsm_state16_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state16_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, in_r_TVALID_int_regslice)
    begin
        if (((in_r_TVALID_int_regslice = ap_const_logic_0) or (ap_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_csr_dec_Pipeline_1_fu_184_ap_done)
    begin
        if ((grp_csr_dec_Pipeline_1_fu_184_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_ap_done)
    begin
        if ((grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(ap_start, in_r_TVALID_int_regslice)
    begin
                ap_block_state1 <= ((in_r_TVALID_int_regslice = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state16_assign_proc : process(regslice_both_out_r_U_apdone_blk, out_r_TREADY_int_regslice)
    begin
                ap_block_state16 <= ((out_r_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_out_r_U_apdone_blk = ap_const_logic_1));
    end process;


    ap_block_state1_ignore_call12_assign_proc : process(ap_start, in_r_TVALID_int_regslice)
    begin
                ap_block_state1_ignore_call12 <= ((in_r_TVALID_int_regslice = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state16, regslice_both_out_r_U_apdone_blk, out_r_TREADY_int_regslice)
    begin
        if ((not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_out_r_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state16, regslice_both_out_r_U_apdone_blk, out_r_TREADY_int_regslice)
    begin
        if ((not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_out_r_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    bitcast_ln174_1_fu_1079_p1 <= grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_tmp_num1_4_out;
    bitcast_ln174_fu_1075_p1 <= grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_tmp_num0_2_out;
    data_V_2_fu_783_p1 <= dc_2_reg_1279;
    data_V_3_fu_923_p1 <= dc_3_reg_1284;

    data_address0_assign_proc : process(ap_CS_fsm_state7, grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_data_address0, grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_data_address0, ap_CS_fsm_state4, ap_CS_fsm_state10, add_ptr42_sum4_cast_fu_778_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            data_address0 <= add_ptr42_sum4_cast_fu_778_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            data_address0 <= grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_data_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            data_address0 <= grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_data_address0;
        else 
            data_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    data_address1_assign_proc : process(ap_CS_fsm_state7, grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_data_address1, ap_CS_fsm_state10, zext_ln76_fu_763_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            data_address1 <= zext_ln76_fu_763_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            data_address1 <= grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_data_address1;
        else 
            data_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    data_ce0_assign_proc : process(ap_CS_fsm_state7, grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_data_ce0, grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_data_ce0, ap_CS_fsm_state4, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            data_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            data_ce0 <= grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_data_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            data_ce0 <= grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_data_ce0;
        else 
            data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    data_ce1_assign_proc : process(ap_CS_fsm_state7, grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_data_ce1, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            data_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            data_ce1 <= grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_data_ce1;
        else 
            data_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    data_we0_assign_proc : process(grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_data_we0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            data_we0 <= grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_data_we0;
        else 
            data_we0 <= ap_const_logic_0;
        end if; 
    end process;

    empty_fu_578_p1 <= result_V_22_fu_571_p3(11 - 1 downto 0);
    grp_csr_dec_Pipeline_1_fu_184_ap_start <= grp_csr_dec_Pipeline_1_fu_184_ap_start_reg;
    grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_ap_start <= grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_ap_start_reg;
    grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_ap_start <= grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_ap_start_reg;
    grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_out_r_TREADY <= (out_r_TREADY_int_regslice and ap_CS_fsm_state14);
    grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_ap_start <= grp_csr_dec_Pipeline_VITIS_LOOP_76_2_fu_201_ap_start_reg;
    grp_fu_1096_p0 <= i_1_fu_120(14 - 1 downto 0);
    icmp_ln75_fu_731_p2 <= "1" when (i_1_fu_120 = result_V_20_reg_1211) else "0";

    in_r_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, in_r_TVALID_int_regslice)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_r_TDATA_blk_n <= in_r_TVALID_int_regslice;
        else 
            in_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_r_TREADY <= regslice_both_in_r_U_ack_in;

    in_r_TREADY_int_regslice_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_in_r_TREADY, ap_CS_fsm_state4, in_r_TVALID_int_regslice)
    begin
        if ((not(((in_r_TVALID_int_regslice = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_r_TREADY_int_regslice <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            in_r_TREADY_int_regslice <= grp_csr_dec_Pipeline_VITIS_LOOP_16_1_fu_190_in_r_TREADY;
        else 
            in_r_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    indvars_iv_next43_cast_fu_768_p2 <= std_logic_vector(unsigned(trunc_ln75_reg_1253) + unsigned(ap_const_lv12_1));
    indvars_iv_next43_fu_736_p2 <= std_logic_vector(unsigned(i_1_fu_120) + unsigned(ap_const_lv32_1));
    isNeg_1_fu_629_p3 <= add_ln346_1_fu_623_p2(8 downto 8);
    isNeg_2_fu_490_p3 <= add_ln346_2_fu_484_p2(8 downto 8);
    isNeg_3_fu_832_p3 <= add_ln346_3_fu_826_p2(8 downto 8);
    isNeg_4_fu_972_p3 <= add_ln346_4_fu_966_p2(8 downto 8);
    isNeg_fu_380_p3 <= add_ln346_fu_374_p2(8 downto 8);
    mantissa_1_fu_607_p4 <= ((ap_const_lv1_1 & p_Result_4_reg_1175) & ap_const_lv1_0);
    mantissa_2_fu_468_p4 <= ((ap_const_lv1_1 & p_Result_6_reg_1191) & ap_const_lv1_0);
    mantissa_3_fu_808_p4 <= ((ap_const_lv1_1 & p_Result_8_fu_804_p1) & ap_const_lv1_0);
    mantissa_4_fu_948_p4 <= ((ap_const_lv1_1 & p_Result_10_fu_944_p1) & ap_const_lv1_0);
    mantissa_fu_358_p4 <= ((ap_const_lv1_1 & p_Result_2_reg_1159) & ap_const_lv1_0);
    mul_i_fu_582_p3 <= (result_V_22_fu_571_p3 & ap_const_lv1_0);
    or_ln16_fu_590_p2 <= (mul_i_fu_582_p3 or ap_const_lv32_1);

    out_r_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state16, out_r_TREADY_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            out_r_TDATA_blk_n <= out_r_TREADY_int_regslice;
        else 
            out_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_r_TDATA_int_regslice_assign_proc : process(ap_CS_fsm_state15, p_0_fu_1083_p5, grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_out_r_TDATA, grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_out_r_TVALID, ap_CS_fsm_state14, out_r_TREADY_int_regslice)
    begin
        if (((out_r_TREADY_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            out_r_TDATA_int_regslice <= p_0_fu_1083_p5;
        elsif (((grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_out_r_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            out_r_TDATA_int_regslice <= grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_out_r_TDATA;
        else 
            out_r_TDATA_int_regslice <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    out_r_TVALID <= regslice_both_out_r_U_vld_out;

    out_r_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_state15, grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_out_r_TVALID, ap_CS_fsm_state14, out_r_TREADY_int_regslice)
    begin
        if (((out_r_TREADY_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            out_r_TVALID_int_regslice <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            out_r_TVALID_int_regslice <= grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_out_r_TVALID;
        else 
            out_r_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    p_0_fu_1083_p5 <= (((grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_p_out1 & grp_csr_dec_Pipeline_VITIS_LOOP_42_1_fu_211_p_out) & bitcast_ln174_1_fu_1079_p1) & bitcast_ln174_fu_1075_p1);
    p_Result_10_fu_944_p1 <= data_V_3_fu_923_p1(23 - 1 downto 0);
    p_Result_2_fu_281_p1 <= in_r_TDATA_int_regslice(23 - 1 downto 0);
    p_Result_7_fu_786_p3 <= data_V_2_fu_783_p1(31 downto 31);
    p_Result_8_fu_804_p1 <= data_V_2_fu_783_p1(23 - 1 downto 0);
    p_Result_9_fu_926_p3 <= data_V_3_fu_923_p1(31 downto 31);
    r_V_10_fu_419_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_fu_367_p1),to_integer(unsigned('0' & zext_ln1488_fu_409_p1(31-1 downto 0)))));
    r_V_11_fu_662_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_1_fu_616_p1),to_integer(unsigned('0' & zext_ln1488_1_fu_658_p1(31-1 downto 0)))));
    r_V_12_fu_668_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_1_fu_616_p1),to_integer(unsigned('0' & zext_ln1488_1_fu_658_p1(31-1 downto 0)))));
    r_V_13_fu_523_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_2_fu_477_p1),to_integer(unsigned('0' & zext_ln1488_2_fu_519_p1(31-1 downto 0)))));
    r_V_14_fu_529_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_2_fu_477_p1),to_integer(unsigned('0' & zext_ln1488_2_fu_519_p1(31-1 downto 0)))));
    r_V_15_fu_866_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_3_fu_818_p1),to_integer(unsigned('0' & zext_ln1488_3_fu_862_p1(31-1 downto 0)))));
    r_V_16_fu_872_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_3_fu_818_p1),to_integer(unsigned('0' & zext_ln1488_3_fu_862_p1(31-1 downto 0)))));
    r_V_17_fu_1006_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_4_fu_958_p1),to_integer(unsigned('0' & zext_ln1488_4_fu_1002_p1(31-1 downto 0)))));
    r_V_18_fu_1012_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_4_fu_958_p1),to_integer(unsigned('0' & zext_ln1488_4_fu_1002_p1(31-1 downto 0)))));
    r_V_fu_413_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_fu_367_p1),to_integer(unsigned('0' & zext_ln1488_fu_409_p1(31-1 downto 0)))));
    result_V_14_fu_565_p2 <= std_logic_vector(unsigned(ap_const_lv31_0) - unsigned(val_2_fu_557_p3));
    result_V_15_fu_908_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(val_3_fu_900_p3));
    result_V_18_fu_1048_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(val_4_fu_1040_p3));
    result_V_20_fu_461_p3 <= 
        result_V_4_fu_455_p2 when (p_Result_s_reg_1148(0) = '1') else 
        val_fu_447_p3;
    result_V_21_fu_710_p3 <= 
        result_V_9_fu_704_p2 when (p_Result_3_reg_1164(0) = '1') else 
        val_1_fu_696_p3;
    result_V_22_fu_571_p3 <= 
        result_V_14_fu_565_p2 when (p_Result_5_reg_1180(0) = '1') else 
        val_2_fu_557_p3;
    result_V_23_fu_1054_p3 <= 
        result_V_18_fu_1048_p2 when (p_Result_9_fu_926_p3(0) = '1') else 
        val_4_fu_1040_p3;
    result_V_4_fu_455_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(val_fu_447_p3));
    result_V_9_fu_704_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(val_1_fu_696_p3));
    result_V_fu_914_p3 <= 
        result_V_15_fu_908_p2 when (p_Result_7_fu_786_p3(0) = '1') else 
        val_3_fu_900_p3;
        sext_ln1488_1_fu_654_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_1_fu_646_p3),32));

        sext_ln1488_2_fu_515_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_2_fu_507_p3),32));

        sext_ln1488_3_fu_858_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_3_fu_850_p3),32));

        sext_ln1488_4_fu_998_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_4_fu_990_p3),32));

        sext_ln1488_fu_405_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_fu_397_p3),32));

        sext_ln1512_1_fu_642_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1512_1_fu_637_p2),9));

        sext_ln1512_2_fu_503_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1512_2_fu_498_p2),9));

        sext_ln1512_3_fu_846_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1512_3_fu_840_p2),9));

        sext_ln1512_4_fu_986_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1512_4_fu_980_p2),9));

        sext_ln1512_fu_393_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1512_fu_388_p2),9));

    sub_ln1512_1_fu_637_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(xs_exp_V_1_reg_1169));
    sub_ln1512_2_fu_498_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(xs_exp_V_2_reg_1185));
    sub_ln1512_3_fu_840_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(xs_exp_V_3_fu_794_p4));
    sub_ln1512_4_fu_980_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(xs_exp_V_4_fu_934_p4));
    sub_ln1512_fu_388_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(xs_exp_V_reg_1153));
    tmp_12_fu_535_p3 <= r_V_13_fu_523_p2(24 downto 24);
    tmp_17_fu_878_p3 <= r_V_15_fu_866_p2(24 downto 24);
    tmp_22_fu_1018_p3 <= r_V_17_fu_1006_p2(24 downto 24);
    tmp_3_fu_686_p4 <= r_V_12_fu_668_p2(55 downto 24);
    tmp_4_fu_437_p4 <= r_V_10_fu_419_p2(55 downto 24);
    tmp_5_fu_547_p4 <= r_V_14_fu_529_p2(54 downto 24);
    tmp_6_fu_890_p4 <= r_V_16_fu_872_p2(55 downto 24);
    tmp_7_fu_1030_p4 <= r_V_18_fu_1012_p2(55 downto 24);
    tmp_8_fu_674_p3 <= r_V_11_fu_662_p2(24 downto 24);
    tmp_fu_425_p3 <= r_V_fu_413_p2(24 downto 24);
    tmp_num1_fu_346_p1 <= data_V_reg_1133;
    tmp_num2_fu_350_p1 <= data_V_1_reg_1138;
    tmp_num3_fu_354_p1 <= tmp_s_reg_1143;
    trunc_ln2_fu_721_p3 <= (empty_reg_1218 & ap_const_lv1_0);
    trunc_ln58_fu_717_p1 <= result_V_21_fu_710_p3(14 - 1 downto 0);
    trunc_ln74_fu_603_p1 <= result_V_22_fu_571_p3(12 - 1 downto 0);
    trunc_ln75_fu_742_p1 <= i_1_fu_120(12 - 1 downto 0);
    ush_1_fu_646_p3 <= 
        sext_ln1512_1_fu_642_p1 when (isNeg_1_fu_629_p3(0) = '1') else 
        add_ln346_1_fu_623_p2;
    ush_2_fu_507_p3 <= 
        sext_ln1512_2_fu_503_p1 when (isNeg_2_fu_490_p3(0) = '1') else 
        add_ln346_2_fu_484_p2;
    ush_3_fu_850_p3 <= 
        sext_ln1512_3_fu_846_p1 when (isNeg_3_fu_832_p3(0) = '1') else 
        add_ln346_3_fu_826_p2;
    ush_4_fu_990_p3 <= 
        sext_ln1512_4_fu_986_p1 when (isNeg_4_fu_972_p3(0) = '1') else 
        add_ln346_4_fu_966_p2;
    ush_fu_397_p3 <= 
        sext_ln1512_fu_393_p1 when (isNeg_fu_380_p3(0) = '1') else 
        add_ln346_fu_374_p2;
    val_1_fu_696_p3 <= 
        zext_ln818_1_fu_682_p1 when (isNeg_1_fu_629_p3(0) = '1') else 
        tmp_3_fu_686_p4;
    val_2_fu_557_p3 <= 
        zext_ln818_2_fu_543_p1 when (isNeg_2_fu_490_p3(0) = '1') else 
        tmp_5_fu_547_p4;
    val_3_fu_900_p3 <= 
        zext_ln818_3_fu_886_p1 when (isNeg_3_fu_832_p3(0) = '1') else 
        tmp_6_fu_890_p4;
    val_4_fu_1040_p3 <= 
        zext_ln818_4_fu_1026_p1 when (isNeg_4_fu_972_p3(0) = '1') else 
        tmp_7_fu_1030_p4;
    val_fu_447_p3 <= 
        zext_ln818_fu_433_p1 when (isNeg_fu_380_p3(0) = '1') else 
        tmp_4_fu_437_p4;
    xs_exp_V_3_fu_794_p4 <= data_V_2_fu_783_p1(30 downto 23);
    xs_exp_V_4_fu_934_p4 <= data_V_3_fu_923_p1(30 downto 23);
    zext_ln1488_1_fu_658_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1488_1_fu_654_p1),79));
    zext_ln1488_2_fu_519_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1488_2_fu_515_p1),79));
    zext_ln1488_3_fu_862_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1488_3_fu_858_p1),79));
    zext_ln1488_4_fu_1002_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1488_4_fu_998_p1),79));
    zext_ln1488_fu_409_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1488_fu_405_p1),79));
    zext_ln15_1_fu_616_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_1_fu_607_p4),79));
    zext_ln15_2_fu_477_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_2_fu_468_p4),79));
    zext_ln15_3_fu_818_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_3_fu_808_p4),79));
    zext_ln15_4_fu_958_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_4_fu_948_p4),79));
    zext_ln15_fu_367_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_fu_358_p4),79));
    zext_ln346_1_fu_620_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_V_1_reg_1169),9));
    zext_ln346_2_fu_481_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_V_2_reg_1185),9));
    zext_ln346_3_fu_822_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_V_3_fu_794_p4),9));
    zext_ln346_4_fu_962_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_V_4_fu_934_p4),9));
    zext_ln346_fu_371_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_V_reg_1153),9));
    zext_ln76_fu_763_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln76_fu_759_p2),64));
    zext_ln818_1_fu_682_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_674_p3),32));
    zext_ln818_2_fu_543_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_535_p3),31));
    zext_ln818_3_fu_886_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_17_fu_878_p3),32));
    zext_ln818_4_fu_1026_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_22_fu_1018_p3),32));
    zext_ln818_fu_433_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_425_p3),32));
end behav;
