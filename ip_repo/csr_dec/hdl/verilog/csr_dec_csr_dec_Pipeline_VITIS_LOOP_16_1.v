// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module csr_dec_csr_dec_Pipeline_VITIS_LOOP_16_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_r_TVALID,
        tmp_num1_8,
        tmp_num2_7,
        tmp_num3,
        add_ln16,
        in_r_TDATA,
        in_r_TREADY,
        data_address0,
        data_ce0,
        data_we0,
        data_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   in_r_TVALID;
input  [31:0] tmp_num1_8;
input  [31:0] tmp_num2_7;
input  [31:0] tmp_num3;
input  [31:0] add_ln16;
input  [127:0] in_r_TDATA;
output   in_r_TREADY;
output  [11:0] data_address0;
output   data_ce0;
output   data_we0;
output  [31:0] data_d0;

reg ap_idle;
reg in_r_TREADY;
reg[11:0] data_address0;
reg data_ce0;
reg data_we0;
reg[31:0] data_d0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln16_fu_187_p2;
wire   [1:0] p_V_load_2_load_fu_198_p1;
reg    ap_predicate_op38_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    in_r_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
wire   [63:0] i_cast7_fu_201_p1;
wire   [11:0] data_addr_2_gep_fu_131_p3;
wire   [11:0] data_addr_1_gep_fu_139_p3;
wire   [11:0] data_addr_gep_fu_147_p3;
reg   [1:0] p_V_fu_68;
wire   [1:0] p_V_2_fu_290_p2;
wire    ap_loop_init;
reg   [12:0] i_fu_72;
wire   [12:0] add_ln16_1_fu_192_p2;
reg   [31:0] tmp_num3_1_fu_76;
wire   [31:0] tmp_num3_2_fu_264_p1;
reg   [31:0] tmp_num2_fu_80;
wire   [31:0] tmp_num2_2_fu_250_p1;
reg   [31:0] tmp_num1_fu_84;
wire   [31:0] tmp_num1_2_fu_236_p1;
wire   [31:0] tmp_num0_fu_221_p1;
wire   [31:0] i_cast_fu_183_p1;
wire   [31:0] trunc_ln19_fu_217_p1;
wire   [31:0] tmp_s_fu_226_p4;
wire   [31:0] tmp_1_fu_240_p4;
wire   [31:0] tmp_2_fu_254_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_113;
reg    ap_condition_238;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

csr_dec_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_72 <= 13'd0;
        end else if (((icmp_ln16_fu_187_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_fu_72 <= add_ln16_1_fu_192_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_V_fu_68 <= 2'd3;
        end else if (((icmp_ln16_fu_187_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            p_V_fu_68 <= p_V_2_fu_290_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            tmp_num1_fu_84 <= tmp_num1_8;
        end else if ((1'b1 == ap_condition_238)) begin
            tmp_num1_fu_84 <= tmp_num1_2_fu_236_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            tmp_num2_fu_80 <= tmp_num2_7;
        end else if ((1'b1 == ap_condition_238)) begin
            tmp_num2_fu_80 <= tmp_num2_2_fu_250_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            tmp_num3_1_fu_76 <= tmp_num3;
        end else if ((1'b1 == ap_condition_238)) begin
            tmp_num3_1_fu_76 <= tmp_num3_2_fu_264_p1;
        end
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln16_fu_187_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_113)) begin
        if ((p_V_load_2_load_fu_198_p1 == 2'd3)) begin
            data_address0 = data_addr_gep_fu_147_p3;
        end else if ((p_V_fu_68 == 2'd0)) begin
            data_address0 = data_addr_1_gep_fu_139_p3;
        end else if ((p_V_load_2_load_fu_198_p1 == 2'd1)) begin
            data_address0 = data_addr_2_gep_fu_131_p3;
        end else if ((p_V_load_2_load_fu_198_p1 == 2'd2)) begin
            data_address0 = i_cast7_fu_201_p1;
        end else begin
            data_address0 = 'bx;
        end
    end else begin
        data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (p_V_load_2_load_fu_198_p1 == 2'd1) & (icmp_ln16_fu_187_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (p_V_load_2_load_fu_198_p1 == 2'd2) & (icmp_ln16_fu_187_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (p_V_fu_68 == 2'd0) & (icmp_ln16_fu_187_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (p_V_load_2_load_fu_198_p1 == 2'd3) & (icmp_ln16_fu_187_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        data_ce0 = 1'b1;
    end else begin
        data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_113)) begin
        if ((p_V_load_2_load_fu_198_p1 == 2'd3)) begin
            data_d0 = tmp_num3_1_fu_76;
        end else if ((p_V_fu_68 == 2'd0)) begin
            data_d0 = tmp_num0_fu_221_p1;
        end else if ((p_V_load_2_load_fu_198_p1 == 2'd1)) begin
            data_d0 = tmp_num1_fu_84;
        end else if ((p_V_load_2_load_fu_198_p1 == 2'd2)) begin
            data_d0 = tmp_num2_fu_80;
        end else begin
            data_d0 = 'bx;
        end
    end else begin
        data_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (p_V_load_2_load_fu_198_p1 == 2'd1) & (icmp_ln16_fu_187_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (p_V_load_2_load_fu_198_p1 == 2'd2) & (icmp_ln16_fu_187_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (p_V_fu_68 == 2'd0) & (icmp_ln16_fu_187_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (p_V_load_2_load_fu_198_p1 == 2'd3) & (icmp_ln16_fu_187_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        data_we0 = 1'b1;
    end else begin
        data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op38_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_r_TDATA_blk_n = in_r_TVALID;
    end else begin
        in_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op38_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_r_TREADY = 1'b1;
    end else begin
        in_r_TREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln16_1_fu_192_p2 = (i_fu_72 + 13'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_predicate_op38_read_state2 == 1'b1) & (in_r_TVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_predicate_op38_read_state2 == 1'b1) & (in_r_TVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((ap_predicate_op38_read_state2 == 1'b1) & (in_r_TVALID == 1'b0));
end

always @ (*) begin
    ap_condition_113 = ((1'b0 == ap_block_pp0_stage0) & (icmp_ln16_fu_187_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_238 = ((p_V_fu_68 == 2'd0) & (icmp_ln16_fu_187_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

always @ (*) begin
    ap_predicate_op38_read_state2 = ((p_V_fu_68 == 2'd0) & (icmp_ln16_fu_187_p2 == 1'd0));
end

assign data_addr_1_gep_fu_139_p3 = i_cast7_fu_201_p1;

assign data_addr_2_gep_fu_131_p3 = i_cast7_fu_201_p1;

assign data_addr_gep_fu_147_p3 = i_cast7_fu_201_p1;

assign i_cast7_fu_201_p1 = i_fu_72;

assign i_cast_fu_183_p1 = i_fu_72;

assign icmp_ln16_fu_187_p2 = ((i_cast_fu_183_p1 == add_ln16) ? 1'b1 : 1'b0);

assign p_V_2_fu_290_p2 = (p_V_fu_68 + 2'd1);

assign p_V_load_2_load_fu_198_p1 = p_V_fu_68;

assign tmp_1_fu_240_p4 = {{in_r_TDATA[95:64]}};

assign tmp_2_fu_254_p4 = {{in_r_TDATA[127:96]}};

assign tmp_num0_fu_221_p1 = trunc_ln19_fu_217_p1;

assign tmp_num1_2_fu_236_p1 = tmp_s_fu_226_p4;

assign tmp_num2_2_fu_250_p1 = tmp_1_fu_240_p4;

assign tmp_num3_2_fu_264_p1 = tmp_2_fu_254_p4;

assign tmp_s_fu_226_p4 = {{in_r_TDATA[63:32]}};

assign trunc_ln19_fu_217_p1 = in_r_TDATA[31:0];

endmodule //csr_dec_csr_dec_Pipeline_VITIS_LOOP_16_1
