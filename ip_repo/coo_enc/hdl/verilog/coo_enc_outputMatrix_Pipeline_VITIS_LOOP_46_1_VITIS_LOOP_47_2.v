// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module coo_enc_outputMatrix_Pipeline_VITIS_LOOP_46_1_VITIS_LOOP_47_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        tmp_num0,
        tmp_num1,
        tmp_num2,
        bound,
        M,
        trunc_ln,
        matrix_address0,
        matrix_ce0,
        matrix_q0,
        out_r_TDATA,
        out_r_TVALID,
        out_r_TREADY,
        tmp_num0_1_out,
        tmp_num0_1_out_ap_vld,
        tmp_num1_1_out,
        tmp_num1_1_out_ap_vld,
        tmp_num2_1_out,
        tmp_num2_1_out_ap_vld,
        tmp_num3_out,
        tmp_num3_out_ap_vld,
        grp_fu_101_p_din0,
        grp_fu_101_p_dout0,
        grp_fu_101_p_ce,
        grp_fu_93_p_din0,
        grp_fu_93_p_dout0,
        grp_fu_93_p_ce,
        grp_fu_229_p_din0,
        grp_fu_229_p_dout0,
        grp_fu_229_p_ce,
        grp_fu_232_p_din0,
        grp_fu_232_p_din1,
        grp_fu_232_p_opcode,
        grp_fu_232_p_dout0,
        grp_fu_232_p_ce
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_pp0_stage0 = 7'd2;
parameter    ap_ST_fsm_pp0_stage1 = 7'd4;
parameter    ap_ST_fsm_pp0_stage2 = 7'd8;
parameter    ap_ST_fsm_state12 = 7'd16;
parameter    ap_ST_fsm_state13 = 7'd32;
parameter    ap_ST_fsm_state14 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] tmp_num0;
input  [31:0] tmp_num1;
input  [31:0] tmp_num2;
input  [63:0] bound;
input  [31:0] M;
input  [13:0] trunc_ln;
output  [13:0] matrix_address0;
output   matrix_ce0;
input  [31:0] matrix_q0;
output  [127:0] out_r_TDATA;
output   out_r_TVALID;
input   out_r_TREADY;
output  [31:0] tmp_num0_1_out;
output   tmp_num0_1_out_ap_vld;
output  [31:0] tmp_num1_1_out;
output   tmp_num1_1_out_ap_vld;
output  [31:0] tmp_num2_1_out;
output   tmp_num2_1_out_ap_vld;
output  [31:0] tmp_num3_out;
output   tmp_num3_out_ap_vld;
output  [31:0] grp_fu_101_p_din0;
input  [31:0] grp_fu_101_p_dout0;
output   grp_fu_101_p_ce;
output  [31:0] grp_fu_93_p_din0;
input  [31:0] grp_fu_93_p_dout0;
output   grp_fu_93_p_ce;
output  [31:0] grp_fu_229_p_din0;
input  [63:0] grp_fu_229_p_dout0;
output   grp_fu_229_p_ce;
output  [63:0] grp_fu_232_p_din0;
output  [63:0] grp_fu_232_p_din1;
output  [4:0] grp_fu_232_p_opcode;
input  [0:0] grp_fu_232_p_dout0;
output   grp_fu_232_p_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg matrix_ce0;
reg[127:0] out_r_TDATA;
reg out_r_TVALID;
reg tmp_num0_1_out_ap_vld;
reg tmp_num1_1_out_ap_vld;
reg tmp_num2_1_out_ap_vld;
reg tmp_num3_out_ap_vld;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    out_r_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage2;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage2;
reg   [0:0] icmp_ln46_reg_805;
reg   [0:0] icmp_ln46_reg_805_pp0_iter2_reg;
reg   [0:0] and_ln49_reg_880;
reg   [1:0] p_V_load11_reg_888;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg   [1:0] p_V_load_1_reg_884;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter3;
wire    ap_block_pp0_stage0;
reg   [1:0] p_V_1_reg_924;
reg   [31:0] tmp_num3_1_reg_206;
reg   [31:0] tmp_num2_2_reg_220;
reg   [31:0] tmp_num1_2_reg_234;
reg   [31:0] tmp_num0_2_reg_248;
wire   [0:0] icmp_ln46_fu_450_p2;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state8_pp0_stage0_iter2;
reg    ap_predicate_op150_write_state11;
reg    ap_block_state11_pp0_stage0_iter3;
reg    ap_block_state11_io;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln46_reg_805_pp0_iter1_reg;
reg   [31:0] j_load_reg_809;
wire   [0:0] icmp_ln47_fu_467_p2;
reg   [0:0] icmp_ln47_reg_814;
wire   [31:0] select_ln46_1_fu_478_p3;
wire   [31:0] select_ln46_fu_501_p3;
reg   [31:0] select_ln46_reg_829;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state7_pp0_stage2_iter1;
reg    ap_predicate_op124_write_state10;
reg    ap_block_state10_pp0_stage2_iter2;
reg    ap_block_state10_io;
reg    ap_block_pp0_stage2_11001;
reg   [31:0] select_ln46_reg_829_pp0_iter1_reg;
reg   [31:0] tmp_num0_10_mid2_reg_839;
reg   [31:0] tmp_num0_10_mid2_reg_839_pp0_iter2_reg;
reg   [31:0] tmp_num2_8_reg_852;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
reg    ap_predicate_op106_write_state9;
reg    ap_block_state9_pp0_stage1_iter2;
reg    ap_block_state9_io;
reg    ap_block_pp0_stage1_11001;
reg   [31:0] tmp_num2_8_reg_852_pp0_iter2_reg;
wire   [31:0] bitcast_ln356_fu_542_p1;
wire   [0:0] icmp_ln49_fu_565_p2;
reg   [0:0] icmp_ln49_reg_870;
wire   [0:0] icmp_ln49_1_fu_571_p2;
reg   [0:0] icmp_ln49_1_reg_875;
wire   [0:0] and_ln49_fu_581_p2;
reg   [31:0] tmp_num3_5_reg_892;
reg   [31:0] tmp_num2_5_reg_900;
reg   [31:0] tmp_num1_5_reg_908;
reg   [31:0] tmp_num0_5_reg_916;
wire   [1:0] p_V_1_fu_660_p2;
reg    ap_enable_reg_pp0_iter0;
reg    ap_block_pp0_stage2_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage1_subdone;
reg    ap_condition_pp0_exit_iter2_state9;
wire   [31:0] ap_phi_reg_pp0_iter0_tmp_num3_1_reg_206;
reg   [31:0] ap_phi_reg_pp0_iter1_tmp_num3_1_reg_206;
reg   [31:0] ap_phi_reg_pp0_iter2_tmp_num3_1_reg_206;
wire   [31:0] ap_phi_reg_pp0_iter0_tmp_num2_2_reg_220;
reg   [31:0] ap_phi_reg_pp0_iter1_tmp_num2_2_reg_220;
reg   [31:0] ap_phi_reg_pp0_iter2_tmp_num2_2_reg_220;
wire   [31:0] ap_phi_reg_pp0_iter0_tmp_num1_2_reg_234;
reg   [31:0] ap_phi_reg_pp0_iter1_tmp_num1_2_reg_234;
reg   [31:0] ap_phi_reg_pp0_iter2_tmp_num1_2_reg_234;
wire   [31:0] ap_phi_reg_pp0_iter0_tmp_num0_2_reg_248;
reg   [31:0] ap_phi_reg_pp0_iter1_tmp_num0_2_reg_248;
reg   [31:0] ap_phi_reg_pp0_iter2_tmp_num0_2_reg_248;
reg   [31:0] ap_phi_mux_tmp_num3_3_phi_fu_265_p8;
wire   [31:0] ap_phi_reg_pp0_iter3_tmp_num3_3_reg_262;
reg   [31:0] ap_phi_mux_tmp_num2_3_phi_fu_281_p8;
wire   [31:0] ap_phi_reg_pp0_iter3_tmp_num2_3_reg_278;
reg   [31:0] ap_phi_mux_tmp_num1_3_phi_fu_297_p8;
wire   [31:0] ap_phi_reg_pp0_iter3_tmp_num1_3_reg_294;
reg   [31:0] ap_phi_mux_tmp_num0_3_phi_fu_313_p8;
wire   [31:0] ap_phi_reg_pp0_iter3_tmp_num0_3_reg_310;
reg   [31:0] ap_phi_mux_tmp_num3_4_phi_fu_329_p8;
wire   [31:0] ap_phi_reg_pp0_iter3_tmp_num3_4_reg_326;
reg   [31:0] ap_phi_mux_tmp_num2_4_phi_fu_345_p8;
wire   [31:0] ap_phi_reg_pp0_iter3_tmp_num2_4_reg_342;
reg   [31:0] ap_phi_mux_tmp_num1_4_phi_fu_361_p8;
wire   [31:0] ap_phi_reg_pp0_iter3_tmp_num1_4_reg_358;
reg   [31:0] ap_phi_mux_tmp_num0_4_phi_fu_377_p8;
wire   [31:0] ap_phi_reg_pp0_iter3_tmp_num0_4_reg_374;
wire   [63:0] zext_ln48_fu_522_p1;
reg   [31:0] j_fu_90;
wire   [31:0] add_ln47_fu_511_p2;
reg   [31:0] i_fu_94;
reg   [63:0] indvar_flatten_fu_98;
wire   [63:0] add_ln46_fu_455_p2;
reg   [31:0] tmp_num3_fu_102;
reg   [31:0] tmp_num2_1_fu_106;
reg   [31:0] tmp_num1_1_fu_110;
reg   [31:0] tmp_num0_1_fu_114;
reg   [1:0] p_V_fu_118;
wire   [1:0] p_V_2_fu_666_p2;
wire   [127:0] p_s_fu_618_p5;
reg    ap_block_pp0_stage1_01001;
wire   [127:0] p_1_fu_647_p5;
reg    ap_block_pp0_stage2_01001;
wire   [127:0] p_0_fu_693_p5;
reg    ap_block_pp0_stage0_01001;
wire    ap_CS_fsm_state12;
wire   [31:0] add_ln46_1_fu_472_p2;
wire  signed [13:0] zext_ln48_fu_522_p0;
wire   [13:0] grp_fu_726_p3;
wire   [31:0] data_V_fu_526_p1;
wire   [30:0] trunc_ln368_fu_530_p1;
wire   [31:0] p_Result_s_fu_534_p3;
wire   [63:0] bitcast_ln49_fu_547_p1;
wire   [10:0] tmp_4_fu_551_p4;
wire   [51:0] trunc_ln49_fu_561_p1;
wire   [0:0] or_ln49_fu_577_p2;
wire   [31:0] bitcast_ln174_3_fu_614_p1;
wire   [31:0] bitcast_ln174_2_fu_610_p1;
wire   [31:0] bitcast_ln174_1_fu_606_p1;
wire   [31:0] bitcast_ln174_fu_602_p1;
wire   [31:0] bitcast_ln174_7_fu_643_p1;
wire   [31:0] bitcast_ln174_6_fu_639_p1;
wire   [31:0] bitcast_ln174_5_fu_635_p1;
wire   [31:0] bitcast_ln174_4_fu_631_p1;
wire   [31:0] bitcast_ln174_11_fu_689_p1;
wire   [31:0] bitcast_ln174_10_fu_685_p1;
wire   [31:0] bitcast_ln174_9_fu_681_p1;
wire   [31:0] bitcast_ln174_8_fu_677_p1;
wire  signed [13:0] grp_fu_726_p0;
wire   [13:0] grp_fu_726_p2;
reg    grp_fu_390_ce;
reg    grp_fu_393_ce;
reg    grp_fu_400_ce;
reg    grp_fu_403_ce;
reg    ap_block_pp0_stage2_00001;
reg    grp_fu_726_ce;
wire    ap_CS_fsm_state14;
reg   [6:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

coo_enc_mac_muladd_14s_14s_14ns_14_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 14 ))
mac_muladd_14s_14s_14ns_14_4_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_726_p0),
    .din1(trunc_ln),
    .din2(grp_fu_726_p2),
    .ce(grp_fu_726_ce),
    .dout(grp_fu_726_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_condition_pp0_exit_iter2_state9)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter2_state9) & (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
        end else if ((((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((p_V_load_1_reg_884 == 2'd0) & (1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter2_tmp_num0_2_reg_248 <= tmp_num0_10_mid2_reg_839_pp0_iter2_reg;
    end else if ((((p_V_load_1_reg_884 == 2'd2) & (1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((p_V_load_1_reg_884 == 2'd1) & (1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((p_V_load_1_reg_884 == 2'd3) & (1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        ap_phi_reg_pp0_iter2_tmp_num0_2_reg_248 <= tmp_num0_1_fu_114;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_phi_reg_pp0_iter2_tmp_num0_2_reg_248 <= ap_phi_reg_pp0_iter1_tmp_num0_2_reg_248;
    end
end

always @ (posedge ap_clk) begin
    if (((p_V_load_1_reg_884 == 2'd1) & (1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter2_tmp_num1_2_reg_234 <= tmp_num0_10_mid2_reg_839_pp0_iter2_reg;
    end else if ((((p_V_load_1_reg_884 == 2'd0) & (1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((p_V_load_1_reg_884 == 2'd2) & (1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((p_V_load_1_reg_884 == 2'd3) & (1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        ap_phi_reg_pp0_iter2_tmp_num1_2_reg_234 <= tmp_num1_1_fu_110;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_phi_reg_pp0_iter2_tmp_num1_2_reg_234 <= ap_phi_reg_pp0_iter1_tmp_num1_2_reg_234;
    end
end

always @ (posedge ap_clk) begin
    if (((p_V_load_1_reg_884 == 2'd2) & (1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter2_tmp_num2_2_reg_220 <= tmp_num0_10_mid2_reg_839_pp0_iter2_reg;
    end else if ((((p_V_load_1_reg_884 == 2'd0) & (1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((p_V_load_1_reg_884 == 2'd1) & (1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((p_V_load_1_reg_884 == 2'd3) & (1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        ap_phi_reg_pp0_iter2_tmp_num2_2_reg_220 <= tmp_num2_1_fu_106;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_phi_reg_pp0_iter2_tmp_num2_2_reg_220 <= ap_phi_reg_pp0_iter1_tmp_num2_2_reg_220;
    end
end

always @ (posedge ap_clk) begin
    if ((((p_V_load_1_reg_884 == 2'd0) & (1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((p_V_load_1_reg_884 == 2'd2) & (1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((p_V_load_1_reg_884 == 2'd1) & (1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        ap_phi_reg_pp0_iter2_tmp_num3_1_reg_206 <= tmp_num3_fu_102;
    end else if (((p_V_load_1_reg_884 == 2'd3) & (1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter2_tmp_num3_1_reg_206 <= tmp_num0_10_mid2_reg_839_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_phi_reg_pp0_iter2_tmp_num3_1_reg_206 <= ap_phi_reg_pp0_iter1_tmp_num3_1_reg_206;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_fu_94 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln46_fu_450_p2 == 1'd0))) begin
        i_fu_94 <= select_ln46_1_fu_478_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_fu_98 <= 64'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln46_fu_450_p2 == 1'd0))) begin
        indvar_flatten_fu_98 <= add_ln46_fu_455_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        j_fu_90 <= 32'd0;
    end else if (((icmp_ln46_reg_805 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        j_fu_90 <= add_ln47_fu_511_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_V_fu_118 <= 2'd3;
    end else if (((1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_V_fu_118 <= p_V_2_fu_666_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_num0_1_fu_114 <= tmp_num0;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln49_reg_880) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_num0_1_fu_114 <= ap_phi_mux_tmp_num0_4_phi_fu_377_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_num1_1_fu_110 <= tmp_num1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln49_reg_880) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_num1_1_fu_110 <= ap_phi_mux_tmp_num1_4_phi_fu_361_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_num2_1_fu_106 <= tmp_num2;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln49_reg_880) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_num2_1_fu_106 <= ap_phi_mux_tmp_num2_4_phi_fu_345_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln46_reg_805_pp0_iter1_reg == 1'd0))) begin
        and_ln49_reg_880 <= and_ln49_fu_581_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_phi_reg_pp0_iter1_tmp_num0_2_reg_248 <= ap_phi_reg_pp0_iter0_tmp_num0_2_reg_248;
        ap_phi_reg_pp0_iter1_tmp_num1_2_reg_234 <= ap_phi_reg_pp0_iter0_tmp_num1_2_reg_234;
        ap_phi_reg_pp0_iter1_tmp_num2_2_reg_220 <= ap_phi_reg_pp0_iter0_tmp_num2_2_reg_220;
        ap_phi_reg_pp0_iter1_tmp_num3_1_reg_206 <= ap_phi_reg_pp0_iter0_tmp_num3_1_reg_206;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln46_reg_805 <= icmp_ln46_fu_450_p2;
        icmp_ln46_reg_805_pp0_iter1_reg <= icmp_ln46_reg_805;
        icmp_ln46_reg_805_pp0_iter2_reg <= icmp_ln46_reg_805_pp0_iter1_reg;
        tmp_num0_10_mid2_reg_839_pp0_iter2_reg <= tmp_num0_10_mid2_reg_839;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln46_fu_450_p2 == 1'd0))) begin
        icmp_ln47_reg_814 <= icmp_ln47_fu_467_p2;
        j_load_reg_809 <= j_fu_90;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln46_reg_805_pp0_iter1_reg == 1'd0))) begin
        icmp_ln49_1_reg_875 <= icmp_ln49_1_fu_571_p2;
        icmp_ln49_reg_870 <= icmp_ln49_fu_565_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_V_1_reg_924 <= p_V_1_fu_660_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln49_fu_581_p2) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln46_reg_805_pp0_iter1_reg == 1'd0))) begin
        p_V_load11_reg_888 <= p_V_fu_118;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln49_fu_581_p2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln46_reg_805_pp0_iter1_reg == 1'd0))) begin
        p_V_load_1_reg_884 <= p_V_fu_118;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln46_reg_805 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        select_ln46_reg_829 <= select_ln46_fu_501_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        select_ln46_reg_829_pp0_iter1_reg <= select_ln46_reg_829;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln46_reg_805 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_num0_10_mid2_reg_839 <= grp_fu_101_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_num0_2_reg_248 <= ap_phi_reg_pp0_iter2_tmp_num0_2_reg_248;
        tmp_num1_2_reg_234 <= ap_phi_reg_pp0_iter2_tmp_num1_2_reg_234;
        tmp_num2_2_reg_220 <= ap_phi_reg_pp0_iter2_tmp_num2_2_reg_220;
        tmp_num3_1_reg_206 <= ap_phi_reg_pp0_iter2_tmp_num3_1_reg_206;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_num0_5_reg_916 <= tmp_num0_1_fu_114;
        tmp_num1_5_reg_908 <= tmp_num1_1_fu_110;
        tmp_num2_5_reg_900 <= tmp_num2_1_fu_106;
        tmp_num3_5_reg_892 <= tmp_num3_fu_102;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln46_reg_805_pp0_iter1_reg == 1'd0))) begin
        tmp_num2_8_reg_852 <= matrix_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_num2_8_reg_852_pp0_iter2_reg <= tmp_num2_8_reg_852;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln49_reg_880) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_num3_fu_102 <= ap_phi_mux_tmp_num3_4_phi_fu_329_p8;
    end
end

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_condition_pp0_exit_iter2_state9 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter2_state9 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln46_reg_805 == 1'd1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((p_V_load11_reg_888 == 2'd3) & (1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0))) begin
        ap_phi_mux_tmp_num0_3_phi_fu_313_p8 = grp_fu_93_p_dout0;
    end else if ((((p_V_load11_reg_888 == 2'd0) & (1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0)) | ((p_V_load11_reg_888 == 2'd1) & (1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0)) | ((p_V_load11_reg_888 == 2'd2) & (1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0)))) begin
        ap_phi_mux_tmp_num0_3_phi_fu_313_p8 = tmp_num0_2_reg_248;
    end else begin
        ap_phi_mux_tmp_num0_3_phi_fu_313_p8 = ap_phi_reg_pp0_iter3_tmp_num0_3_reg_310;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (p_V_1_reg_924 == 2'd0))) begin
        ap_phi_mux_tmp_num0_4_phi_fu_377_p8 = tmp_num2_8_reg_852_pp0_iter2_reg;
    end else if ((((1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (p_V_1_reg_924 == 2'd2)) | ((1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (p_V_1_reg_924 == 2'd1)) | ((1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (p_V_1_reg_924 == 2'd3)))) begin
        ap_phi_mux_tmp_num0_4_phi_fu_377_p8 = ap_phi_mux_tmp_num0_3_phi_fu_313_p8;
    end else begin
        ap_phi_mux_tmp_num0_4_phi_fu_377_p8 = ap_phi_reg_pp0_iter3_tmp_num0_4_reg_374;
    end
end

always @ (*) begin
    if (((p_V_load11_reg_888 == 2'd0) & (1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0))) begin
        ap_phi_mux_tmp_num1_3_phi_fu_297_p8 = grp_fu_93_p_dout0;
    end else if ((((p_V_load11_reg_888 == 2'd3) & (1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0)) | ((p_V_load11_reg_888 == 2'd1) & (1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0)) | ((p_V_load11_reg_888 == 2'd2) & (1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0)))) begin
        ap_phi_mux_tmp_num1_3_phi_fu_297_p8 = tmp_num1_2_reg_234;
    end else begin
        ap_phi_mux_tmp_num1_3_phi_fu_297_p8 = ap_phi_reg_pp0_iter3_tmp_num1_3_reg_294;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (p_V_1_reg_924 == 2'd1))) begin
        ap_phi_mux_tmp_num1_4_phi_fu_361_p8 = tmp_num2_8_reg_852_pp0_iter2_reg;
    end else if ((((1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (p_V_1_reg_924 == 2'd2)) | ((1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (p_V_1_reg_924 == 2'd3)) | ((1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (p_V_1_reg_924 == 2'd0)))) begin
        ap_phi_mux_tmp_num1_4_phi_fu_361_p8 = ap_phi_mux_tmp_num1_3_phi_fu_297_p8;
    end else begin
        ap_phi_mux_tmp_num1_4_phi_fu_361_p8 = ap_phi_reg_pp0_iter3_tmp_num1_4_reg_358;
    end
end

always @ (*) begin
    if (((p_V_load11_reg_888 == 2'd1) & (1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0))) begin
        ap_phi_mux_tmp_num2_3_phi_fu_281_p8 = grp_fu_93_p_dout0;
    end else if ((((p_V_load11_reg_888 == 2'd3) & (1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0)) | ((p_V_load11_reg_888 == 2'd0) & (1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0)) | ((p_V_load11_reg_888 == 2'd2) & (1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0)))) begin
        ap_phi_mux_tmp_num2_3_phi_fu_281_p8 = tmp_num2_2_reg_220;
    end else begin
        ap_phi_mux_tmp_num2_3_phi_fu_281_p8 = ap_phi_reg_pp0_iter3_tmp_num2_3_reg_278;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (p_V_1_reg_924 == 2'd2))) begin
        ap_phi_mux_tmp_num2_4_phi_fu_345_p8 = tmp_num2_8_reg_852_pp0_iter2_reg;
    end else if ((((1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (p_V_1_reg_924 == 2'd1)) | ((1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (p_V_1_reg_924 == 2'd3)) | ((1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (p_V_1_reg_924 == 2'd0)))) begin
        ap_phi_mux_tmp_num2_4_phi_fu_345_p8 = ap_phi_mux_tmp_num2_3_phi_fu_281_p8;
    end else begin
        ap_phi_mux_tmp_num2_4_phi_fu_345_p8 = ap_phi_reg_pp0_iter3_tmp_num2_4_reg_342;
    end
end

always @ (*) begin
    if ((((p_V_load11_reg_888 == 2'd3) & (1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0)) | ((p_V_load11_reg_888 == 2'd0) & (1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0)) | ((p_V_load11_reg_888 == 2'd1) & (1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0)))) begin
        ap_phi_mux_tmp_num3_3_phi_fu_265_p8 = tmp_num3_1_reg_206;
    end else if (((p_V_load11_reg_888 == 2'd2) & (1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0))) begin
        ap_phi_mux_tmp_num3_3_phi_fu_265_p8 = grp_fu_93_p_dout0;
    end else begin
        ap_phi_mux_tmp_num3_3_phi_fu_265_p8 = ap_phi_reg_pp0_iter3_tmp_num3_3_reg_262;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (p_V_1_reg_924 == 2'd2)) | ((1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (p_V_1_reg_924 == 2'd1)) | ((1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (p_V_1_reg_924 == 2'd0)))) begin
        ap_phi_mux_tmp_num3_4_phi_fu_329_p8 = ap_phi_mux_tmp_num3_3_phi_fu_265_p8;
    end else if (((1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (p_V_1_reg_924 == 2'd3))) begin
        ap_phi_mux_tmp_num3_4_phi_fu_329_p8 = tmp_num2_8_reg_852_pp0_iter2_reg;
    end else begin
        ap_phi_mux_tmp_num3_4_phi_fu_329_p8 = ap_phi_reg_pp0_iter3_tmp_num3_4_reg_326;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_390_ce = 1'b1;
    end else begin
        grp_fu_390_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_393_ce = 1'b1;
    end else begin
        grp_fu_393_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_400_ce = 1'b1;
    end else begin
        grp_fu_400_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_403_ce = 1'b1;
    end else begin
        grp_fu_403_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_726_ce = 1'b1;
    end else begin
        grp_fu_726_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        matrix_ce0 = 1'b1;
    end else begin
        matrix_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op150_write_state11 == 1'b1))) begin
        out_r_TDATA = p_0_fu_693_p5;
    end else if (((1'b0 == ap_block_pp0_stage2_01001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_predicate_op124_write_state10 == 1'b1))) begin
        out_r_TDATA = p_1_fu_647_p5;
    end else if (((1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op106_write_state9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_r_TDATA = p_s_fu_618_p5;
    end else begin
        out_r_TDATA = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (p_V_1_reg_924 == 2'd0)) | ((p_V_load_1_reg_884 == 2'd0) & (1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((p_V_load11_reg_888 == 2'd3) & (1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        out_r_TDATA_blk_n = out_r_TREADY;
    end else begin
        out_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op150_write_state11 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op106_write_state9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_predicate_op124_write_state10 == 1'b1)))) begin
        out_r_TVALID = 1'b1;
    end else begin
        out_r_TVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_num0_1_out_ap_vld = 1'b1;
    end else begin
        tmp_num0_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_num1_1_out_ap_vld = 1'b1;
    end else begin
        tmp_num1_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_num2_1_out_ap_vld = 1'b1;
    end else begin
        tmp_num2_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_num3_out_ap_vld = 1'b1;
    end else begin
        tmp_num3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln46_1_fu_472_p2 = (i_fu_94 + 32'd1);

assign add_ln46_fu_455_p2 = (indvar_flatten_fu_98 + 64'd1);

assign add_ln47_fu_511_p2 = (select_ln46_fu_501_p3 + 32'd1);

assign and_ln49_fu_581_p2 = (or_ln49_fu_577_p2 & grp_fu_232_p_dout0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (out_r_TREADY == 1'b0) & (ap_predicate_op150_write_state11 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter3 == 1'b1) & ((1'b1 == ap_block_state11_io) | ((out_r_TREADY == 1'b0) & (ap_predicate_op150_write_state11 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter3 == 1'b1) & ((1'b1 == ap_block_state11_io) | ((out_r_TREADY == 1'b0) & (ap_predicate_op150_write_state11 == 1'b1))));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (out_r_TREADY == 1'b0) & (ap_predicate_op106_write_state9 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state9_io) | ((out_r_TREADY == 1'b0) & (ap_predicate_op106_write_state9 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state9_io) | ((out_r_TREADY == 1'b0) & (ap_predicate_op106_write_state9 == 1'b1))));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_00001 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (out_r_TREADY == 1'b0) & (ap_predicate_op124_write_state10 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_01001 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (out_r_TREADY == 1'b0) & (ap_predicate_op124_write_state10 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state10_io) | ((out_r_TREADY == 1'b0) & (ap_predicate_op124_write_state10 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state10_io) | ((out_r_TREADY == 1'b0) & (ap_predicate_op124_write_state10 == 1'b1))));
end

always @ (*) begin
    ap_block_state10_io = ((out_r_TREADY == 1'b0) & (ap_predicate_op124_write_state10 == 1'b1));
end

always @ (*) begin
    ap_block_state10_pp0_stage2_iter2 = ((out_r_TREADY == 1'b0) & (ap_predicate_op124_write_state10 == 1'b1));
end

always @ (*) begin
    ap_block_state11_io = ((out_r_TREADY == 1'b0) & (ap_predicate_op150_write_state11 == 1'b1));
end

always @ (*) begin
    ap_block_state11_pp0_stage0_iter3 = ((out_r_TREADY == 1'b0) & (ap_predicate_op150_write_state11 == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_io = ((out_r_TREADY == 1'b0) & (ap_predicate_op106_write_state9 == 1'b1));
end

always @ (*) begin
    ap_block_state9_pp0_stage1_iter2 = ((out_r_TREADY == 1'b0) & (ap_predicate_op106_write_state9 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_tmp_num0_2_reg_248 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_num1_2_reg_234 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_num2_2_reg_220 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_num3_1_reg_206 = 'bx;

assign ap_phi_reg_pp0_iter3_tmp_num0_3_reg_310 = 'bx;

assign ap_phi_reg_pp0_iter3_tmp_num0_4_reg_374 = 'bx;

assign ap_phi_reg_pp0_iter3_tmp_num1_3_reg_294 = 'bx;

assign ap_phi_reg_pp0_iter3_tmp_num1_4_reg_358 = 'bx;

assign ap_phi_reg_pp0_iter3_tmp_num2_3_reg_278 = 'bx;

assign ap_phi_reg_pp0_iter3_tmp_num2_4_reg_342 = 'bx;

assign ap_phi_reg_pp0_iter3_tmp_num3_3_reg_262 = 'bx;

assign ap_phi_reg_pp0_iter3_tmp_num3_4_reg_326 = 'bx;

always @ (*) begin
    ap_predicate_op106_write_state9 = ((p_V_load_1_reg_884 == 2'd0) & (1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op124_write_state10 = ((p_V_load11_reg_888 == 2'd3) & (1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op150_write_state11 = ((1'd1 == and_ln49_reg_880) & (icmp_ln46_reg_805_pp0_iter2_reg == 1'd0) & (p_V_1_reg_924 == 2'd0));
end

assign bitcast_ln174_10_fu_685_p1 = ap_phi_mux_tmp_num2_3_phi_fu_281_p8;

assign bitcast_ln174_11_fu_689_p1 = ap_phi_mux_tmp_num3_3_phi_fu_265_p8;

assign bitcast_ln174_1_fu_606_p1 = tmp_num1_1_fu_110;

assign bitcast_ln174_2_fu_610_p1 = tmp_num2_1_fu_106;

assign bitcast_ln174_3_fu_614_p1 = tmp_num3_fu_102;

assign bitcast_ln174_4_fu_631_p1 = ap_phi_reg_pp0_iter2_tmp_num0_2_reg_248;

assign bitcast_ln174_5_fu_635_p1 = ap_phi_reg_pp0_iter2_tmp_num1_2_reg_234;

assign bitcast_ln174_6_fu_639_p1 = ap_phi_reg_pp0_iter2_tmp_num2_2_reg_220;

assign bitcast_ln174_7_fu_643_p1 = ap_phi_reg_pp0_iter2_tmp_num3_1_reg_206;

assign bitcast_ln174_8_fu_677_p1 = ap_phi_mux_tmp_num0_3_phi_fu_313_p8;

assign bitcast_ln174_9_fu_681_p1 = ap_phi_mux_tmp_num1_3_phi_fu_297_p8;

assign bitcast_ln174_fu_602_p1 = tmp_num0_1_fu_114;

assign bitcast_ln356_fu_542_p1 = p_Result_s_fu_534_p3;

assign bitcast_ln49_fu_547_p1 = grp_fu_229_p_dout0;

assign data_V_fu_526_p1 = matrix_q0;

assign grp_fu_101_p_ce = grp_fu_390_ce;

assign grp_fu_101_p_din0 = select_ln46_1_fu_478_p3;

assign grp_fu_229_p_ce = grp_fu_400_ce;

assign grp_fu_229_p_din0 = bitcast_ln356_fu_542_p1;

assign grp_fu_232_p_ce = grp_fu_403_ce;

assign grp_fu_232_p_din0 = grp_fu_229_p_dout0;

assign grp_fu_232_p_din1 = 64'd4517329193108106637;

assign grp_fu_232_p_opcode = 5'd2;

assign grp_fu_726_p0 = select_ln46_1_fu_478_p3[13:0];

assign grp_fu_726_p2 = select_ln46_fu_501_p3[13:0];

assign grp_fu_93_p_ce = grp_fu_393_ce;

assign grp_fu_93_p_din0 = select_ln46_reg_829_pp0_iter1_reg;

assign icmp_ln46_fu_450_p2 = ((indvar_flatten_fu_98 == bound) ? 1'b1 : 1'b0);

assign icmp_ln47_fu_467_p2 = ((j_fu_90 == M) ? 1'b1 : 1'b0);

assign icmp_ln49_1_fu_571_p2 = ((trunc_ln49_fu_561_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln49_fu_565_p2 = ((tmp_4_fu_551_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign matrix_address0 = zext_ln48_fu_522_p1;

assign or_ln49_fu_577_p2 = (icmp_ln49_reg_870 | icmp_ln49_1_reg_875);

assign p_0_fu_693_p5 = {{{{bitcast_ln174_11_fu_689_p1}, {bitcast_ln174_10_fu_685_p1}}, {bitcast_ln174_9_fu_681_p1}}, {bitcast_ln174_8_fu_677_p1}};

assign p_1_fu_647_p5 = {{{{bitcast_ln174_7_fu_643_p1}, {bitcast_ln174_6_fu_639_p1}}, {bitcast_ln174_5_fu_635_p1}}, {bitcast_ln174_4_fu_631_p1}};

assign p_Result_s_fu_534_p3 = {{1'd0}, {trunc_ln368_fu_530_p1}};

assign p_V_1_fu_660_p2 = (p_V_fu_118 ^ 2'd2);

assign p_V_2_fu_666_p2 = (p_V_1_fu_660_p2 + 2'd1);

assign p_s_fu_618_p5 = {{{{bitcast_ln174_3_fu_614_p1}, {bitcast_ln174_2_fu_610_p1}}, {bitcast_ln174_1_fu_606_p1}}, {bitcast_ln174_fu_602_p1}};

assign select_ln46_1_fu_478_p3 = ((icmp_ln47_fu_467_p2[0:0] == 1'b1) ? add_ln46_1_fu_472_p2 : i_fu_94);

assign select_ln46_fu_501_p3 = ((icmp_ln47_reg_814[0:0] == 1'b1) ? 32'd0 : j_load_reg_809);

assign tmp_4_fu_551_p4 = {{bitcast_ln49_fu_547_p1[62:52]}};

assign tmp_num0_1_out = tmp_num0_5_reg_916;

assign tmp_num1_1_out = tmp_num1_5_reg_908;

assign tmp_num2_1_out = tmp_num2_5_reg_900;

assign tmp_num3_out = tmp_num3_5_reg_892;

assign trunc_ln368_fu_530_p1 = data_V_fu_526_p1[30:0];

assign trunc_ln49_fu_561_p1 = bitcast_ln49_fu_547_p1[51:0];

assign zext_ln48_fu_522_p0 = grp_fu_726_p3;

assign zext_ln48_fu_522_p1 = $unsigned(zext_ln48_fu_522_p0);

endmodule //coo_enc_outputMatrix_Pipeline_VITIS_LOOP_46_1_VITIS_LOOP_47_2
