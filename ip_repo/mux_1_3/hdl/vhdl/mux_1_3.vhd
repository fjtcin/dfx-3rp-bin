-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity mux_1_3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    opcode : IN STD_LOGIC_VECTOR (1 downto 0);
    in_r_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    in_r_TVALID : IN STD_LOGIC;
    in_r_TREADY : OUT STD_LOGIC;
    out0_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
    out0_TVALID : OUT STD_LOGIC;
    out0_TREADY : IN STD_LOGIC;
    out1_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
    out1_TVALID : OUT STD_LOGIC;
    out1_TREADY : IN STD_LOGIC;
    out2_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
    out2_TVALID : OUT STD_LOGIC;
    out2_TREADY : IN STD_LOGIC );
end;


architecture behav of mux_1_3 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "mux_1_3_mux_1_3,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xck26-sfvc784-2LV-c,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=0.446000,HLS_SYN_LAT=1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2,HLS_SYN_LUT=60,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal in_r_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal out0_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal out1_TDATA_blk_n : STD_LOGIC;
    signal out2_TDATA_blk_n : STD_LOGIC;
    signal ap_predicate_op21_read_state1 : BOOLEAN;
    signal ap_predicate_op22_write_state1 : BOOLEAN;
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_state1_io : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_predicate_op27_write_state2 : BOOLEAN;
    signal regslice_both_out0_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out1_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out2_U_apdone_blk : STD_LOGIC;
    signal ap_block_state2 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal regslice_both_in_r_U_apdone_blk : STD_LOGIC;
    signal in_r_TDATA_int_regslice : STD_LOGIC_VECTOR (127 downto 0);
    signal in_r_TVALID_int_regslice : STD_LOGIC;
    signal in_r_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_in_r_U_ack_in : STD_LOGIC;
    signal out0_TVALID_int_regslice : STD_LOGIC;
    signal out0_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_out0_U_vld_out : STD_LOGIC;
    signal out1_TVALID_int_regslice : STD_LOGIC;
    signal out1_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_out1_U_vld_out : STD_LOGIC;
    signal out2_TVALID_int_regslice : STD_LOGIC;
    signal out2_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_out2_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component mux_1_3_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    regslice_both_in_r_U : component mux_1_3_regslice_both
    generic map (
        DataWidth => 128)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_r_TDATA,
        vld_in => in_r_TVALID,
        ack_in => regslice_both_in_r_U_ack_in,
        data_out => in_r_TDATA_int_regslice,
        vld_out => in_r_TVALID_int_regslice,
        ack_out => in_r_TREADY_int_regslice,
        apdone_blk => regslice_both_in_r_U_apdone_blk);

    regslice_both_out0_U : component mux_1_3_regslice_both
    generic map (
        DataWidth => 128)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_r_TDATA_int_regslice,
        vld_in => out0_TVALID_int_regslice,
        ack_in => out0_TREADY_int_regslice,
        data_out => out0_TDATA,
        vld_out => regslice_both_out0_U_vld_out,
        ack_out => out0_TREADY,
        apdone_blk => regslice_both_out0_U_apdone_blk);

    regslice_both_out1_U : component mux_1_3_regslice_both
    generic map (
        DataWidth => 128)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_r_TDATA_int_regslice,
        vld_in => out1_TVALID_int_regslice,
        ack_in => out1_TREADY_int_regslice,
        data_out => out1_TDATA,
        vld_out => regslice_both_out1_U_vld_out,
        ack_out => out1_TREADY,
        apdone_blk => regslice_both_out1_U_apdone_blk);

    regslice_both_out2_U : component mux_1_3_regslice_both
    generic map (
        DataWidth => 128)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_r_TDATA_int_regslice,
        vld_in => out2_TVALID_int_regslice,
        ack_in => out2_TREADY_int_regslice,
        data_out => out2_TDATA,
        vld_out => regslice_both_out2_U_vld_out,
        ack_out => out2_TREADY,
        apdone_blk => regslice_both_out2_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (opcode, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_predicate_op21_read_state1, ap_predicate_op22_write_state1, ap_block_state1_io, ap_predicate_op27_write_state2, regslice_both_out0_U_apdone_blk, regslice_both_out1_U_apdone_blk, regslice_both_out2_U_apdone_blk, ap_block_state2_io, in_r_TVALID_int_regslice, out0_TREADY_int_regslice, out1_TREADY_int_regslice, out2_TREADY_int_regslice)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_const_boolean_1 = ap_block_state1_io) or ((ap_predicate_op22_write_state1 = ap_const_boolean_1) and (out0_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op21_read_state1 = ap_const_boolean_1) and (in_r_TVALID_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_2) and (out2_TREADY_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_2) and (in_r_TVALID_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_1) and (out1_TREADY_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_1) and (in_r_TVALID_int_regslice = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((ap_const_boolean_1 = ap_block_state2_io) or (regslice_both_out2_U_apdone_blk = ap_const_logic_1) or (regslice_both_out1_U_apdone_blk = ap_const_logic_1) or (regslice_both_out0_U_apdone_blk = ap_const_logic_1) or ((opcode = ap_const_lv2_2) and (out2_TREADY_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_1) and (out1_TREADY_int_regslice = ap_const_logic_0)) or ((out0_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op27_write_state2 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_ST_fsm_state1_blk_assign_proc : process(opcode, ap_predicate_op21_read_state1, ap_predicate_op22_write_state1, ap_block_state1_io, in_r_TVALID_int_regslice, out0_TREADY_int_regslice, out1_TREADY_int_regslice, out2_TREADY_int_regslice)
    begin
        if (((ap_const_boolean_1 = ap_block_state1_io) or ((ap_predicate_op22_write_state1 = ap_const_boolean_1) and (out0_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op21_read_state1 = ap_const_boolean_1) and (in_r_TVALID_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_2) and (out2_TREADY_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_2) and (in_r_TVALID_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_1) and (out1_TREADY_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_1) and (in_r_TVALID_int_regslice = ap_const_logic_0)))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(opcode, ap_predicate_op27_write_state2, regslice_both_out0_U_apdone_blk, regslice_both_out1_U_apdone_blk, regslice_both_out2_U_apdone_blk, ap_block_state2_io, out0_TREADY_int_regslice, out1_TREADY_int_regslice, out2_TREADY_int_regslice)
    begin
        if (((ap_const_boolean_1 = ap_block_state2_io) or (regslice_both_out2_U_apdone_blk = ap_const_logic_1) or (regslice_both_out1_U_apdone_blk = ap_const_logic_1) or (regslice_both_out0_U_apdone_blk = ap_const_logic_1) or ((opcode = ap_const_lv2_2) and (out2_TREADY_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_1) and (out1_TREADY_int_regslice = ap_const_logic_0)) or ((out0_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op27_write_state2 = ap_const_boolean_1)))) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(opcode, ap_predicate_op21_read_state1, ap_predicate_op22_write_state1, in_r_TVALID_int_regslice, out0_TREADY_int_regslice, out1_TREADY_int_regslice, out2_TREADY_int_regslice)
    begin
                ap_block_state1 <= (((ap_predicate_op22_write_state1 = ap_const_boolean_1) and (out0_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op21_read_state1 = ap_const_boolean_1) and (in_r_TVALID_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_2) and (out2_TREADY_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_2) and (in_r_TVALID_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_1) and (out1_TREADY_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_1) and (in_r_TVALID_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state1_io_assign_proc : process(opcode, ap_predicate_op22_write_state1, out0_TREADY_int_regslice, out1_TREADY_int_regslice, out2_TREADY_int_regslice)
    begin
                ap_block_state1_io <= (((ap_predicate_op22_write_state1 = ap_const_boolean_1) and (out0_TREADY_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_2) and (out2_TREADY_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_1) and (out1_TREADY_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state2_assign_proc : process(opcode, ap_predicate_op27_write_state2, regslice_both_out0_U_apdone_blk, regslice_both_out1_U_apdone_blk, regslice_both_out2_U_apdone_blk, out0_TREADY_int_regslice, out1_TREADY_int_regslice, out2_TREADY_int_regslice)
    begin
                ap_block_state2 <= ((regslice_both_out2_U_apdone_blk = ap_const_logic_1) or (regslice_both_out1_U_apdone_blk = ap_const_logic_1) or (regslice_both_out0_U_apdone_blk = ap_const_logic_1) or ((opcode = ap_const_lv2_2) and (out2_TREADY_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_1) and (out1_TREADY_int_regslice = ap_const_logic_0)) or ((out0_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op27_write_state2 = ap_const_boolean_1)));
    end process;


    ap_block_state2_io_assign_proc : process(opcode, ap_predicate_op27_write_state2, out0_TREADY_int_regslice, out1_TREADY_int_regslice, out2_TREADY_int_regslice)
    begin
                ap_block_state2_io <= (((opcode = ap_const_lv2_2) and (out2_TREADY_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_1) and (out1_TREADY_int_regslice = ap_const_logic_0)) or ((out0_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op27_write_state2 = ap_const_boolean_1)));
    end process;


    ap_predicate_op21_read_state1_assign_proc : process(opcode)
    begin
                ap_predicate_op21_read_state1 <= (not((opcode = ap_const_lv2_2)) and not((opcode = ap_const_lv2_1)));
    end process;


    ap_predicate_op22_write_state1_assign_proc : process(opcode)
    begin
                ap_predicate_op22_write_state1 <= (not((opcode = ap_const_lv2_2)) and not((opcode = ap_const_lv2_1)));
    end process;


    ap_predicate_op27_write_state2_assign_proc : process(opcode)
    begin
                ap_predicate_op27_write_state2 <= (not((opcode = ap_const_lv2_2)) and not((opcode = ap_const_lv2_1)));
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    in_r_TDATA_blk_n_assign_proc : process(opcode, ap_CS_fsm_state1, in_r_TVALID_int_regslice)
    begin
        if (((not((opcode = ap_const_lv2_2)) and not((opcode = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((opcode = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((opcode = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_r_TDATA_blk_n <= in_r_TVALID_int_regslice;
        else 
            in_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_r_TREADY <= regslice_both_in_r_U_ack_in;

    in_r_TREADY_int_regslice_assign_proc : process(opcode, ap_CS_fsm_state1, ap_predicate_op21_read_state1, ap_predicate_op22_write_state1, ap_block_state1_io, in_r_TVALID_int_regslice, out0_TREADY_int_regslice, out1_TREADY_int_regslice, out2_TREADY_int_regslice)
    begin
        if (((not(((ap_const_boolean_1 = ap_block_state1_io) or ((ap_predicate_op22_write_state1 = ap_const_boolean_1) and (out0_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op21_read_state1 = ap_const_boolean_1) and (in_r_TVALID_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_2) and (out2_TREADY_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_2) and (in_r_TVALID_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_1) and (out1_TREADY_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_1) and (in_r_TVALID_int_regslice = ap_const_logic_0)))) and (ap_predicate_op21_read_state1 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or (not(((ap_const_boolean_1 = ap_block_state1_io) or ((ap_predicate_op22_write_state1 = ap_const_boolean_1) and (out0_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op21_read_state1 = ap_const_boolean_1) and (in_r_TVALID_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_2) and (out2_TREADY_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_2) and (in_r_TVALID_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_1) and (out1_TREADY_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_1) and (in_r_TVALID_int_regslice = ap_const_logic_0)))) and (opcode = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or (not(((ap_const_boolean_1 = ap_block_state1_io) or ((ap_predicate_op22_write_state1 = ap_const_boolean_1) and (out0_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op21_read_state1 = ap_const_boolean_1) and (in_r_TVALID_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_2) and (out2_TREADY_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_2) and (in_r_TVALID_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_1) and (out1_TREADY_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_1) and (in_r_TVALID_int_regslice = ap_const_logic_0)))) and (opcode = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_r_TREADY_int_regslice <= ap_const_logic_1;
        else 
            in_r_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    out0_TDATA_blk_n_assign_proc : process(opcode, ap_CS_fsm_state1, ap_CS_fsm_state2, out0_TREADY_int_regslice)
    begin
        if (((not((opcode = ap_const_lv2_2)) and not((opcode = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not((opcode = ap_const_lv2_2)) and not((opcode = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            out0_TDATA_blk_n <= out0_TREADY_int_regslice;
        else 
            out0_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out0_TVALID <= regslice_both_out0_U_vld_out;

    out0_TVALID_int_regslice_assign_proc : process(opcode, ap_CS_fsm_state1, ap_predicate_op21_read_state1, ap_predicate_op22_write_state1, ap_block_state1_io, in_r_TVALID_int_regslice, out0_TREADY_int_regslice, out1_TREADY_int_regslice, out2_TREADY_int_regslice)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state1_io) or ((ap_predicate_op22_write_state1 = ap_const_boolean_1) and (out0_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op21_read_state1 = ap_const_boolean_1) and (in_r_TVALID_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_2) and (out2_TREADY_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_2) and (in_r_TVALID_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_1) and (out1_TREADY_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_1) and (in_r_TVALID_int_regslice = ap_const_logic_0)))) and (ap_predicate_op22_write_state1 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            out0_TVALID_int_regslice <= ap_const_logic_1;
        else 
            out0_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    out1_TDATA_blk_n_assign_proc : process(opcode, ap_CS_fsm_state1, ap_CS_fsm_state2, out1_TREADY_int_regslice)
    begin
        if ((((opcode = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((opcode = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            out1_TDATA_blk_n <= out1_TREADY_int_regslice;
        else 
            out1_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out1_TVALID <= regslice_both_out1_U_vld_out;

    out1_TVALID_int_regslice_assign_proc : process(opcode, ap_CS_fsm_state1, ap_predicate_op21_read_state1, ap_predicate_op22_write_state1, ap_block_state1_io, in_r_TVALID_int_regslice, out0_TREADY_int_regslice, out1_TREADY_int_regslice, out2_TREADY_int_regslice)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state1_io) or ((ap_predicate_op22_write_state1 = ap_const_boolean_1) and (out0_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op21_read_state1 = ap_const_boolean_1) and (in_r_TVALID_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_2) and (out2_TREADY_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_2) and (in_r_TVALID_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_1) and (out1_TREADY_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_1) and (in_r_TVALID_int_regslice = ap_const_logic_0)))) and (opcode = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            out1_TVALID_int_regslice <= ap_const_logic_1;
        else 
            out1_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    out2_TDATA_blk_n_assign_proc : process(opcode, ap_CS_fsm_state1, ap_CS_fsm_state2, out2_TREADY_int_regslice)
    begin
        if ((((opcode = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((opcode = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            out2_TDATA_blk_n <= out2_TREADY_int_regslice;
        else 
            out2_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out2_TVALID <= regslice_both_out2_U_vld_out;

    out2_TVALID_int_regslice_assign_proc : process(opcode, ap_CS_fsm_state1, ap_predicate_op21_read_state1, ap_predicate_op22_write_state1, ap_block_state1_io, in_r_TVALID_int_regslice, out0_TREADY_int_regslice, out1_TREADY_int_regslice, out2_TREADY_int_regslice)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state1_io) or ((ap_predicate_op22_write_state1 = ap_const_boolean_1) and (out0_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op21_read_state1 = ap_const_boolean_1) and (in_r_TVALID_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_2) and (out2_TREADY_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_2) and (in_r_TVALID_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_1) and (out1_TREADY_int_regslice = ap_const_logic_0)) or ((opcode = ap_const_lv2_1) and (in_r_TVALID_int_regslice = ap_const_logic_0)))) and (opcode = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            out2_TVALID_int_regslice <= ap_const_logic_1;
        else 
            out2_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

end behav;
