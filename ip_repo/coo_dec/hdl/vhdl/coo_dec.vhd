-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity coo_dec is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_r_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    in_r_TVALID : IN STD_LOGIC;
    in_r_TREADY : OUT STD_LOGIC;
    out_r_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
    out_r_TVALID : OUT STD_LOGIC;
    out_r_TREADY : IN STD_LOGIC );
end;


architecture behav of coo_dec is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "coo_dec_coo_dec,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xck26-sfvc784-2LV-c,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.662000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=30,HLS_SYN_DSP=0,HLS_SYN_FF=1217,HLS_SYN_LUT=3937,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_5E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011110";
    constant ap_const_lv32_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal in_r_TDATA_blk_n : STD_LOGIC;
    signal out_r_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal data_V_reg_700 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_V_2_reg_705 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_710 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_reg_715 : STD_LOGIC_VECTOR (0 downto 0);
    signal xs_exp_V_reg_720 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_4_fu_221_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_4_reg_726 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_5_reg_731 : STD_LOGIC_VECTOR (0 downto 0);
    signal xs_exp_V_2_reg_736 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_6_reg_742 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_7_reg_747 : STD_LOGIC_VECTOR (0 downto 0);
    signal xs_exp_V_3_reg_752 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_8_reg_758 : STD_LOGIC_VECTOR (22 downto 0);
    signal result_V_fu_384_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_reg_763 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal val_2_fu_480_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_2_reg_769 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_17_fu_591_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_17_reg_775 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_num1_fu_598_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_num1_reg_781 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_num2_fu_602_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_num2_reg_786 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_num3_fu_606_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_num3_reg_791 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_16_fu_615_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln58_fu_622_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln58_reg_801 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_i_fu_632_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_i_reg_806 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_i3_fu_638_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_i3_reg_811 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_165_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_num0_reg_816 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_fu_169_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_num1_1_reg_821 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_0_fu_663_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal a_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal a_ce0 : STD_LOGIC;
    signal a_we0 : STD_LOGIC;
    signal a_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_coo_dec_Pipeline_1_fu_133_ap_start : STD_LOGIC;
    signal grp_coo_dec_Pipeline_1_fu_133_ap_done : STD_LOGIC;
    signal grp_coo_dec_Pipeline_1_fu_133_ap_idle : STD_LOGIC;
    signal grp_coo_dec_Pipeline_1_fu_133_ap_ready : STD_LOGIC;
    signal grp_coo_dec_Pipeline_1_fu_133_a_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_coo_dec_Pipeline_1_fu_133_a_ce0 : STD_LOGIC;
    signal grp_coo_dec_Pipeline_1_fu_133_a_we0 : STD_LOGIC;
    signal grp_coo_dec_Pipeline_1_fu_133_a_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_ap_start : STD_LOGIC;
    signal grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_ap_done : STD_LOGIC;
    signal grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_ap_idle : STD_LOGIC;
    signal grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_ap_ready : STD_LOGIC;
    signal grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_in_r_TREADY : STD_LOGIC;
    signal grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_a_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_a_ce0 : STD_LOGIC;
    signal grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_a_we0 : STD_LOGIC;
    signal grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_a_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_ap_start : STD_LOGIC;
    signal grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_ap_done : STD_LOGIC;
    signal grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_ap_idle : STD_LOGIC;
    signal grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_ap_ready : STD_LOGIC;
    signal grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_out_r_TREADY : STD_LOGIC;
    signal grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_out_r_TDATA : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_out_r_TVALID : STD_LOGIC;
    signal grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_a_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_a_ce0 : STD_LOGIC;
    signal grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_tmp_num0_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_tmp_num0_2_out_ap_vld : STD_LOGIC;
    signal grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_tmp_num1_3_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_tmp_num1_3_out_ap_vld : STD_LOGIC;
    signal grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_p_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_p_out_ap_vld : STD_LOGIC;
    signal grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_p_out1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_p_out1_ap_vld : STD_LOGIC;
    signal grp_coo_dec_Pipeline_1_fu_133_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call10 : BOOLEAN;
    signal grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_block_state1 : BOOLEAN;
    signal mantissa_fu_281_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal zext_ln346_fu_294_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln346_fu_297_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1512_fu_311_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_fu_303_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1512_fu_316_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ush_fu_320_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1488_fu_328_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_fu_290_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln1488_fu_332_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal r_V_fu_336_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_fu_348_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_6_fu_342_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln818_fu_356_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_360_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_fu_370_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_9_fu_378_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mantissa_2_fu_391_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal zext_ln346_1_fu_404_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln346_1_fu_407_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1512_1_fu_421_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_2_fu_413_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1512_1_fu_426_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ush_3_fu_430_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1488_2_fu_438_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_2_fu_400_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln1488_2_fu_442_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal r_V_7_fu_446_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_15_fu_458_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_8_fu_452_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln818_1_fu_466_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_470_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal mantissa_3_fu_488_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal zext_ln346_2_fu_501_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln346_2_fu_504_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1512_2_fu_518_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_3_fu_510_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1512_2_fu_523_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ush_4_fu_527_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1488_3_fu_535_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_3_fu_497_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln1488_3_fu_539_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal r_V_9_fu_543_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_19_fu_555_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_10_fu_549_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln818_2_fu_563_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_567_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_3_fu_577_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_15_fu_585_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_12_fu_610_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_fu_627_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln174_1_fu_659_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln174_fu_655_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_165_ce : STD_LOGIC;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_fu_169_ce : STD_LOGIC;
    signal regslice_both_out_r_U_apdone_blk : STD_LOGIC;
    signal ap_block_state9 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal regslice_both_in_r_U_apdone_blk : STD_LOGIC;
    signal in_r_TDATA_int_regslice : STD_LOGIC_VECTOR (127 downto 0);
    signal in_r_TVALID_int_regslice : STD_LOGIC;
    signal in_r_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_in_r_U_ack_in : STD_LOGIC;
    signal out_r_TDATA_int_regslice : STD_LOGIC_VECTOR (127 downto 0);
    signal out_r_TVALID_int_regslice : STD_LOGIC;
    signal out_r_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_out_r_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component coo_dec_coo_dec_Pipeline_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_we0 : OUT STD_LOGIC;
        a_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component coo_dec_coo_dec_Pipeline_VITIS_LOOP_16_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_r_TVALID : IN STD_LOGIC;
        tmp_num1_8 : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp_num2_7 : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp_num3 : IN STD_LOGIC_VECTOR (31 downto 0);
        mul_i : IN STD_LOGIC_VECTOR (31 downto 0);
        in_r_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
        in_r_TREADY : OUT STD_LOGIC;
        trunc_ln : IN STD_LOGIC_VECTOR (13 downto 0);
        a_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_we0 : OUT STD_LOGIC;
        a_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component coo_dec_coo_dec_Pipeline_VITIS_LOOP_58_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_r_TREADY : IN STD_LOGIC;
        tmp_num0 : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp_num1_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        mul_i3 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_r_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
        out_r_TVALID : OUT STD_LOGIC;
        a_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp_num0_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        tmp_num0_2_out_ap_vld : OUT STD_LOGIC;
        tmp_num1_3_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        tmp_num1_3_out_ap_vld : OUT STD_LOGIC;
        p_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_out_ap_vld : OUT STD_LOGIC;
        p_out1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_out1_ap_vld : OUT STD_LOGIC );
    end component;


    component coo_dec_sitofp_32s_32_4_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component coo_dec_mul_32s_32s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component coo_dec_a_RAM_1WNR_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component coo_dec_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    a_U : component coo_dec_a_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 16384,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_address0,
        ce0 => a_ce0,
        we0 => a_we0,
        d0 => a_d0,
        q0 => a_q0);

    grp_coo_dec_Pipeline_1_fu_133 : component coo_dec_coo_dec_Pipeline_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_coo_dec_Pipeline_1_fu_133_ap_start,
        ap_done => grp_coo_dec_Pipeline_1_fu_133_ap_done,
        ap_idle => grp_coo_dec_Pipeline_1_fu_133_ap_idle,
        ap_ready => grp_coo_dec_Pipeline_1_fu_133_ap_ready,
        a_address0 => grp_coo_dec_Pipeline_1_fu_133_a_address0,
        a_ce0 => grp_coo_dec_Pipeline_1_fu_133_a_ce0,
        a_we0 => grp_coo_dec_Pipeline_1_fu_133_a_we0,
        a_d0 => grp_coo_dec_Pipeline_1_fu_133_a_d0);

    grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139 : component coo_dec_coo_dec_Pipeline_VITIS_LOOP_16_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_ap_start,
        ap_done => grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_ap_done,
        ap_idle => grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_ap_idle,
        ap_ready => grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_ap_ready,
        in_r_TVALID => in_r_TVALID_int_regslice,
        tmp_num1_8 => tmp_num1_reg_781,
        tmp_num2_7 => tmp_num2_reg_786,
        tmp_num3 => tmp_num3_reg_791,
        mul_i => mul_i_reg_806,
        in_r_TDATA => in_r_TDATA_int_regslice,
        in_r_TREADY => grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_in_r_TREADY,
        trunc_ln => trunc_ln58_reg_801,
        a_address0 => grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_a_address0,
        a_ce0 => grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_a_ce0,
        a_we0 => grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_a_we0,
        a_d0 => grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_a_d0);

    grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151 : component coo_dec_coo_dec_Pipeline_VITIS_LOOP_58_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_ap_start,
        ap_done => grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_ap_done,
        ap_idle => grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_ap_idle,
        ap_ready => grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_ap_ready,
        out_r_TREADY => grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_out_r_TREADY,
        tmp_num0 => tmp_num0_reg_816,
        tmp_num1_1 => tmp_num1_1_reg_821,
        mul_i3 => mul_i3_reg_811,
        out_r_TDATA => grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_out_r_TDATA,
        out_r_TVALID => grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_out_r_TVALID,
        a_address0 => grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_a_address0,
        a_ce0 => grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_a_ce0,
        a_q0 => a_q0,
        tmp_num0_2_out => grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_tmp_num0_2_out,
        tmp_num0_2_out_ap_vld => grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_tmp_num0_2_out_ap_vld,
        tmp_num1_3_out => grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_tmp_num1_3_out,
        tmp_num1_3_out_ap_vld => grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_tmp_num1_3_out_ap_vld,
        p_out => grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_p_out,
        p_out_ap_vld => grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_p_out_ap_vld,
        p_out1 => grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_p_out1,
        p_out1_ap_vld => grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_p_out1_ap_vld);

    sitofp_32s_32_4_no_dsp_1_U20 : component coo_dec_sitofp_32s_32_4_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => result_V_reg_763,
        ce => grp_fu_165_ce,
        dout => grp_fu_165_p1);

    sitofp_32s_32_4_no_dsp_1_U21 : component coo_dec_sitofp_32s_32_4_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => result_V_16_fu_615_p3,
        ce => grp_fu_169_ce,
        dout => grp_fu_169_p1);

    mul_32s_32s_32_1_1_U22 : component coo_dec_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => result_V_16_fu_615_p3,
        din1 => result_V_reg_763,
        dout => mul_i3_fu_638_p2);

    regslice_both_in_r_U : component coo_dec_regslice_both
    generic map (
        DataWidth => 128)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_r_TDATA,
        vld_in => in_r_TVALID,
        ack_in => regslice_both_in_r_U_ack_in,
        data_out => in_r_TDATA_int_regslice,
        vld_out => in_r_TVALID_int_regslice,
        ack_out => in_r_TREADY_int_regslice,
        apdone_blk => regslice_both_in_r_U_apdone_blk);

    regslice_both_out_r_U : component coo_dec_regslice_both
    generic map (
        DataWidth => 128)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => out_r_TDATA_int_regslice,
        vld_in => out_r_TVALID_int_regslice,
        ack_in => out_r_TREADY_int_regslice,
        data_out => out_r_TDATA,
        vld_out => regslice_both_out_r_U_vld_out,
        ack_out => out_r_TREADY,
        apdone_blk => regslice_both_out_r_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_coo_dec_Pipeline_1_fu_133_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_coo_dec_Pipeline_1_fu_133_ap_start_reg <= ap_const_logic_0;
            else
                if ((not(((in_r_TVALID_int_regslice = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_coo_dec_Pipeline_1_fu_133_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_coo_dec_Pipeline_1_fu_133_ap_ready = ap_const_logic_1)) then 
                    grp_coo_dec_Pipeline_1_fu_133_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_ap_ready = ap_const_logic_1)) then 
                    grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_ap_ready = ap_const_logic_1)) then 
                    grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                data_V_2_reg_705 <= in_r_TDATA_int_regslice(95 downto 64);
                data_V_reg_700 <= in_r_TDATA_int_regslice(63 downto 32);
                p_Result_4_reg_726 <= p_Result_4_fu_221_p1;
                p_Result_5_reg_731 <= in_r_TDATA_int_regslice(63 downto 63);
                p_Result_6_reg_742 <= in_r_TDATA_int_regslice(54 downto 32);
                p_Result_7_reg_747 <= in_r_TDATA_int_regslice(95 downto 95);
                p_Result_8_reg_758 <= in_r_TDATA_int_regslice(86 downto 64);
                p_Result_s_reg_715 <= in_r_TDATA_int_regslice(31 downto 31);
                tmp_s_reg_710 <= in_r_TDATA_int_regslice(127 downto 96);
                xs_exp_V_2_reg_736 <= in_r_TDATA_int_regslice(62 downto 55);
                xs_exp_V_3_reg_752 <= in_r_TDATA_int_regslice(94 downto 87);
                xs_exp_V_reg_720 <= in_r_TDATA_int_regslice(30 downto 23);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                mul_i3_reg_811 <= mul_i3_fu_638_p2;
                mul_i_reg_806 <= mul_i_fu_632_p2;
                tmp_num1_reg_781 <= tmp_num1_fu_598_p1;
                tmp_num2_reg_786 <= tmp_num2_fu_602_p1;
                tmp_num3_reg_791 <= tmp_num3_fu_606_p1;
                trunc_ln58_reg_801 <= trunc_ln58_fu_622_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                result_V_17_reg_775 <= result_V_17_fu_591_p3;
                result_V_reg_763 <= result_V_fu_384_p3;
                val_2_reg_769 <= val_2_fu_480_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                tmp_num0_reg_816 <= grp_fu_165_p1;
                tmp_num1_1_reg_821 <= grp_fu_169_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state2, grp_coo_dec_Pipeline_1_fu_133_ap_done, grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_ap_done, grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_ap_done, ap_CS_fsm_state4, ap_CS_fsm_state7, regslice_both_out_r_U_apdone_blk, in_r_TVALID_int_regslice, out_r_TREADY_int_regslice)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((in_r_TVALID_int_regslice = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_coo_dec_Pipeline_1_fu_133_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((out_r_TREADY_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if ((not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_out_r_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;

    a_address0_assign_proc : process(ap_CS_fsm_state2, grp_coo_dec_Pipeline_1_fu_133_a_address0, grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_a_address0, grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_a_address0, ap_CS_fsm_state4, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            a_address0 <= grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_a_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            a_address0 <= grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_a_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            a_address0 <= grp_coo_dec_Pipeline_1_fu_133_a_address0;
        else 
            a_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    a_ce0_assign_proc : process(ap_CS_fsm_state2, grp_coo_dec_Pipeline_1_fu_133_a_ce0, grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_a_ce0, grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_a_ce0, ap_CS_fsm_state4, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            a_ce0 <= grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_a_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            a_ce0 <= grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_a_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            a_ce0 <= grp_coo_dec_Pipeline_1_fu_133_a_ce0;
        else 
            a_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_d0_assign_proc : process(ap_CS_fsm_state2, grp_coo_dec_Pipeline_1_fu_133_a_d0, grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_a_d0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            a_d0 <= grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_a_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            a_d0 <= grp_coo_dec_Pipeline_1_fu_133_a_d0;
        else 
            a_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    a_we0_assign_proc : process(ap_CS_fsm_state2, grp_coo_dec_Pipeline_1_fu_133_a_we0, grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_a_we0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            a_we0 <= grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_a_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            a_we0 <= grp_coo_dec_Pipeline_1_fu_133_a_we0;
        else 
            a_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln346_1_fu_407_p2 <= std_logic_vector(unsigned(zext_ln346_1_fu_404_p1) + unsigned(ap_const_lv9_181));
    add_ln346_2_fu_504_p2 <= std_logic_vector(unsigned(zext_ln346_2_fu_501_p1) + unsigned(ap_const_lv9_181));
    add_ln346_fu_297_p2 <= std_logic_vector(unsigned(zext_ln346_fu_294_p1) + unsigned(ap_const_lv9_181));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, in_r_TVALID_int_regslice)
    begin
        if (((in_r_TVALID_int_regslice = ap_const_logic_0) or (ap_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_coo_dec_Pipeline_1_fu_133_ap_done)
    begin
        if ((grp_coo_dec_Pipeline_1_fu_133_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_ap_done)
    begin
        if ((grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_ap_done)
    begin
        if ((grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state8_blk_assign_proc : process(out_r_TREADY_int_regslice)
    begin
        if ((out_r_TREADY_int_regslice = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state9_blk_assign_proc : process(regslice_both_out_r_U_apdone_blk, out_r_TREADY_int_regslice)
    begin
        if (((out_r_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_out_r_U_apdone_blk = ap_const_logic_1))) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, in_r_TVALID_int_regslice)
    begin
                ap_block_state1 <= ((in_r_TVALID_int_regslice = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_ignore_call10_assign_proc : process(ap_start, in_r_TVALID_int_regslice)
    begin
                ap_block_state1_ignore_call10 <= ((in_r_TVALID_int_regslice = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state9_assign_proc : process(regslice_both_out_r_U_apdone_blk, out_r_TREADY_int_regslice)
    begin
                ap_block_state9 <= ((out_r_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_out_r_U_apdone_blk = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state9, regslice_both_out_r_U_apdone_blk, out_r_TREADY_int_regslice)
    begin
        if ((not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_out_r_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state9, regslice_both_out_r_U_apdone_blk, out_r_TREADY_int_regslice)
    begin
        if ((not(((out_r_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_out_r_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    bitcast_ln174_1_fu_659_p1 <= grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_tmp_num1_3_out;
    bitcast_ln174_fu_655_p1 <= grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_tmp_num0_2_out;
    empty_fu_627_p2 <= std_logic_vector(shift_left(unsigned(result_V_17_reg_775),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    grp_coo_dec_Pipeline_1_fu_133_ap_start <= grp_coo_dec_Pipeline_1_fu_133_ap_start_reg;
    grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_ap_start <= grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_ap_start_reg;
    grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_ap_start <= grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_ap_start_reg;
    grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_out_r_TREADY <= (out_r_TREADY_int_regslice and ap_CS_fsm_state7);

    grp_fu_165_ce_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state6, grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_ap_done, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_ap_done = ap_const_logic_1)))) then 
            grp_fu_165_ce <= ap_const_logic_1;
        else 
            grp_fu_165_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_169_ce_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state6, grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_ap_done, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_ap_done = ap_const_logic_1)))) then 
            grp_fu_169_ce <= ap_const_logic_1;
        else 
            grp_fu_169_ce <= ap_const_logic_0;
        end if; 
    end process;


    in_r_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, in_r_TVALID_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            in_r_TDATA_blk_n <= in_r_TVALID_int_regslice;
        else 
            in_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_r_TREADY <= regslice_both_in_r_U_ack_in;

    in_r_TREADY_int_regslice_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_in_r_TREADY, ap_CS_fsm_state4, in_r_TVALID_int_regslice)
    begin
        if ((not(((in_r_TVALID_int_regslice = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_r_TREADY_int_regslice <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            in_r_TREADY_int_regslice <= grp_coo_dec_Pipeline_VITIS_LOOP_16_1_fu_139_in_r_TREADY;
        else 
            in_r_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    isNeg_2_fu_413_p3 <= add_ln346_1_fu_407_p2(8 downto 8);
    isNeg_3_fu_510_p3 <= add_ln346_2_fu_504_p2(8 downto 8);
    isNeg_fu_303_p3 <= add_ln346_fu_297_p2(8 downto 8);
    mantissa_2_fu_391_p4 <= ((ap_const_lv1_1 & p_Result_6_reg_742) & ap_const_lv1_0);
    mantissa_3_fu_488_p4 <= ((ap_const_lv1_1 & p_Result_8_reg_758) & ap_const_lv1_0);
    mantissa_fu_281_p4 <= ((ap_const_lv1_1 & p_Result_4_reg_726) & ap_const_lv1_0);
    mul_i_fu_632_p2 <= std_logic_vector(unsigned(empty_fu_627_p2) - unsigned(result_V_17_reg_775));

    out_r_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, out_r_TREADY_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            out_r_TDATA_blk_n <= out_r_TREADY_int_regslice;
        else 
            out_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_r_TDATA_int_regslice_assign_proc : process(ap_CS_fsm_state8, p_0_fu_663_p5, grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_out_r_TDATA, grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_out_r_TVALID, ap_CS_fsm_state7, out_r_TREADY_int_regslice)
    begin
        if (((out_r_TREADY_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            out_r_TDATA_int_regslice <= p_0_fu_663_p5;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_out_r_TVALID = ap_const_logic_1))) then 
            out_r_TDATA_int_regslice <= grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_out_r_TDATA;
        else 
            out_r_TDATA_int_regslice <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    out_r_TVALID <= regslice_both_out_r_U_vld_out;

    out_r_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_state8, grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_out_r_TVALID, ap_CS_fsm_state7, out_r_TREADY_int_regslice)
    begin
        if (((out_r_TREADY_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            out_r_TVALID_int_regslice <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            out_r_TVALID_int_regslice <= grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_out_r_TVALID;
        else 
            out_r_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    p_0_fu_663_p5 <= (((grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_p_out1 & grp_coo_dec_Pipeline_VITIS_LOOP_58_1_fu_151_p_out) & bitcast_ln174_1_fu_659_p1) & bitcast_ln174_fu_655_p1);
    p_Result_4_fu_221_p1 <= in_r_TDATA_int_regslice(23 - 1 downto 0);
    r_V_10_fu_549_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_3_fu_497_p1),to_integer(unsigned('0' & zext_ln1488_3_fu_539_p1(31-1 downto 0)))));
    r_V_6_fu_342_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_fu_290_p1),to_integer(unsigned('0' & zext_ln1488_fu_332_p1(31-1 downto 0)))));
    r_V_7_fu_446_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_2_fu_400_p1),to_integer(unsigned('0' & zext_ln1488_2_fu_442_p1(31-1 downto 0)))));
    r_V_8_fu_452_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_2_fu_400_p1),to_integer(unsigned('0' & zext_ln1488_2_fu_442_p1(31-1 downto 0)))));
    r_V_9_fu_543_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_3_fu_497_p1),to_integer(unsigned('0' & zext_ln1488_3_fu_539_p1(31-1 downto 0)))));
    r_V_fu_336_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_fu_290_p1),to_integer(unsigned('0' & zext_ln1488_fu_332_p1(31-1 downto 0)))));
    result_V_12_fu_610_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(val_2_reg_769));
    result_V_15_fu_585_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(val_3_fu_577_p3));
    result_V_16_fu_615_p3 <= 
        result_V_12_fu_610_p2 when (p_Result_5_reg_731(0) = '1') else 
        val_2_reg_769;
    result_V_17_fu_591_p3 <= 
        result_V_15_fu_585_p2 when (p_Result_7_reg_747(0) = '1') else 
        val_3_fu_577_p3;
    result_V_9_fu_378_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(val_fu_370_p3));
    result_V_fu_384_p3 <= 
        result_V_9_fu_378_p2 when (p_Result_s_reg_715(0) = '1') else 
        val_fu_370_p3;
        sext_ln1488_2_fu_438_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_3_fu_430_p3),32));

        sext_ln1488_3_fu_535_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_4_fu_527_p3),32));

        sext_ln1488_fu_328_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_fu_320_p3),32));

        sext_ln1512_1_fu_426_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1512_1_fu_421_p2),9));

        sext_ln1512_2_fu_523_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1512_2_fu_518_p2),9));

        sext_ln1512_fu_316_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1512_fu_311_p2),9));

    sub_ln1512_1_fu_421_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(xs_exp_V_2_reg_736));
    sub_ln1512_2_fu_518_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(xs_exp_V_3_reg_752));
    sub_ln1512_fu_311_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(xs_exp_V_reg_720));
    tmp_15_fu_458_p3 <= r_V_7_fu_446_p2(24 downto 24);
    tmp_19_fu_555_p3 <= r_V_9_fu_543_p2(24 downto 24);
    tmp_4_fu_360_p4 <= r_V_6_fu_342_p2(55 downto 24);
    tmp_5_fu_470_p4 <= r_V_8_fu_452_p2(55 downto 24);
    tmp_6_fu_567_p4 <= r_V_10_fu_549_p2(55 downto 24);
    tmp_fu_348_p3 <= r_V_fu_336_p2(24 downto 24);
    tmp_num1_fu_598_p1 <= data_V_reg_700;
    tmp_num2_fu_602_p1 <= data_V_2_reg_705;
    tmp_num3_fu_606_p1 <= tmp_s_reg_710;
    trunc_ln58_fu_622_p1 <= result_V_16_fu_615_p3(14 - 1 downto 0);
    ush_3_fu_430_p3 <= 
        sext_ln1512_1_fu_426_p1 when (isNeg_2_fu_413_p3(0) = '1') else 
        add_ln346_1_fu_407_p2;
    ush_4_fu_527_p3 <= 
        sext_ln1512_2_fu_523_p1 when (isNeg_3_fu_510_p3(0) = '1') else 
        add_ln346_2_fu_504_p2;
    ush_fu_320_p3 <= 
        sext_ln1512_fu_316_p1 when (isNeg_fu_303_p3(0) = '1') else 
        add_ln346_fu_297_p2;
    val_2_fu_480_p3 <= 
        zext_ln818_1_fu_466_p1 when (isNeg_2_fu_413_p3(0) = '1') else 
        tmp_5_fu_470_p4;
    val_3_fu_577_p3 <= 
        zext_ln818_2_fu_563_p1 when (isNeg_3_fu_510_p3(0) = '1') else 
        tmp_6_fu_567_p4;
    val_fu_370_p3 <= 
        zext_ln818_fu_356_p1 when (isNeg_fu_303_p3(0) = '1') else 
        tmp_4_fu_360_p4;
    zext_ln1488_2_fu_442_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1488_2_fu_438_p1),79));
    zext_ln1488_3_fu_539_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1488_3_fu_535_p1),79));
    zext_ln1488_fu_332_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1488_fu_328_p1),79));
    zext_ln15_2_fu_400_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_2_fu_391_p4),79));
    zext_ln15_3_fu_497_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_3_fu_488_p4),79));
    zext_ln15_fu_290_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_fu_281_p4),79));
    zext_ln346_1_fu_404_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_V_2_reg_736),9));
    zext_ln346_2_fu_501_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_V_3_reg_752),9));
    zext_ln346_fu_294_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_V_reg_720),9));
    zext_ln818_1_fu_466_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_15_fu_458_p3),32));
    zext_ln818_2_fu_563_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_19_fu_555_p3),32));
    zext_ln818_fu_356_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_348_p3),32));
end behav;
