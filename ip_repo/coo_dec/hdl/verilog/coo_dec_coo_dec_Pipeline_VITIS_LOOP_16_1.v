// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module coo_dec_coo_dec_Pipeline_VITIS_LOOP_16_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_r_TVALID,
        tmp_num1_8,
        tmp_num2_7,
        tmp_num3,
        mul_i,
        in_r_TDATA,
        in_r_TREADY,
        trunc_ln,
        a_address0,
        a_ce0,
        a_we0,
        a_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   in_r_TVALID;
input  [31:0] tmp_num1_8;
input  [31:0] tmp_num2_7;
input  [31:0] tmp_num3;
input  [31:0] mul_i;
input  [127:0] in_r_TDATA;
output   in_r_TREADY;
input  [13:0] trunc_ln;
output  [13:0] a_address0;
output   a_ce0;
output   a_we0;
output  [31:0] a_d0;

reg ap_idle;
reg in_r_TREADY;
reg a_ce0;
reg a_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln16_fu_263_p2;
wire   [1:0] p_V_load_2_load_fu_274_p1;
reg    ap_predicate_op42_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    in_r_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg   [31:0] dc_reg_185;
reg   [31:0] dc_reg_185_pp0_iter2_reg;
reg    ap_block_pp0_stage0_11001;
reg   [31:0] dc_reg_185_pp0_iter3_reg;
reg   [0:0] icmp_ln16_reg_751;
reg   [0:0] icmp_ln16_reg_751_pp0_iter2_reg;
reg   [0:0] icmp_ln16_reg_751_pp0_iter3_reg;
reg   [1:0] q_V_load_reg_764;
reg   [1:0] q_V_load_reg_764_pp0_iter2_reg;
reg   [1:0] q_V_load_reg_764_pp0_iter3_reg;
reg   [31:0] ap_phi_mux_dc_phi_fu_189_p8;
wire   [31:0] ap_phi_reg_pp0_iter1_dc_reg_185;
wire   [31:0] tmp_num0_fu_288_p1;
reg   [1:0] ap_phi_mux_q_V_1_phi_fu_203_p6;
wire   [1:0] ap_phi_reg_pp0_iter1_q_V_1_reg_200;
wire   [63:0] zext_ln46_fu_674_p1;
reg   [1:0] q_V_fu_104;
wire    ap_loop_init;
reg   [1:0] p_V_fu_108;
wire   [1:0] p_V_2_fu_356_p2;
reg   [30:0] i_fu_112;
wire   [30:0] i_2_fu_268_p2;
reg   [31:0] num_1_fu_116;
wire   [31:0] tmp_num3_4_fu_331_p1;
reg   [31:0] num_2_fu_120;
wire   [31:0] tmp_num2_2_fu_317_p1;
reg   [31:0] tmp_num1_fu_124;
wire   [31:0] tmp_num1_4_fu_303_p1;
reg   [31:0] row_fu_128;
wire   [31:0] result_V_fu_494_p3;
reg   [31:0] col_fu_132;
wire   [31:0] result_V_6_fu_661_p3;
wire   [31:0] i_cast_fu_259_p1;
wire   [31:0] trunc_ln20_fu_284_p1;
wire   [31:0] tmp_s_fu_293_p4;
wire   [31:0] tmp_1_fu_307_p4;
wire   [31:0] tmp_2_fu_321_p4;
wire   [31:0] data_V_fu_362_p1;
wire   [22:0] p_Result_1_fu_384_p1;
wire   [24:0] mantissa_fu_388_p4;
wire   [7:0] xs_exp_V_fu_374_p4;
wire   [8:0] zext_ln346_fu_402_p1;
wire   [8:0] add_ln346_fu_406_p2;
wire   [7:0] sub_ln1512_fu_420_p2;
wire   [0:0] isNeg_fu_412_p3;
wire  signed [8:0] sext_ln1512_fu_426_p1;
wire   [8:0] ush_fu_430_p3;
wire  signed [31:0] sext_ln1488_fu_438_p1;
wire   [78:0] zext_ln15_fu_398_p1;
wire   [78:0] zext_ln1488_fu_442_p1;
wire   [78:0] r_V_fu_446_p2;
wire   [0:0] tmp_6_fu_458_p3;
wire   [78:0] r_V_1_fu_452_p2;
wire   [31:0] zext_ln818_fu_466_p1;
wire   [31:0] tmp_3_fu_470_p4;
wire   [31:0] val_fu_480_p3;
wire   [0:0] p_Result_s_fu_366_p3;
wire   [31:0] result_V_1_fu_488_p2;
wire   [31:0] data_V_1_fu_529_p1;
wire   [22:0] p_Result_3_fu_551_p1;
wire   [24:0] mantissa_1_fu_555_p4;
wire   [7:0] xs_exp_V_1_fu_541_p4;
wire   [8:0] zext_ln346_1_fu_569_p1;
wire   [8:0] add_ln346_1_fu_573_p2;
wire   [7:0] sub_ln1512_1_fu_587_p2;
wire   [0:0] isNeg_1_fu_579_p3;
wire  signed [8:0] sext_ln1512_1_fu_593_p1;
wire   [8:0] ush_1_fu_597_p3;
wire  signed [31:0] sext_ln1488_1_fu_605_p1;
wire   [78:0] zext_ln15_1_fu_565_p1;
wire   [78:0] zext_ln1488_1_fu_609_p1;
wire   [78:0] r_V_2_fu_613_p2;
wire   [0:0] tmp_10_fu_625_p3;
wire   [78:0] r_V_3_fu_619_p2;
wire   [31:0] zext_ln818_1_fu_633_p1;
wire   [31:0] tmp_4_fu_637_p4;
wire   [31:0] val_1_fu_647_p3;
wire   [0:0] p_Result_2_fu_533_p3;
wire   [31:0] result_V_4_fu_655_p2;
wire  signed [13:0] zext_ln46_fu_674_p0;
wire   [13:0] grp_fu_678_p3;
wire  signed [13:0] grp_fu_678_p0;
wire   [13:0] grp_fu_678_p2;
reg    grp_fu_678_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_150;
reg    ap_condition_557;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_done_reg = 1'b0;
end

coo_dec_mac_muladd_14s_14s_14ns_14_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 14 ))
mac_muladd_14s_14s_14ns_14_4_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_678_p0),
    .din1(trunc_ln),
    .din2(grp_fu_678_p2),
    .ce(grp_fu_678_ce),
    .dout(grp_fu_678_p3)
);

coo_dec_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_150)) begin
        if (((p_V_load_2_load_fu_274_p1 == 2'd2) & (icmp_ln16_fu_263_p2 == 1'd1))) begin
            dc_reg_185 <= num_2_fu_120;
        end else if (((p_V_load_2_load_fu_274_p1 == 2'd1) & (icmp_ln16_fu_263_p2 == 1'd1))) begin
            dc_reg_185 <= tmp_num1_fu_124;
        end else if (((p_V_fu_108 == 2'd0) & (icmp_ln16_fu_263_p2 == 1'd1))) begin
            dc_reg_185 <= tmp_num0_fu_288_p1;
        end else if (((p_V_load_2_load_fu_274_p1 == 2'd3) & (icmp_ln16_fu_263_p2 == 1'd1))) begin
            dc_reg_185 <= num_1_fu_116;
        end else if (~(icmp_ln16_fu_263_p2 == 1'd0)) begin
            dc_reg_185 <= ap_phi_reg_pp0_iter1_dc_reg_185;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_112 <= 31'd0;
        end else if (((icmp_ln16_fu_263_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_fu_112 <= i_2_fu_268_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            num_1_fu_116 <= tmp_num3;
        end else if ((1'b1 == ap_condition_557)) begin
            num_1_fu_116 <= tmp_num3_4_fu_331_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            num_2_fu_120 <= tmp_num2_7;
        end else if ((1'b1 == ap_condition_557)) begin
            num_2_fu_120 <= tmp_num2_2_fu_317_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_V_fu_108 <= 2'd3;
        end else if (((icmp_ln16_fu_263_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            p_V_fu_108 <= p_V_2_fu_356_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            q_V_fu_104 <= 2'd0;
        end else if (((icmp_ln16_fu_263_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            q_V_fu_104 <= ap_phi_mux_q_V_1_phi_fu_203_p6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            tmp_num1_fu_124 <= tmp_num1_8;
        end else if ((1'b1 == ap_condition_557)) begin
            tmp_num1_fu_124 <= tmp_num1_4_fu_303_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        icmp_ln16_reg_751 <= icmp_ln16_fu_263_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        dc_reg_185_pp0_iter2_reg <= dc_reg_185;
        dc_reg_185_pp0_iter3_reg <= dc_reg_185_pp0_iter2_reg;
        icmp_ln16_reg_751_pp0_iter2_reg <= icmp_ln16_reg_751;
        icmp_ln16_reg_751_pp0_iter3_reg <= icmp_ln16_reg_751_pp0_iter2_reg;
        q_V_load_reg_764_pp0_iter2_reg <= q_V_load_reg_764;
        q_V_load_reg_764_pp0_iter3_reg <= q_V_load_reg_764_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (q_V_load_reg_764_pp0_iter2_reg == 2'd1) & (icmp_ln16_reg_751_pp0_iter2_reg == 1'd1))) begin
        col_fu_132 <= result_V_6_fu_661_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln16_fu_263_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        q_V_load_reg_764 <= q_V_fu_104;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln16_fu_263_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (q_V_fu_104 == 2'd0))) begin
        row_fu_128 <= result_V_fu_494_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        a_ce0 = 1'b1;
    end else begin
        a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(q_V_load_reg_764_pp0_iter3_reg == 2'd1) & ~(q_V_load_reg_764_pp0_iter3_reg == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln16_reg_751_pp0_iter3_reg == 1'd1))) begin
        a_we0 = 1'b1;
    end else begin
        a_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln16_fu_263_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln16_fu_263_p2 == 1'd1)) begin
        if ((p_V_load_2_load_fu_274_p1 == 2'd2)) begin
            ap_phi_mux_dc_phi_fu_189_p8 = num_2_fu_120;
        end else if ((p_V_load_2_load_fu_274_p1 == 2'd1)) begin
            ap_phi_mux_dc_phi_fu_189_p8 = tmp_num1_fu_124;
        end else if ((p_V_fu_108 == 2'd0)) begin
            ap_phi_mux_dc_phi_fu_189_p8 = tmp_num0_fu_288_p1;
        end else if ((p_V_load_2_load_fu_274_p1 == 2'd3)) begin
            ap_phi_mux_dc_phi_fu_189_p8 = num_1_fu_116;
        end else begin
            ap_phi_mux_dc_phi_fu_189_p8 = ap_phi_reg_pp0_iter1_dc_reg_185;
        end
    end else begin
        ap_phi_mux_dc_phi_fu_189_p8 = ap_phi_reg_pp0_iter1_dc_reg_185;
    end
end

always @ (*) begin
    if ((icmp_ln16_fu_263_p2 == 1'd1)) begin
        if ((~(q_V_fu_104 == 2'd0) & ~(q_V_fu_104 == 2'd1))) begin
            ap_phi_mux_q_V_1_phi_fu_203_p6 = 2'd0;
        end else if ((q_V_fu_104 == 2'd0)) begin
            ap_phi_mux_q_V_1_phi_fu_203_p6 = 2'd1;
        end else if ((q_V_fu_104 == 2'd1)) begin
            ap_phi_mux_q_V_1_phi_fu_203_p6 = 2'd2;
        end else begin
            ap_phi_mux_q_V_1_phi_fu_203_p6 = ap_phi_reg_pp0_iter1_q_V_1_reg_200;
        end
    end else begin
        ap_phi_mux_q_V_1_phi_fu_203_p6 = ap_phi_reg_pp0_iter1_q_V_1_reg_200;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_678_ce = 1'b1;
    end else begin
        grp_fu_678_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op42_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_r_TDATA_blk_n = in_r_TVALID;
    end else begin
        in_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op42_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_r_TREADY = 1'b1;
    end else begin
        in_r_TREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_address0 = zext_ln46_fu_674_p1;

assign a_d0 = dc_reg_185_pp0_iter3_reg;

assign add_ln346_1_fu_573_p2 = ($signed(zext_ln346_1_fu_569_p1) + $signed(9'd385));

assign add_ln346_fu_406_p2 = ($signed(zext_ln346_fu_402_p1) + $signed(9'd385));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_predicate_op42_read_state2 == 1'b1) & (in_r_TVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_predicate_op42_read_state2 == 1'b1) & (in_r_TVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((ap_predicate_op42_read_state2 == 1'b1) & (in_r_TVALID == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_150 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_557 = ((p_V_fu_108 == 2'd0) & (icmp_ln16_fu_263_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign ap_phi_reg_pp0_iter1_dc_reg_185 = 'bx;

assign ap_phi_reg_pp0_iter1_q_V_1_reg_200 = 'bx;

always @ (*) begin
    ap_predicate_op42_read_state2 = ((p_V_fu_108 == 2'd0) & (icmp_ln16_fu_263_p2 == 1'd1));
end

assign data_V_1_fu_529_p1 = dc_reg_185_pp0_iter2_reg;

assign data_V_fu_362_p1 = ap_phi_mux_dc_phi_fu_189_p8;

assign grp_fu_678_p0 = row_fu_128[13:0];

assign grp_fu_678_p2 = col_fu_132[13:0];

assign i_2_fu_268_p2 = (i_fu_112 + 31'd1);

assign i_cast_fu_259_p1 = i_fu_112;

assign icmp_ln16_fu_263_p2 = (($signed(i_cast_fu_259_p1) < $signed(mul_i)) ? 1'b1 : 1'b0);

assign isNeg_1_fu_579_p3 = add_ln346_1_fu_573_p2[32'd8];

assign isNeg_fu_412_p3 = add_ln346_fu_406_p2[32'd8];

assign mantissa_1_fu_555_p4 = {{{{1'd1}, {p_Result_3_fu_551_p1}}}, {1'd0}};

assign mantissa_fu_388_p4 = {{{{1'd1}, {p_Result_1_fu_384_p1}}}, {1'd0}};

assign p_Result_1_fu_384_p1 = data_V_fu_362_p1[22:0];

assign p_Result_2_fu_533_p3 = data_V_1_fu_529_p1[32'd31];

assign p_Result_3_fu_551_p1 = data_V_1_fu_529_p1[22:0];

assign p_Result_s_fu_366_p3 = data_V_fu_362_p1[32'd31];

assign p_V_2_fu_356_p2 = (p_V_fu_108 + 2'd1);

assign p_V_load_2_load_fu_274_p1 = p_V_fu_108;

assign r_V_1_fu_452_p2 = zext_ln15_fu_398_p1 << zext_ln1488_fu_442_p1;

assign r_V_2_fu_613_p2 = zext_ln15_1_fu_565_p1 >> zext_ln1488_1_fu_609_p1;

assign r_V_3_fu_619_p2 = zext_ln15_1_fu_565_p1 << zext_ln1488_1_fu_609_p1;

assign r_V_fu_446_p2 = zext_ln15_fu_398_p1 >> zext_ln1488_fu_442_p1;

assign result_V_1_fu_488_p2 = (32'd0 - val_fu_480_p3);

assign result_V_4_fu_655_p2 = (32'd0 - val_1_fu_647_p3);

assign result_V_6_fu_661_p3 = ((p_Result_2_fu_533_p3[0:0] == 1'b1) ? result_V_4_fu_655_p2 : val_1_fu_647_p3);

assign result_V_fu_494_p3 = ((p_Result_s_fu_366_p3[0:0] == 1'b1) ? result_V_1_fu_488_p2 : val_fu_480_p3);

assign sext_ln1488_1_fu_605_p1 = $signed(ush_1_fu_597_p3);

assign sext_ln1488_fu_438_p1 = $signed(ush_fu_430_p3);

assign sext_ln1512_1_fu_593_p1 = $signed(sub_ln1512_1_fu_587_p2);

assign sext_ln1512_fu_426_p1 = $signed(sub_ln1512_fu_420_p2);

assign sub_ln1512_1_fu_587_p2 = (8'd127 - xs_exp_V_1_fu_541_p4);

assign sub_ln1512_fu_420_p2 = (8'd127 - xs_exp_V_fu_374_p4);

assign tmp_10_fu_625_p3 = r_V_2_fu_613_p2[32'd24];

assign tmp_1_fu_307_p4 = {{in_r_TDATA[95:64]}};

assign tmp_2_fu_321_p4 = {{in_r_TDATA[127:96]}};

assign tmp_3_fu_470_p4 = {{r_V_1_fu_452_p2[55:24]}};

assign tmp_4_fu_637_p4 = {{r_V_3_fu_619_p2[55:24]}};

assign tmp_6_fu_458_p3 = r_V_fu_446_p2[32'd24];

assign tmp_num0_fu_288_p1 = trunc_ln20_fu_284_p1;

assign tmp_num1_4_fu_303_p1 = tmp_s_fu_293_p4;

assign tmp_num2_2_fu_317_p1 = tmp_1_fu_307_p4;

assign tmp_num3_4_fu_331_p1 = tmp_2_fu_321_p4;

assign tmp_s_fu_293_p4 = {{in_r_TDATA[63:32]}};

assign trunc_ln20_fu_284_p1 = in_r_TDATA[31:0];

assign ush_1_fu_597_p3 = ((isNeg_1_fu_579_p3[0:0] == 1'b1) ? sext_ln1512_1_fu_593_p1 : add_ln346_1_fu_573_p2);

assign ush_fu_430_p3 = ((isNeg_fu_412_p3[0:0] == 1'b1) ? sext_ln1512_fu_426_p1 : add_ln346_fu_406_p2);

assign val_1_fu_647_p3 = ((isNeg_1_fu_579_p3[0:0] == 1'b1) ? zext_ln818_1_fu_633_p1 : tmp_4_fu_637_p4);

assign val_fu_480_p3 = ((isNeg_fu_412_p3[0:0] == 1'b1) ? zext_ln818_fu_466_p1 : tmp_3_fu_470_p4);

assign xs_exp_V_1_fu_541_p4 = {{data_V_1_fu_529_p1[30:23]}};

assign xs_exp_V_fu_374_p4 = {{data_V_fu_362_p1[30:23]}};

assign zext_ln1488_1_fu_609_p1 = $unsigned(sext_ln1488_1_fu_605_p1);

assign zext_ln1488_fu_442_p1 = $unsigned(sext_ln1488_fu_438_p1);

assign zext_ln15_1_fu_565_p1 = mantissa_1_fu_555_p4;

assign zext_ln15_fu_398_p1 = mantissa_fu_388_p4;

assign zext_ln346_1_fu_569_p1 = xs_exp_V_1_fu_541_p4;

assign zext_ln346_fu_402_p1 = xs_exp_V_fu_374_p4;

assign zext_ln46_fu_674_p0 = grp_fu_678_p3;

assign zext_ln46_fu_674_p1 = $unsigned(zext_ln46_fu_674_p0);

assign zext_ln818_1_fu_633_p1 = tmp_10_fu_625_p3;

assign zext_ln818_fu_466_p1 = tmp_6_fu_458_p3;

endmodule //coo_dec_coo_dec_Pipeline_VITIS_LOOP_16_1
