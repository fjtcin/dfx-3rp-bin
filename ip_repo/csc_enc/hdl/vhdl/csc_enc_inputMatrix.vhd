-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity csc_enc_inputMatrix is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_r_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    in_r_TVALID : IN STD_LOGIC;
    in_r_TREADY : OUT STD_LOGIC;
    matrix_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    matrix_ce0 : OUT STD_LOGIC;
    matrix_we0 : OUT STD_LOGIC;
    matrix_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_423_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_423_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_423_p_ce : OUT STD_LOGIC;
    grp_fu_426_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_426_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_426_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_426_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_426_p_ce : OUT STD_LOGIC );
end;


architecture behav of csc_enc_inputMatrix is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal in_r_TDATA_blk_n : STD_LOGIC;
    signal data_V_reg_439 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_444 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_reg_449 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_fu_259_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_reg_454 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_7_fu_401_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_7_reg_460 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_fu_409_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_reg_466 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_ap_start : STD_LOGIC;
    signal grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_ap_done : STD_LOGIC;
    signal grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_ap_idle : STD_LOGIC;
    signal grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_ap_ready : STD_LOGIC;
    signal grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_matrix_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_matrix_ce0 : STD_LOGIC;
    signal grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_matrix_we0 : STD_LOGIC;
    signal grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_matrix_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_in_r_TREADY : STD_LOGIC;
    signal grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_L_0_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_L_0_out_ap_vld : STD_LOGIC;
    signal grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_grp_fu_471_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_grp_fu_471_p_ce : STD_LOGIC;
    signal grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_grp_fu_474_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_grp_fu_474_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_grp_fu_474_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_grp_fu_474_p_ce : STD_LOGIC;
    signal grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_block_state1 : BOOLEAN;
    signal p_Result_1_fu_149_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal mantissa_fu_153_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal xs_exp_V_fu_139_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln346_fu_167_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln346_fu_171_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1512_fu_185_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_fu_177_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1512_fu_191_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ush_fu_195_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1488_fu_203_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_fu_163_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln1488_fu_207_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal r_V_fu_211_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_fu_223_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_1_fu_217_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln818_fu_231_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_235_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_fu_245_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_fu_131_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_V_2_fu_253_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_3_fu_285_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal mantissa_1_fu_295_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal xs_exp_V_1_fu_275_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln346_1_fu_309_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln346_1_fu_313_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1512_1_fu_327_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_1_fu_319_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1512_1_fu_333_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ush_1_fu_337_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1488_1_fu_345_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_1_fu_305_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln1488_1_fu_349_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal r_V_2_fu_353_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_4_fu_365_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_3_fu_359_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln818_1_fu_373_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_377_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_1_fu_387_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_2_fu_267_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_V_6_fu_395_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_471_ce : STD_LOGIC;
    signal grp_fu_474_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component csc_enc_inputMatrix_Pipeline_VITIS_LOOP_17_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_r_TVALID : IN STD_LOGIC;
        data_V : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp_2 : IN STD_LOGIC_VECTOR (31 downto 0);
        mul : IN STD_LOGIC_VECTOR (31 downto 0);
        matrix_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        matrix_ce0 : OUT STD_LOGIC;
        matrix_we0 : OUT STD_LOGIC;
        matrix_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        in_r_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
        in_r_TREADY : OUT STD_LOGIC;
        L_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        L_0_out_ap_vld : OUT STD_LOGIC;
        grp_fu_471_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_471_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_471_p_ce : OUT STD_LOGIC;
        grp_fu_474_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_474_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_474_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_474_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_474_p_ce : OUT STD_LOGIC );
    end component;


    component csc_enc_mul_32s_32s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component csc_enc_fpext_32ns_64_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component csc_enc_dcmp_64ns_64ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88 : component csc_enc_inputMatrix_Pipeline_VITIS_LOOP_17_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_ap_start,
        ap_done => grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_ap_done,
        ap_idle => grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_ap_idle,
        ap_ready => grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_ap_ready,
        in_r_TVALID => in_r_TVALID,
        data_V => data_V_reg_439,
        tmp_1 => tmp_s_reg_444,
        tmp_2 => tmp_5_reg_449,
        mul => mul_reg_466,
        matrix_address0 => grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_matrix_address0,
        matrix_ce0 => grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_matrix_ce0,
        matrix_we0 => grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_matrix_we0,
        matrix_d0 => grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_matrix_d0,
        in_r_TDATA => in_r_TDATA,
        in_r_TREADY => grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_in_r_TREADY,
        L_0_out => grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_L_0_out,
        L_0_out_ap_vld => grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_L_0_out_ap_vld,
        grp_fu_471_p_din0 => grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_grp_fu_471_p_din0,
        grp_fu_471_p_dout0 => grp_fu_423_p_dout0,
        grp_fu_471_p_ce => grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_grp_fu_471_p_ce,
        grp_fu_474_p_din0 => grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_grp_fu_474_p_din0,
        grp_fu_474_p_din1 => grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_grp_fu_474_p_din1,
        grp_fu_474_p_opcode => grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_grp_fu_474_p_opcode,
        grp_fu_474_p_dout0 => grp_fu_426_p_dout0,
        grp_fu_474_p_ce => grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_grp_fu_474_p_ce);

    mul_32s_32s_32_1_1_U10 : component csc_enc_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => result_V_7_reg_460,
        din1 => result_V_reg_454,
        dout => mul_fu_409_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_ap_ready = ap_const_logic_1)) then 
                    grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                data_V_reg_439 <= in_r_TDATA(63 downto 32);
                result_V_7_reg_460 <= result_V_7_fu_401_p3;
                result_V_reg_454 <= result_V_fu_259_p3;
                tmp_5_reg_449 <= in_r_TDATA(127 downto 96);
                tmp_s_reg_444 <= in_r_TDATA(95 downto 64);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                mul_reg_466 <= mul_fu_409_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, in_r_TVALID, grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_ap_done, ap_CS_fsm_state3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (in_r_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    add_ln346_1_fu_313_p2 <= std_logic_vector(unsigned(zext_ln346_1_fu_309_p1) + unsigned(ap_const_lv9_181));
    add_ln346_fu_171_p2 <= std_logic_vector(unsigned(zext_ln346_fu_167_p1) + unsigned(ap_const_lv9_181));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, in_r_TVALID)
    begin
        if (((ap_start = ap_const_logic_0) or (in_r_TVALID = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_ap_done)
    begin
        if ((grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(ap_start, in_r_TVALID)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (in_r_TVALID = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= result_V_reg_454;
    ap_return_1 <= result_V_7_reg_460;
    ap_return_2 <= grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_L_0_out;
    grp_fu_423_p_ce <= grp_fu_471_ce;
    grp_fu_423_p_din0 <= grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_grp_fu_471_p_din0;
    grp_fu_426_p_ce <= grp_fu_474_ce;
    grp_fu_426_p_din0 <= grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_grp_fu_474_p_din0;
    grp_fu_426_p_din1 <= grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_grp_fu_474_p_din1;
    grp_fu_426_p_opcode <= grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_grp_fu_474_p_opcode;

    grp_fu_471_ce_assign_proc : process(grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_grp_fu_471_p_ce, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_471_ce <= grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_grp_fu_471_p_ce;
        else 
            grp_fu_471_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_474_ce_assign_proc : process(grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_grp_fu_474_p_ce, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_474_ce <= grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_grp_fu_474_p_ce;
        else 
            grp_fu_474_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_ap_start <= grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_ap_start_reg;

    in_r_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, in_r_TVALID)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_r_TDATA_blk_n <= in_r_TVALID;
        else 
            in_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_r_TREADY_assign_proc : process(ap_start, ap_CS_fsm_state1, in_r_TVALID, grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_in_r_TREADY, ap_CS_fsm_state3)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (in_r_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_r_TREADY <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            in_r_TREADY <= grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_in_r_TREADY;
        else 
            in_r_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    isNeg_1_fu_319_p3 <= add_ln346_1_fu_313_p2(8 downto 8);
    isNeg_fu_177_p3 <= add_ln346_fu_171_p2(8 downto 8);
    mantissa_1_fu_295_p4 <= ((ap_const_lv1_1 & p_Result_3_fu_285_p4) & ap_const_lv1_0);
    mantissa_fu_153_p4 <= ((ap_const_lv1_1 & p_Result_1_fu_149_p1) & ap_const_lv1_0);
    matrix_address0 <= grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_matrix_address0;
    matrix_ce0 <= grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_matrix_ce0;
    matrix_d0 <= grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_matrix_d0;
    matrix_we0 <= grp_inputMatrix_Pipeline_VITIS_LOOP_17_1_fu_88_matrix_we0;
    p_Result_1_fu_149_p1 <= in_r_TDATA(23 - 1 downto 0);
    p_Result_2_fu_267_p3 <= in_r_TDATA(63 downto 63);
    p_Result_3_fu_285_p4 <= in_r_TDATA(54 downto 32);
    p_Result_s_fu_131_p3 <= in_r_TDATA(31 downto 31);
    r_V_1_fu_217_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_fu_163_p1),to_integer(unsigned('0' & zext_ln1488_fu_207_p1(31-1 downto 0)))));
    r_V_2_fu_353_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_1_fu_305_p1),to_integer(unsigned('0' & zext_ln1488_1_fu_349_p1(31-1 downto 0)))));
    r_V_3_fu_359_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_1_fu_305_p1),to_integer(unsigned('0' & zext_ln1488_1_fu_349_p1(31-1 downto 0)))));
    r_V_fu_211_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_fu_163_p1),to_integer(unsigned('0' & zext_ln1488_fu_207_p1(31-1 downto 0)))));
    result_V_2_fu_253_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(val_fu_245_p3));
    result_V_6_fu_395_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(val_1_fu_387_p3));
    result_V_7_fu_401_p3 <= 
        result_V_6_fu_395_p2 when (p_Result_2_fu_267_p3(0) = '1') else 
        val_1_fu_387_p3;
    result_V_fu_259_p3 <= 
        result_V_2_fu_253_p2 when (p_Result_s_fu_131_p3(0) = '1') else 
        val_fu_245_p3;
        sext_ln1488_1_fu_345_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_1_fu_337_p3),32));

        sext_ln1488_fu_203_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_fu_195_p3),32));

        sext_ln1512_1_fu_333_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1512_1_fu_327_p2),9));

        sext_ln1512_fu_191_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1512_fu_185_p2),9));

    sub_ln1512_1_fu_327_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(xs_exp_V_1_fu_275_p4));
    sub_ln1512_fu_185_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(xs_exp_V_fu_139_p4));
    tmp_4_fu_365_p3 <= r_V_2_fu_353_p2(24 downto 24);
    tmp_6_fu_235_p4 <= r_V_1_fu_217_p2(55 downto 24);
    tmp_7_fu_377_p4 <= r_V_3_fu_359_p2(55 downto 24);
    tmp_fu_223_p3 <= r_V_fu_211_p2(24 downto 24);
    ush_1_fu_337_p3 <= 
        sext_ln1512_1_fu_333_p1 when (isNeg_1_fu_319_p3(0) = '1') else 
        add_ln346_1_fu_313_p2;
    ush_fu_195_p3 <= 
        sext_ln1512_fu_191_p1 when (isNeg_fu_177_p3(0) = '1') else 
        add_ln346_fu_171_p2;
    val_1_fu_387_p3 <= 
        zext_ln818_1_fu_373_p1 when (isNeg_1_fu_319_p3(0) = '1') else 
        tmp_7_fu_377_p4;
    val_fu_245_p3 <= 
        zext_ln818_fu_231_p1 when (isNeg_fu_177_p3(0) = '1') else 
        tmp_6_fu_235_p4;
    xs_exp_V_1_fu_275_p4 <= in_r_TDATA(62 downto 55);
    xs_exp_V_fu_139_p4 <= in_r_TDATA(30 downto 23);
    zext_ln1488_1_fu_349_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1488_1_fu_345_p1),79));
    zext_ln1488_fu_207_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1488_fu_203_p1),79));
    zext_ln15_1_fu_305_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_1_fu_295_p4),79));
    zext_ln15_fu_163_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_fu_153_p4),79));
    zext_ln346_1_fu_309_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_V_1_fu_275_p4),9));
    zext_ln346_fu_167_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_V_fu_139_p4),9));
    zext_ln818_1_fu_373_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_365_p3),32));
    zext_ln818_fu_231_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_223_p3),32));
end behav;
